{"ast":null,"code":"import { c as LocalizationContext, e as _toConsumableArray, b as _slicedToArray, a as _objectSpread2, f as _defineProperty } from './LocalizationContext-963dc1a0.js';\nimport React__default, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { L as Label, a as LabelTypography, b as LabelColors } from './index-6ff1fa1b.js';\nimport { M as Modal, T as Type } from './index-f66438bd.js';\nimport { U as UserListItem } from './index-ec4c0e85.js';\n\nfunction Badge(_ref) {\n  var count = _ref.count,\n      maxLevel = _ref.maxLevel,\n      className = _ref.className;\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var maximumNumber = parseInt('9'.repeat(maxLevel > 6 ? 6 : maxLevel), 10);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-badge']).join(' ')\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-badge__text\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONCONTENT_1\n  }, count > maximumNumber ? \"\".concat(maximumNumber).concat(stringSet.BADGE__OVER) : count)));\n}\n\nBadge.propTypes = {\n  count: PropTypes.number.isRequired,\n  maxLevel: PropTypes.number,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n};\nBadge.defaultProps = {\n  maxLevel: 2,\n  className: []\n};\n\nvar filterUser = function filterUser(idsToFilter) {\n  return function (currentId) {\n    return idsToFilter.includes(currentId);\n  };\n};\n\nvar InviteMembers = function InviteMembers(props) {\n  var userQueryCreator = props.userQueryCreator,\n      closeModal = props.closeModal,\n      _onSubmit = props.onSubmit,\n      submitText = props.submitText,\n      titleText = props.titleText,\n      idsToFilter = props.idsToFilter,\n      swapParams = props.swapParams;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedUsers = _useState4[0],\n      setSelectedUsers = _useState4[1];\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      usersDataSource = _useState6[0],\n      setUsersDataSource = _useState6[1];\n\n  var selectedCount = Object.keys(selectedUsers).length;\n  useEffect(function () {\n    var applicationUserListQuery = userQueryCreator();\n    setUsersDataSource(applicationUserListQuery);\n    applicationUserListQuery.next(function (res, err) {\n      // eslint-disable-next-line no-underscore-dangle\n      var users_ = res;\n      var error = err;\n\n      if (swapParams) {\n        users_ = err;\n        error = users_;\n      }\n\n      if (error) {\n        return;\n      }\n\n      setUsers(users_);\n    });\n  }, []);\n  return /*#__PURE__*/React__default.createElement(Modal, {\n    titleText: titleText,\n    submitText: submitText,\n    type: Type.PRIMARY,\n    onCancel: closeModal,\n    onSubmit: function onSubmit() {\n      var selectedUserList = Object.keys(selectedUsers);\n\n      if (selectedUserList.length > 0) {\n        _onSubmit(selectedUserList);\n\n        closeModal();\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Label, {\n    color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3,\n    type: LabelTypography.CAPTION_1\n  }, \"\".concat(selectedCount, \" \").concat(stringSet.MODAL__INVITE_MEMBER__SELECTEC)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-create-channel--scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = usersDataSource.hasNext;\n      var fetchMore = e.target.clientHeight + e.target.scrollTop === e.target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        usersDataSource.next(function (usersBatch, error) {\n          if (error) {\n            return;\n          }\n\n          setUsers([].concat(_toConsumableArray(users), _toConsumableArray(usersBatch)));\n        });\n      }\n    }\n  }, users.map(function (user) {\n    return !filterUser(idsToFilter)(user.userId) && /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: user.userId,\n      user: user,\n      checkBox: true,\n      checked: selectedUsers[user.userId],\n      onChange: function onChange(event) {\n        var modifiedSelectedUsers = _objectSpread2(_objectSpread2({}, selectedUsers), {}, _defineProperty({}, event.target.id, event.target.checked));\n\n        if (!event.target.checked) {\n          delete modifiedSelectedUsers[event.target.id];\n        }\n\n        setSelectedUsers(modifiedSelectedUsers);\n      }\n    });\n  }))));\n};\n\nInviteMembers.propTypes = {\n  idsToFilter: PropTypes.arrayOf(PropTypes.string),\n  swapParams: PropTypes.bool,\n  userQueryCreator: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  submitText: PropTypes.string,\n  titleText: PropTypes.string\n};\nInviteMembers.defaultProps = {\n  swapParams: false,\n  submitText: 'create',\n  titleText: 'Create new channel',\n  idsToFilter: []\n};\n\nvar createDefaultUserListQuery = function createDefaultUserListQuery(_ref) {\n  var sdk = _ref.sdk,\n      _ref$userFilledApplic = _ref.userFilledApplicationUserListQuery,\n      userFilledApplicationUserListQuery = _ref$userFilledApplic === void 0 ? {} : _ref$userFilledApplic;\n  var params = sdk.createApplicationUserListQuery();\n\n  if (userFilledApplicationUserListQuery) {\n    Object.keys(userFilledApplicationUserListQuery).forEach(function (key) {\n      params[key] = userFilledApplicationUserListQuery[key];\n    });\n  }\n\n  return params;\n};\n\nvar getApplicationAttributes = function getApplicationAttributes() {\n  var sdk = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _sdk$appInfo = sdk.appInfo,\n      appInfo = _sdk$appInfo === void 0 ? {} : _sdk$appInfo;\n  var _appInfo$applicationA = appInfo.applicationAttributes,\n      applicationAttributes = _appInfo$applicationA === void 0 ? [] : _appInfo$applicationA;\n  return applicationAttributes;\n};\n\nvar isBroadcastChannelEnabled = function isBroadcastChannelEnabled() {\n  var sdk = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var ALLOW_BROADCAST_CHANNEL = 'allow_broadcast_channel';\n  var applicationAttributes = getApplicationAttributes(sdk);\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_BROADCAST_CHANNEL);\n  }\n\n  return false;\n};\n\nvar isSuperGroupChannelEnabled = function isSuperGroupChannelEnabled() {\n  var sdk = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var ALLOW_SUPER_GROUP_CHANNEL = 'allow_super_group_channel';\n  var applicationAttributes = getApplicationAttributes(sdk);\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_SUPER_GROUP_CHANNEL);\n  }\n\n  return false;\n};\n\nvar setChannelType = function setChannelType(params, type) {\n  if (type === 'broadcast') {\n    // eslint-disable-next-line no-param-reassign\n    params.isBroadcast = true;\n  }\n\n  if (type === 'supergroup') {\n    // eslint-disable-next-line no-param-reassign\n    params.isSuper = true;\n  }\n\n  return params;\n};\n\nvar createChannel = function createChannel(sdk, selectedUsers, onBeforeCreateChannel, userId) {\n  var type = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'group';\n  return new Promise(function (resolve, reject) {\n    // have custom params\n    if (onBeforeCreateChannel) {\n      var _params = onBeforeCreateChannel(selectedUsers);\n\n      setChannelType(_params, type);\n      sdk.GroupChannel.createChannel(_params, function (response, error) {\n        var swapParams = sdk.getErrorFirstCallback();\n        var groupChannel = response;\n        var err = error;\n\n        if (swapParams) {\n          groupChannel = error;\n          err = response;\n        }\n\n        if (err) {\n          reject(err);\n        }\n\n        resolve(groupChannel);\n      });\n      return;\n    }\n\n    var params = new sdk.GroupChannelParams();\n    params.addUserIds(selectedUsers);\n    params.isDistinct = false;\n\n    if (userId) {\n      params.operatorUserIds = [userId];\n    }\n\n    setChannelType(params, type); // do not have custom params\n\n    sdk.GroupChannel.createChannel(params, function (response, error) {\n      var swapParams = sdk.getErrorFirstCallback();\n      var groupChannel = response;\n      var err = error;\n\n      if (swapParams) {\n        groupChannel = error;\n        err = response;\n      }\n\n      if (err) {\n        reject(err);\n      }\n\n      resolve(groupChannel);\n    });\n  });\n};\n\nvar LeaveChannel = function LeaveChannel(props) {\n  var onCloseModal = props.onCloseModal,\n      onLeaveChannel = props.onLeaveChannel;\n  return /*#__PURE__*/React__default.createElement(Modal, {\n    onCancel: onCloseModal,\n    onSubmit: onLeaveChannel,\n    submitText: \"Leave\",\n    titleText: \"Leave this channel?\"\n  });\n};\n\nLeaveChannel.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onLeaveChannel: PropTypes.func.isRequired\n};\nexport { Badge as B, InviteMembers as I, LeaveChannel as L, isSuperGroupChannelEnabled as a, createChannel as b, createDefaultUserListQuery as c, isBroadcastChannelEnabled as i };","map":{"version":3,"mappings":"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","names":["Badge","count","maxLevel","className","useContext","LocalizationContext","stringSet","maximumNumber","parseInt","repeat","React","Array","isArray","join","Label","type","LabelTypography","CAPTION_2","color","LabelColors","ONCONTENT_1","BADGE__OVER","propTypes","PropTypes","number","isRequired","oneOfType","string","arrayOf","defaultProps","filterUser","idsToFilter","currentId","includes","InviteMembers","props","userQueryCreator","closeModal","onSubmit","submitText","titleText","swapParams","useState","users","setUsers","selectedUsers","setSelectedUsers","usersDataSource","setUsersDataSource","selectedCount","Object","keys","length","useEffect","applicationUserListQuery","next","res","err","users_","error","Modal","ButtonTypes","PRIMARY","onCancel","selectedUserList","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","onScroll","e","hasNext","fetchMore","target","clientHeight","scrollTop","scrollHeight","usersBatch","map","user","userId","UserListItem","key","checkBox","checked","onChange","event","modifiedSelectedUsers","id","bool","func","createDefaultUserListQuery","sdk","userFilledApplicationUserListQuery","params","createApplicationUserListQuery","forEach","getApplicationAttributes","appInfo","applicationAttributes","isBroadcastChannelEnabled","ALLOW_BROADCAST_CHANNEL","isSuperGroupChannelEnabled","ALLOW_SUPER_GROUP_CHANNEL","setChannelType","isBroadcast","isSuper","createChannel","onBeforeCreateChannel","Promise","resolve","reject","GroupChannel","response","getErrorFirstCallback","groupChannel","GroupChannelParams","addUserIds","isDistinct","operatorUserIds","LeaveChannel","onCloseModal","onLeaveChannel"],"sources":["C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\Badge\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\InviteMembers\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelList\\components\\utils.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\LeaveChannel.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport default function Badge({\n  count,\n  maxLevel,\n  className,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const maximumNumber = parseInt('9'.repeat((maxLevel > 6) ? 6 : maxLevel), 10);\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-badge',\n      ].join(' ')}\n    >\n      <div className=\"sendbird-badge__text\">\n        <Label\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONCONTENT_1}\n        >\n          {\n            (count > maximumNumber)\n              ? `${maximumNumber}${stringSet.BADGE__OVER}`\n              : count\n          }\n        </Label>\n      </div>\n    </div>\n  );\n}\n\nBadge.propTypes = {\n  count: PropTypes.number.isRequired,\n  maxLevel: PropTypes.number,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nBadge.defaultProps = {\n  maxLevel: 2,\n  className: [],\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Modal from '../../ui/Modal';\nimport { Type as ButtonTypes } from '../../ui/Button/type';\nimport UserListItem from '../../ui/UserListItem';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nconst filterUser = (idsToFilter) => (currentId) => idsToFilter.includes(currentId);\n\nconst InviteMembers = (props) => {\n  const {\n    userQueryCreator,\n    closeModal,\n    onSubmit,\n    submitText,\n    titleText,\n    idsToFilter,\n    swapParams,\n  } = props;\n\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState({});\n  const { stringSet } = useContext(LocalizationContext);\n  const [usersDataSource, setUsersDataSource] = useState({});\n  const selectedCount = Object.keys(selectedUsers).length;\n\n  useEffect(() => {\n    const applicationUserListQuery = userQueryCreator();\n    setUsersDataSource(applicationUserListQuery);\n    applicationUserListQuery.next((res, err) => {\n      // eslint-disable-next-line no-underscore-dangle\n      let users_ = res;\n      let error = err;\n      if (swapParams) {\n        users_ = err;\n        error = users_;\n      }\n      if (error) {\n        return;\n      }\n      setUsers(users_);\n    });\n  }, []);\n\n  return (\n    <Modal\n      titleText={titleText}\n      submitText={submitText}\n      type={ButtonTypes.PRIMARY}\n      onCancel={closeModal}\n      onSubmit={() => {\n        const selectedUserList = Object.keys(selectedUsers);\n        if (selectedUserList.length > 0) {\n          onSubmit(selectedUserList);\n          closeModal();\n        }\n      }}\n    >\n      <div>\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-create-channel--scroll\"\n          onScroll={(e) => {\n            const { hasNext } = usersDataSource;\n            const fetchMore = (\n              e.target.clientHeight + e.target.scrollTop === e.target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              usersDataSource.next((usersBatch, error) => {\n                if (error) {\n                  return;\n                }\n                setUsers([\n                  ...users,\n                  ...usersBatch,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            users.map((user) => (!filterUser(idsToFilter)(user.userId)) && (\n              <UserListItem\n                key={user.userId}\n                user={user}\n                checkBox\n                checked={selectedUsers[user.userId]}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedUsers = {\n                      ...selectedUsers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedUsers[event.target.id];\n                    }\n                    setSelectedUsers(modifiedSelectedUsers);\n                  }\n                }\n              />\n            ))\n          }\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nInviteMembers.propTypes = {\n  idsToFilter: PropTypes.arrayOf(PropTypes.string),\n  swapParams: PropTypes.bool,\n  userQueryCreator: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  submitText: PropTypes.string,\n  titleText: PropTypes.string,\n};\nInviteMembers.defaultProps = {\n  swapParams: false,\n  submitText: 'create',\n  titleText: 'Create new channel',\n  idsToFilter: [],\n};\n\nexport default InviteMembers;\n","export const createDefaultUserListQuery = ({ sdk, userFilledApplicationUserListQuery = {} }) => {\n  const params = sdk.createApplicationUserListQuery();\n  if (userFilledApplicationUserListQuery) {\n    Object.keys(userFilledApplicationUserListQuery).forEach((key) => {\n      params[key] = userFilledApplicationUserListQuery[key];\n    });\n  }\n  return params;\n};\n\nconst getApplicationAttributes = (sdk = {}) => {\n  const { appInfo = {} } = sdk;\n  const { applicationAttributes = [] } = appInfo;\n  return applicationAttributes;\n};\n\nexport const isBroadcastChannelEnabled = (sdk = {}) => {\n  const ALLOW_BROADCAST_CHANNEL = 'allow_broadcast_channel';\n  const applicationAttributes = getApplicationAttributes(sdk);\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_BROADCAST_CHANNEL);\n  }\n\n  return false;\n};\nexport const isSuperGroupChannelEnabled = (sdk = {}) => {\n  const ALLOW_SUPER_GROUP_CHANNEL = 'allow_super_group_channel';\n  const applicationAttributes = getApplicationAttributes(sdk);\n\n  if (Array.isArray(applicationAttributes)) {\n    return applicationAttributes.includes(ALLOW_SUPER_GROUP_CHANNEL);\n  }\n\n  return false;\n};\n\nexport const setChannelType = (params, type) => {\n  if (type === 'broadcast') {\n    // eslint-disable-next-line no-param-reassign\n    params.isBroadcast = true;\n  }\n  if (type === 'supergroup') {\n    // eslint-disable-next-line no-param-reassign\n    params.isSuper = true;\n  }\n  return params;\n};\n\nexport const createChannel = (\n  sdk,\n  selectedUsers,\n  onBeforeCreateChannel,\n  userId,\n  type = 'group',\n) => new Promise((resolve, reject) => {\n  // have custom params\n  if (onBeforeCreateChannel) {\n    const params = onBeforeCreateChannel(selectedUsers);\n    setChannelType(params, type);\n    sdk.GroupChannel.createChannel(params, (response, error) => {\n      const swapParams = sdk.getErrorFirstCallback();\n      let groupChannel = response;\n      let err = error;\n      if (swapParams) {\n        groupChannel = error;\n        err = response;\n      }\n      if (err) {\n        reject(err);\n      }\n      resolve(groupChannel);\n    });\n    return;\n  }\n\n  const params = new sdk.GroupChannelParams();\n  params.addUserIds(selectedUsers);\n  params.isDistinct = false;\n\n  if (userId) {\n    params.operatorUserIds = [userId];\n  }\n  setChannelType(params, type);\n  // do not have custom params\n  sdk.GroupChannel.createChannel(\n    params,\n    (response, error) => {\n      const swapParams = sdk.getErrorFirstCallback();\n      let groupChannel = response;\n      let err = error;\n      if (swapParams) {\n        groupChannel = error;\n        err = response;\n      }\n      if (err) {\n        reject(err);\n      }\n      resolve(groupChannel);\n    },\n  );\n});\n\nexport default createChannel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\n\nconst LeaveChannel = (props) => {\n  const {\n    onCloseModal,\n    onLeaveChannel,\n  } = props;\n  return (\n    <Modal\n      onCancel={onCloseModal}\n      onSubmit={onLeaveChannel}\n      submitText=\"Leave\"\n      titleText=\"Leave this channel?\"\n    />\n  );\n};\n\nLeaveChannel.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onLeaveChannel: PropTypes.func.isRequired,\n};\n\nexport default LeaveChannel;\n"]},"metadata":{},"sourceType":"module"}