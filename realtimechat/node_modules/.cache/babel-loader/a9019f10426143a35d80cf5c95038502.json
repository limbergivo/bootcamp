{"ast":null,"code":"var DEFAULT_URL_PREFIX = 'https://static.sendbird.com/sample/cover/cover_';\n\nvar getOpenChannelAvatar = function getOpenChannelAvatar(channel) {\n  if (channel && channel.coverUrl) {\n    return channel.coverUrl;\n  }\n};\n\nvar getChannelAvatarSource = function getChannelAvatarSource(channel, currentUserId) {\n  if (channel && channel.coverUrl) {\n    if (!new RegExp(\"^\" + DEFAULT_URL_PREFIX).test(channel.coverUrl)) {\n      return channel.coverUrl;\n    }\n  }\n\n  return channel && channel.members ? channel.members.filter(function (member) {\n    return member.userId !== currentUserId;\n  }).map(function (_a) {\n    var profileUrl = _a.profileUrl;\n    return profileUrl;\n  }) : [];\n};\n\nvar useDefaultAvatar = function useDefaultAvatar(channel) {\n  if (channel && channel.coverUrl) {\n    if (new RegExp(\"^\" + DEFAULT_URL_PREFIX).test(channel.coverUrl)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return true;\n};\n\nexport { getChannelAvatarSource as a, getOpenChannelAvatar as g, useDefaultAvatar as u };","map":{"version":3,"mappings":"AAAO,IAAMA,kBAAkB,GAAG,iDAA3B;;IAEMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD;EAClC,IAAIA,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;IAC/B,OAAOD,OAAO,CAACC,QAAf;EACD;AACF;;IAEYC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACF,OAAD,EAAiCG,aAAjC;EACpC,IAAIH,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;IAC/B,IAAI,CAAE,IAAIG,MAAJ,CAAW,MAAIN,kBAAf,EAAqCO,IAArC,CAA0CL,OAAO,CAACC,QAAlD,CAAN,EAAoE;MAClE,OAAOD,OAAO,CAACC,QAAf;IACD;EACF;;EAED,OAAOD,OAAO,IAAIA,OAAO,CAACM,OAAnBN,GACHA,OAAO,CAACM,OAARN,CACCO,MADDP,CACQ,UAACQ,MAAD;IAAY,aAAM,CAACC,MAAPD,KAAkBL,aAAlB;EADpB,GAECO,GAFDV,CAEK,UAACW,EAAD;QAAGC,UAAU;IAAO;EAFzB,EADGZ,GAIH,EAJJ;AAKD;;IAGYa,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACb,OAAD;EAC9B,IAAIA,OAAO,IAAIA,OAAO,CAACC,QAAvB,EAAiC;IAC/B,IAAI,IAAIG,MAAJ,CAAW,MAAIN,kBAAf,EAAqCO,IAArC,CAA0CL,OAAO,CAACC,QAAlD,CAAJ,EAAiE;MAC/D,OAAO,IAAP;IACD;;IACD,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD","names":["DEFAULT_URL_PREFIX","getOpenChannelAvatar","channel","coverUrl","getChannelAvatarSource","currentUserId","RegExp","test","members","filter","member","userId","map","_a","profileUrl","useDefaultAvatar"],"sources":["C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\ChannelAvatar\\utils.ts"],"sourcesContent":["export const DEFAULT_URL_PREFIX = 'https://static.sendbird.com/sample/cover/cover_';\n\nexport const getOpenChannelAvatar = (channel: SendBird.OpenChannel): string => {\n  if (channel && channel.coverUrl) {\n    return channel.coverUrl;\n  }\n};\n\nexport const getChannelAvatarSource = (channel: SendBird.GroupChannel, currentUserId: string): string | Array<string> => {\n  if (channel && channel.coverUrl) {\n    if (!(new RegExp(`^${DEFAULT_URL_PREFIX}`).test(channel.coverUrl))) {\n      return channel.coverUrl;\n    }\n  }\n\n  return channel && channel.members\n    ? channel.members\n      .filter((member) => member.userId !== currentUserId)\n      .map(({ profileUrl }) => profileUrl)\n    : [];\n};\n\n\nexport const useDefaultAvatar = (channel: SendBird.GroupChannel): boolean => {\n  if (channel && channel.coverUrl) {\n    if (new RegExp(`^${DEFAULT_URL_PREFIX}`).test(channel.coverUrl)) {\n      return true;\n    }\n    return false;\n  }\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}