{"ast":null,"code":"import { b as _slicedToArray, c as LocalizationContext, e as _toConsumableArray } from './LocalizationContext-963dc1a0.js';\nimport React__default, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, A as Avatar } from './index-6ff1fa1b.js';\nimport { U as UserProfileContext, C as ContextMenu, b as MenuItems, f as ConnectedUserProfile } from './index-f66438bd.js';\n\nvar InputLabel = function InputLabel(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-input-label\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_1\n  }, children);\n};\n\nInputLabel.propTypes = {\n  children: PropTypes.string.isRequired\n}; // future: add validations? onChange? more props etc etc\n\nvar Input = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var name = props.name,\n      required = props.required,\n      disabled = props.disabled,\n      placeHolder = props.placeHolder,\n      value = props.value;\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-input\"\n  }, /*#__PURE__*/React__default.createElement(\"input\", {\n    className: \"sendbird-input__input\",\n    ref: ref,\n    name: name,\n    required: required,\n    disabled: disabled,\n    value: inputValue,\n    onChange: function onChange(e) {\n      setInputValue(e.target.value);\n    }\n  }), placeHolder && !inputValue && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-input__placeholder\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_3\n  }, placeHolder));\n});\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeHolder: PropTypes.string,\n  value: PropTypes.string\n};\nInput.defaultProps = {\n  required: false,\n  disabled: false,\n  placeHolder: '',\n  value: ''\n};\n\nvar noop = function noop() {};\n\nfunction MutedAvatarOverlay(props) {\n  var _a = props.height,\n      height = _a === void 0 ? 24 : _a,\n      _b = props.width,\n      width = _b === void 0 ? 24 : _b;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-muted-avatar\",\n    style: {\n      height: height + \"px\",\n      width: width + \"px\"\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-muted-avatar__icon\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-muted-avatar__bg\",\n    style: {\n      height: height + \"px\",\n      width: width + \"px\"\n    }\n  }), /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.MUTE,\n    fillColor: IconColors.WHITE,\n    width: height - 8 + \"px\",\n    height: width - 8 + \"px\"\n  })));\n}\n\nfunction Checkbox(_ref) {\n  var id = _ref.id,\n      checked = _ref.checked,\n      onChange = _ref.onChange;\n\n  var _useState = useState(checked),\n      _useState2 = _slicedToArray(_useState, 2),\n      isChecked = _useState2[0],\n      setCheck = _useState2[1];\n\n  return /*#__PURE__*/React__default.createElement(\"label\", {\n    className: \"sendbird-checkbox\",\n    htmlFor: id\n  }, /*#__PURE__*/React__default.createElement(\"input\", {\n    id: id,\n    type: \"checkbox\",\n    checked: isChecked,\n    onClick: function onClick() {\n      return setCheck(!isChecked);\n    },\n    onChange: onChange\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"sendbird-checkbox--checkmark\"\n  }));\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\nCheckbox.defaultProps = {\n  id: 'sendbird-checkbox-input',\n  checked: false,\n  onChange: function onChange() {}\n};\n\nfunction UserListItem(_ref) {\n  var className = _ref.className,\n      user = _ref.user,\n      checkBox = _ref.checkBox,\n      disableMessaging = _ref.disableMessaging,\n      currentUser = _ref.currentUser,\n      checked = _ref.checked,\n      _onChange = _ref.onChange,\n      action = _ref.action;\n  var uniqueKey = user.userId;\n  var actionRef = React__default.useRef(null);\n  var parentRef = React__default.useRef(null);\n  var avatarRef = React__default.useRef(null);\n\n  var _useContext = useContext(UserProfileContext),\n      disableUserProfile = _useContext.disableUserProfile,\n      renderUserProfile = _useContext.renderUserProfile;\n\n  var _useContext2 = useContext(LocalizationContext),\n      stringSet = _useContext2.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-user-list-item']).join(' '),\n    ref: parentRef\n  }, user.isMuted && /*#__PURE__*/React__default.createElement(MutedAvatarOverlay, {\n    height: 40,\n    width: 40\n  }), /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        className: \"sendbird-user-list-item__avatar\",\n        ref: avatarRef,\n        src: user.profileUrl,\n        width: \"40px\",\n        height: \"40px\",\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        }\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef // for catching location(x, y) of MenuItems\n        ,\n        parentContainRef: avatarRef // for toggling more options(menus & reactions)\n        ,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: user,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        disableMessaging: disableMessaging,\n        user: user,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__title\",\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && ' (You)'), // if there is now nickname, display userId\n  !user.nickname && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__subtitle\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, user.userId), checkBox &&\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/label-has-associated-control\n  React__default.createElement(\"label\", {\n    className: \"sendbird-user-list-item__checkbox\",\n    htmlFor: uniqueKey\n  }, /*#__PURE__*/React__default.createElement(Checkbox, {\n    id: uniqueKey,\n    checked: checked,\n    onChange: function onChange(event) {\n      return _onChange(event);\n    }\n  })), user.role === 'operator' && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__operator\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, \"Operator\"), action && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-user-list-item__action\",\n    ref: actionRef\n  }, action({\n    actionRef: actionRef,\n    parentRef: parentRef\n  })));\n}\n\nUserListItem.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  user: PropTypes.shape({\n    userId: PropTypes.string,\n    role: PropTypes.string,\n    isMuted: PropTypes.bool,\n    nickname: PropTypes.string,\n    profileUrl: PropTypes.string\n  }).isRequired,\n  disableMessaging: PropTypes.bool,\n  currentUser: PropTypes.string,\n  action: PropTypes.element,\n  checkBox: PropTypes.bool,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\nUserListItem.defaultProps = {\n  className: '',\n  currentUser: '',\n  checkBox: false,\n  disableMessaging: false,\n  checked: false,\n  action: null,\n  onChange: function onChange() {}\n};\nexport { InputLabel as I, MutedAvatarOverlay as M, UserListItem as U, Input as a, noop as n };","map":{"version":3,"mappings":"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","names":["InputLabel","children","React","Label","className","type","LabelTypography","CAPTION_3","color","LabelColors","ONBACKGROUND_1","propTypes","PropTypes","string","isRequired","Input","forwardRef","props","ref","name","required","disabled","placeHolder","value","useState","inputValue","setInputValue","onChange","e","target","BODY_1","ONBACKGROUND_3","bool","defaultProps","noop","MutedAvatarOverlay","_a","_b","width","style","height","Icon","IconTypes","MUTE","fillColor","IconColors","WHITE","Checkbox","id","checked","isChecked","setCheck","htmlFor","onClick","func","UserListItem","user","checkBox","disableMessaging","currentUser","action","uniqueKey","userId","actionRef","useRef","parentRef","avatarRef","useContext","UserProfileContext","disableUserProfile","renderUserProfile","LocalizationContext","stringSet","Array","isArray","join","isMuted","ContextMenu","menuTrigger","toggleDropdown","Avatar","src","profileUrl","menuItems","closeDropdown","MenuItems","openLeft","parentContainRef","paddingTop","paddingBottom","currentUserId","close","UserProfile","onSuccess","SUBTITLE_1","nickname","NO_NAME","ONBACKGROUND_2","React__default","event","role","SUBTITLE_2","oneOfType","arrayOf","shape","element"],"sources":["C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\Input\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\utils\\utils.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\Avatar\\MutedAvatarOverlay.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\Checkbox\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\UserListItem\\index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport './index.scss';\n\nexport const InputLabel = ({ children }) => (\n  <Label\n    className=\"sendbird-input-label\"\n    type={LabelTypography.CAPTION_3}\n    color={LabelColors.ONBACKGROUND_1}\n  >\n    {children}\n  </Label>\n);\n\nInputLabel.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\n// future: add validations? onChange? more props etc etc\nconst Input = React.forwardRef((props, ref) => {\n  const {\n    name,\n    required,\n    disabled,\n    placeHolder,\n    value,\n  } = props;\n  const [inputValue, setInputValue] = useState(value);\n  return (\n    <div className=\"sendbird-input\">\n      <input\n        className=\"sendbird-input__input\"\n        ref={ref}\n        name={name}\n        required={required}\n        disabled={disabled}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n      />\n      {(placeHolder && !inputValue) && (\n        <Label\n          className=\"sendbird-input__placeholder\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {placeHolder}\n        </Label>\n      )}\n    </div>\n  );\n});\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeHolder: PropTypes.string,\n  value: PropTypes.string,\n};\n\nInput.defaultProps = {\n  required: false,\n  disabled: false,\n  placeHolder: '',\n  value: '',\n};\n\nexport default Input;\n","export const noop = () => {};\n\nexport const getSenderName = (message) => (\n  message.sender && (\n    message.sender.friendName\n    || message.sender.nickname\n    || message.sender.userId\n  )\n);\n\nexport const getSenderProfileUrl = (message) => message.sender && message.sender.profileUrl;\n\nexport default {\n  getSenderName,\n  getSenderProfileUrl,\n};\n","import './muted-avatar-overlay.scss';\n\nimport React, { ReactElement } from 'react'\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\ninterface Props {\n  height?: number;\n  width?: number;\n}\n\nexport default function MutedAvatarOverlay(props: Props): ReactElement {\n  const { height = 24, width = 24 } = props;\n  return (\n    <div\n      className=\"sendbird-muted-avatar\"\n      style={{\n        height: `${height}px`,\n        width: `${width}px`,\n      }}\n    >\n      <div className=\"sendbird-muted-avatar__icon\">\n        <div\n          className=\"sendbird-muted-avatar__bg\"\n          style={{\n            height: `${height}px`,\n            width: `${width}px`,\n          }}\n        />\n        <Icon\n          type={IconTypes.MUTE}\n          fillColor={IconColors.WHITE}\n          width={`${height - 8}px`}\n          height={`${width - 8}px`}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nexport default function Checkbox({\n  id,\n  checked,\n  onChange,\n}) {\n  const [isChecked, setCheck] = useState(checked);\n  return (\n    <label className=\"sendbird-checkbox\" htmlFor={id}>\n      <input\n        id={id}\n        type=\"checkbox\"\n        checked={isChecked}\n        onClick={() => setCheck(!isChecked)}\n        onChange={onChange}\n      />\n      <span className=\"sendbird-checkbox--checkmark\" />\n    </label>\n  );\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nCheckbox.defaultProps = {\n  id: 'sendbird-checkbox-input',\n  checked: false,\n  onChange: () => { },\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Avatar from '../Avatar/index';\nimport MutedAvatarOverlay from '../Avatar/MutedAvatarOverlay';\nimport Checkbox from '../Checkbox';\nimport UserProfile from '../UserProfile';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nexport default function UserListItem({\n  className,\n  user,\n  checkBox,\n  disableMessaging,\n  currentUser,\n  checked,\n  onChange,\n  action,\n}) {\n  const uniqueKey = user.userId;\n  const actionRef = React.useRef(null);\n  const parentRef = React.useRef(null);\n  const avatarRef = React.useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-user-list-item',\n      ].join(' ')}\n      ref={parentRef}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay height={40} width={40} />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            className=\"sendbird-user-list-item__avatar\"\n            ref={avatarRef}\n            src={user.profileUrl}\n            width=\"40px\"\n            height=\"40px\"\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    disableMessaging={disableMessaging}\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className=\"sendbird-user-list-item__title\"\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            ' (You)'\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className=\"sendbird-user-list-item__subtitle\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        checkBox && (\n          // eslint-disable-next-line jsx-a11y/label-has-associated-control\n          <label\n            className=\"sendbird-user-list-item__checkbox\"\n            htmlFor={uniqueKey}\n          >\n            <Checkbox\n              id={uniqueKey}\n              checked={checked}\n              onChange={(event) => onChange(event)}\n            />\n          </label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className=\"sendbird-user-list-item__operator\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div\n            className=\"sendbird-user-list-item__action\"\n            ref={actionRef}\n          >\n            { action({ actionRef, parentRef })}\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nUserListItem.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  user: PropTypes.shape({\n    userId: PropTypes.string,\n    role: PropTypes.string,\n    isMuted: PropTypes.bool,\n    nickname: PropTypes.string,\n    profileUrl: PropTypes.string,\n  }).isRequired,\n  disableMessaging: PropTypes.bool,\n  currentUser: PropTypes.string,\n  action: PropTypes.element,\n  checkBox: PropTypes.bool,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nUserListItem.defaultProps = {\n  className: '',\n  currentUser: '',\n  checkBox: false,\n  disableMessaging: false,\n  checked: false,\n  action: null,\n  onChange: () => { },\n};\n"]},"metadata":{},"sourceType":"module"}