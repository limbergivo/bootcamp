{"ast":null,"code":"import { _ as __assign, d as __spreadArray } from './LocalizationContext-963dc1a0.js';\nvar SUPPORTED_MIMES = {\n  IMAGE: ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/svg+xml', 'image/webp' // not supported in IE\n  ],\n  VIDEO: ['video/mpeg', 'video/ogg', 'video/webm', 'video/mp4'],\n  AUDIO: ['audio/aac', 'audio/midi', 'audio/x-midi', 'audio/mpeg', 'audio/ogg', 'audio/opus', 'audio/wav', 'audio/webm', 'audio/3gpp', 'audio/3gpp2', 'audio/mp3']\n};\nvar UIKitMessageTypes = {\n  ADMIN: \"ADMIN\",\n  TEXT: \"TEXT\",\n  FILE: \"FILE\",\n  THUMBNAIL: \"THUMBNAIL\",\n  OG: \"OG\",\n  UNKNOWN: \"UNKNOWN\"\n};\nvar UIKitFileTypes = {\n  IMAGE: \"IMAGE\",\n  AUDIO: \"AUDIO\",\n  VIDEO: \"VIDEO\",\n  GIF: \"GIF\",\n  OTHERS: \"OTHERS\"\n};\nvar SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending'\n};\nvar OutgoingMessageStates = {\n  NONE: 'NONE',\n  PENDING: 'PENDING',\n  SENT: 'SENT',\n  FAILED: 'FAILED',\n  DELIVERED: 'DELIVERED',\n  READ: 'READ'\n};\n\nvar isTextuallyNull = function isTextuallyNull(text) {\n  if (text === '' || text === null) {\n    return true;\n  }\n\n  return false;\n};\n\nvar isImage = function isImage(type) {\n  return SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\n};\n\nvar isVideo = function isVideo(type) {\n  return SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\n};\n\nvar isGif = function isGif(type) {\n  return type === 'image/gif';\n};\n\nvar isSupportedFileView = function isSupportedFileView(type) {\n  return isImage(type) || isVideo(type);\n};\n\nvar isAudio = function isAudio(type) {\n  return SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;\n};\n\nvar getUIKitFileTypes = function getUIKitFileTypes() {\n  return __assign({}, UIKitFileTypes);\n};\n\nvar getUIKitFileType = function getUIKitFileType(type) {\n  if (isGif(type)) return UIKitFileTypes.GIF;\n  if (isImage(type)) return UIKitFileTypes.IMAGE;\n  if (isVideo(type)) return UIKitFileTypes.VIDEO;\n  if (isAudio(type)) return UIKitFileTypes.AUDIO;\n  return UIKitFileTypes.OTHERS;\n};\n\nvar getOutgoingMessageStates = function getOutgoingMessageStates() {\n  return __assign({}, OutgoingMessageStates);\n};\n\nvar getOutgoingMessageState = function getOutgoingMessageState(channel, message) {\n  var _a;\n\n  if (message.sendingStatus === 'pending') return OutgoingMessageStates.PENDING;\n  if (message.sendingStatus === 'failed') return OutgoingMessageStates.FAILED;\n\n  if ((_a = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _a === void 0 ? void 0 : _a.call(channel)) {\n    /* GroupChannel only */\n    if (channel.getUnreadMemberCount(message) === 0) {\n      return OutgoingMessageStates.READ;\n    } else if (channel.getUndeliveredMemberCount(message) === 0) {\n      return OutgoingMessageStates.DELIVERED;\n    }\n  }\n\n  if (message.sendingStatus === 'succeeded') return OutgoingMessageStates.SENT;\n  return OutgoingMessageStates.NONE;\n};\n\nvar isSentMessage = function isSentMessage(channel, message) {\n  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.SENT || getOutgoingMessageState(channel, message) === OutgoingMessageStates.DELIVERED || getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ;\n};\n\nvar isFailedMessage = function isFailedMessage(channel, message) {\n  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.FAILED;\n};\n\nvar isPendingMessage = function isPendingMessage(channel, message) {\n  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.PENDING;\n};\n\nvar isSentStatus = function isSentStatus(state) {\n  return state === OutgoingMessageStates.SENT || state === OutgoingMessageStates.DELIVERED || state === OutgoingMessageStates.READ;\n};\n\nvar isAdminMessage = function isAdminMessage(message) {\n  var _a;\n\n  return message && (((_a = message.isAdminMessage) === null || _a === void 0 ? void 0 : _a.call(message)) || message['messageType'] && message.messageType === 'admin');\n};\n\nvar isUserMessage = function isUserMessage(message) {\n  var _a;\n\n  return message && (((_a = message.isUserMessage) === null || _a === void 0 ? void 0 : _a.call(message)) || message['messageType'] && message.messageType === 'user');\n};\n\nvar isFileMessage = function isFileMessage(message) {\n  var _a;\n\n  return message && (((_a = message.isFileMessage) === null || _a === void 0 ? void 0 : _a.call(message)) || message['messageType'] && message.messageType === 'file');\n};\n\nvar isOGMessage = function isOGMessage(message) {\n  var _a;\n\n  return !!(message && isUserMessage(message) && (message === null || message === void 0 ? void 0 : message.ogMetaData) && ((_a = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _a === void 0 ? void 0 : _a.url));\n};\n\nvar isTextMessage = function isTextMessage(message) {\n  return isUserMessage(message) && !isOGMessage(message);\n};\n\nvar isThumbnailMessage = function isThumbnailMessage(message) {\n  return message && isFileMessage(message) && isSupportedFileView(message.type);\n};\n\nvar isImageMessage = function isImageMessage(message) {\n  return message && isThumbnailMessage(message) && isImage(message.type);\n};\n\nvar isVideoMessage = function isVideoMessage(message) {\n  return message && isThumbnailMessage(message) && isVideo(message.type);\n};\n\nvar isGifMessage = function isGifMessage(message) {\n  return message && isThumbnailMessage(message) && isGif(message.type);\n};\n\nvar isAudioMessage = function isAudioMessage(message) {\n  return message && isFileMessage(message) && isAudio(message.type);\n};\n\nvar isEditedMessage = function isEditedMessage(message) {\n  return isUserMessage(message) && (message === null || message === void 0 ? void 0 : message.updatedAt) > 0;\n};\n\nvar getUIKitMessageTypes = function getUIKitMessageTypes() {\n  return __assign({}, UIKitMessageTypes);\n};\n\nvar getUIKitMessageType = function getUIKitMessageType(message) {\n  if (isAdminMessage(message)) return UIKitMessageTypes.ADMIN;\n\n  if (isUserMessage(message)) {\n    return isOGMessage(message) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;\n  }\n\n  if (isFileMessage(message)) {\n    return isThumbnailMessage(message) ? UIKitMessageTypes.THUMBNAIL : UIKitMessageTypes.FILE;\n  }\n\n  return UIKitMessageTypes.UNKNOWN;\n};\n\nvar getSendingMessageStatus = function getSendingMessageStatus() {\n  return __assign({}, SendingMessageStatus);\n};\n\nvar reducer = function reducer(accumulator, currentValue) {\n  if (Array.isArray(currentValue)) {\n    return __spreadArray(__spreadArray([], accumulator, true), currentValue, true);\n  } else {\n    accumulator.push(currentValue);\n    return accumulator;\n  }\n};\n\nvar getClassName = function getClassName(classNames) {\n  return Array.isArray(classNames) ? classNames.reduce(reducer, []).join(' ') : classNames;\n};\n\nvar isReactedBy = function isReactedBy(userId, reaction) {\n  return reaction.userIds.some(function (reactorUserId) {\n    return reactorUserId === userId;\n  });\n};\n\nvar getEmojiTooltipString = function getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet) {\n  var you = '';\n\n  if (isReactedBy(userId, reaction)) {\n    you = reaction.userIds.length === 1 ? stringSet.TOOLTIP__YOU : stringSet.TOOLTIP__AND_YOU;\n  }\n\n  return \"\" + reaction.userIds.filter(function (reactorUserId) {\n    return reactorUserId !== userId;\n  }).map(function (reactorUserId) {\n    return memberNicknamesMap.get(reactorUserId) || stringSet.TOOLTIP__UNKNOWN_USER;\n  }).join(', ') + you;\n};\n\nvar URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nvar isUrl = function isUrl(text) {\n  return URL_REG.test(text);\n};\n\nvar truncateString = function truncateString(fullStr, strLen) {\n  if (!strLen) strLen = 40;\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  var separator = '...';\n  var sepLen = separator.length;\n  var charsToShow = strLen - sepLen;\n  var frontChars = Math.ceil(charsToShow / 2);\n  var backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n\nvar copyToClipboard = function copyToClipboard(text) {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    var textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n\n    document.body.appendChild(textarea);\n    textarea.select();\n\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n\n  return false;\n};\n\nvar getEmojiListAll = function getEmojiListAll(emojiContainer) {\n  var _a;\n\n  return (_a = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a === void 0 ? void 0 : _a.map(function (emojiCategory) {\n    return emojiCategory.emojis;\n  }).reduce(function (prevArr, currArr) {\n    return prevArr.concat(currArr);\n  }, []);\n};\n\nvar getEmojiMapAll = function getEmojiMapAll(emojiContainer) {\n  var _a;\n\n  var emojiMap = new Map();\n  (_a = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a === void 0 ? void 0 : _a.forEach(function (category) {\n    var _a;\n\n    (_a = category === null || category === void 0 ? void 0 : category.emojis) === null || _a === void 0 ? void 0 : _a.forEach(function (emoji) {\n      if (emoji && emoji.key) {\n        emojiMap.set(emoji.key, emoji);\n      }\n    });\n  });\n  return emojiMap;\n};\n\nvar getUserName = function getUserName(user) {\n  return (user === null || user === void 0 ? void 0 : user.friendName) || (user === null || user === void 0 ? void 0 : user.nickname) || (user === null || user === void 0 ? void 0 : user.userId);\n};\n\nvar getSenderName = function getSenderName(message) {\n  return message.sender && getUserName(message.sender);\n};\n\nvar hasSameMembers = function hasSameMembers(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var sortedA = __spreadArray([], a, true).sort();\n\n  var sortedB = __spreadArray([], b, true).sort();\n\n  for (var i = 0; i < sortedA.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isFriend = function isFriend(user) {\n  return !!(user.friendDiscoveryKey || user.friendName);\n};\n\nvar filterMessageListParams = function filterMessageListParams(params, message) {\n  var _a, _b, _c;\n\n  if ((params === null || params === void 0 ? void 0 : params.messageType) && params.messageType !== message.messageType) {\n    return false;\n  }\n\n  if (((_a = params === null || params === void 0 ? void 0 : params.customTypes) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n    var customTypes = params.customTypes.filter(function (item) {\n      return item !== '*';\n    }); // Because Chat SDK inserts '*' when customTypes is empty\n\n    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {\n      return false;\n    }\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.senderUserIds) && ((_b = params === null || params === void 0 ? void 0 : params.senderUserIds) === null || _b === void 0 ? void 0 : _b.length) > 0) {\n    if ((message === null || message === void 0 ? void 0 : message.isUserMessage()) || message.isFileMessage()) {\n      var messageSender = message.sender || message['_sender'];\n\n      if (!((_c = params === null || params === void 0 ? void 0 : params.senderUserIds) === null || _c === void 0 ? void 0 : _c.includes(messageSender === null || messageSender === void 0 ? void 0 : messageSender.userId))) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  if (!(params === null || params === void 0 ? void 0 : params.includeParentMessageInfo) && ((message === null || message === void 0 ? void 0 : message.parentMessageId) || (message === null || message === void 0 ? void 0 : message.parentMessage))) {\n    return false;\n  }\n\n  return true;\n};\n\nvar filterChannelListParams = function filterChannelListParams(params, channel, currentUserId) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n\n  if (!(params === null || params === void 0 ? void 0 : params.includeEmpty) && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) && channel.lastMessage === null) {\n    return false;\n  }\n\n  if (((_a = params === null || params === void 0 ? void 0 : params._searchFilter) === null || _a === void 0 ? void 0 : _a.search_query) && ((_b = params._searchFilter.search_fields) === null || _b === void 0 ? void 0 : _b.length) > 0) {\n    var searchFilter = params._searchFilter;\n    var searchQuery_1 = searchFilter.search_query;\n    var searchFields = searchFilter.search_fields;\n\n    if (searchQuery_1 && searchFields && searchFields.length > 0) {\n      if (!searchFields.some(function (searchField) {\n        switch (searchField) {\n          case 'channel_name':\n            {\n              return channel.name.toLowerCase().includes(searchQuery_1.toLowerCase());\n            }\n\n          case 'member_nickname':\n            {\n              return channel.members.some(function (member) {\n                return member.nickname.toLowerCase().includes(searchQuery_1.toLowerCase());\n              });\n            }\n\n          default:\n            {\n              return true;\n            }\n        }\n      })) {\n        return false;\n      }\n    }\n  }\n\n  if (((_d = (_c = params === null || params === void 0 ? void 0 : params._userIdsFilter) === null || _c === void 0 ? void 0 : _c.userIds) === null || _d === void 0 ? void 0 : _d.length) > 0) {\n    var userIdsFilter = params._userIdsFilter;\n    var includeMode = userIdsFilter.includeMode,\n        queryType = userIdsFilter.queryType;\n    var userIds = userIdsFilter.userIds;\n    var memberIds_1 = channel.members.map(function (member) {\n      return member.userId;\n    });\n\n    if (!includeMode) {\n      // exact match\n      if (!userIds.includes(currentUserId)) {\n        userIds.push(currentUserId); // add the caller's userId if not added already.\n      }\n\n      if (channel.members.length > userIds.length) {\n        return false; // userIds may contain one or more non-member(s).\n      }\n\n      if (!hasSameMembers(userIds, memberIds_1)) {\n        return false;\n      }\n    } else if (userIds.length > 0) {\n      // inclusive\n      switch (queryType) {\n        case 'AND':\n          {\n            if (userIds.some(function (userId) {\n              return !memberIds_1.includes(userId);\n            })) {\n              return false;\n            }\n\n            break;\n          }\n\n        case 'OR':\n          {\n            if (userIds.every(function (userId) {\n              return !memberIds_1.includes(userId);\n            })) {\n              return false;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.includeEmpty) === false && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null) {\n    return false;\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.includeFrozen) === false && (channel === null || channel === void 0 ? void 0 : channel.isFrozen) === true) {\n    return false;\n  }\n\n  if (((_e = params === null || params === void 0 ? void 0 : params.customTypesFilter) === null || _e === void 0 ? void 0 : _e.length) > 0 && !params.customTypesFilter.includes(channel === null || channel === void 0 ? void 0 : channel.customType)) {\n    return false;\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.customTypeStartsWithFilter) && !new RegExp(\"^\" + params.customTypeStartsWithFilter).test(channel === null || channel === void 0 ? void 0 : channel.customType)) {\n    return false;\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.channelNameContainsFilter) && !((_f = channel === null || channel === void 0 ? void 0 : channel.name) === null || _f === void 0 ? void 0 : _f.toLowerCase().includes(params.channelNameContainsFilter.toLowerCase()))) {\n    return false;\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.nicknameContainsFilter) {\n    var lowerCasedSubString_1 = params.nicknameContainsFilter.toLowerCase();\n\n    if ((_g = channel === null || channel === void 0 ? void 0 : channel.members) === null || _g === void 0 ? void 0 : _g.every(function (member) {\n      return !member.nickname.toLowerCase().includes(lowerCasedSubString_1);\n    })) {\n      return false;\n    }\n  }\n\n  if (((_h = params === null || params === void 0 ? void 0 : params.channelUrlsFilter) === null || _h === void 0 ? void 0 : _h.length) > 0 && !params.channelUrlsFilter.includes(channel === null || channel === void 0 ? void 0 : channel.url)) {\n    return false;\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.memberStateFilter) {\n    switch (params.memberStateFilter) {\n      case 'joined_only':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'joined') {\n          return false;\n        }\n\n        break;\n\n      case 'invited_only':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'invited') {\n          return false;\n        }\n\n        break;\n\n      case 'invited_by_friend':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'invited' || !isFriend(channel.inviter)) {\n          return false;\n        }\n\n        break;\n\n      case 'invited_by_non_friend':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'invited' || isFriend(channel.inviter)) {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.hiddenChannelFilter) {\n    switch (params.hiddenChannelFilter) {\n      case 'unhidden_only':\n        if ((channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== 'unhidden') {\n          return false;\n        }\n\n        break;\n\n      case 'hidden_only':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden)) {\n          return false;\n        }\n\n        break;\n\n      case 'hidden_allow_auto_unhide':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== 'hidden_allow_auto_unhide') {\n          return false;\n        }\n\n        break;\n\n      case 'hidden_prevent_auto_unhide':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== 'hidden_prevent_auto_unhide') {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.unreadChannelFilter) {\n    switch (params.unreadChannelFilter) {\n      case 'unread_message':\n        if ((channel === null || channel === void 0 ? void 0 : channel.unreadMessageCount) === 0) {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.publicChannelFilter) {\n    switch (params.publicChannelFilter) {\n      case 'public':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isPublic)) {\n          return false;\n        }\n\n        break;\n\n      case 'private':\n        if (channel === null || channel === void 0 ? void 0 : channel.isPublic) {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.superChannelFilter) {\n    switch (params.superChannelFilter) {\n      case 'super':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isSuper)) {\n          return false;\n        }\n\n        break;\n\n      case 'nonsuper':\n        if (channel === null || channel === void 0 ? void 0 : channel.isSuper) {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  return true;\n};\n\nvar binarySearch = function binarySearch(list, number) {\n  var pivot = Math.floor(list.length / 2);\n\n  if (list[pivot] === number) {\n    return pivot;\n  }\n\n  var leftList = list.slice(0, pivot);\n  var rightList = list.slice(pivot + 1, list.length);\n\n  if (list[pivot] > number) {\n    return pivot + 1 + (rightList.length === 0 ? 0 : binarySearch(rightList, number));\n  } else {\n    return leftList.length === 0 ? pivot : binarySearch(leftList, number);\n  }\n}; // This is required when channel is displayed on channel list by filter\n\n\nvar getChannelsWithUpsertedChannel = function getChannelsWithUpsertedChannel(channels, channel) {\n  var _a;\n\n  if (channels.some(function (ch) {\n    return ch.url === channel.url;\n  })) {\n    return channels.map(function (ch) {\n      return ch.url === channel.url ? channel : ch;\n    });\n  }\n\n  var targetIndex = binarySearch(channels.map(function (channel) {\n    var _a;\n\n    return ((_a = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _a === void 0 ? void 0 : _a.createdAt) || (channel === null || channel === void 0 ? void 0 : channel.createdAt);\n  }), ((_a = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _a === void 0 ? void 0 : _a.createdAt) || (channel === null || channel === void 0 ? void 0 : channel.createdAt));\n  return __spreadArray(__spreadArray(__spreadArray([], channels.slice(0, targetIndex), true), [channel], false), channels.slice(targetIndex, channels.length), true);\n};\n\nexport { isVideo as A, isGif as B, isFileMessage as C, isSupportedFileView as D, getUIKitMessageTypes as E, getSenderName as F, isTextMessage as G, isOGMessage as H, getUIKitMessageType as I, isImageMessage as J, isAudioMessage as K, isImage as L, getOutgoingMessageStates as a, getSendingMessageStatus as b, filterMessageListParams as c, getOutgoingMessageState as d, isSentStatus as e, filterChannelListParams as f, getChannelsWithUpsertedChannel as g, isUserMessage as h, isTextuallyNull as i, isFailedMessage as j, isPendingMessage as k, isSentMessage as l, getClassName as m, copyToClipboard as n, getEmojiListAll as o, getEmojiMapAll as p, isReactedBy as q, getEmojiTooltipString as r, isEditedMessage as s, truncateString as t, getUIKitFileType as u, isVideoMessage as v, isGifMessage as w, isUrl as x, getUIKitFileTypes as y, isThumbnailMessage as z };","map":{"version":3,"mappings":";AAGA,IAAMA,eAAe,GAAG;EACtBC,KAAK,EAAE,CACL,YADK,EAEL,WAFK,EAGL,WAHK,EAIL,WAJK,EAKL,eALK,EAML,YANK;EAAA,CADe;EAStBC,KAAK,EAAE,CACL,YADK,EAEL,WAFK,EAGL,YAHK,EAIL,WAJK,CATe;EAetBC,KAAK,EAAE,CACL,WADK,EAEL,YAFK,EAGL,cAHK,EAIL,YAJK,EAKL,WALK,EAML,YANK,EAOL,WAPK,EAQL,YARK,EASL,YATK,EAUL,aAVK,EAWL,WAXK;AAfe,CAAxB;AAsCA,IAAMC,iBAAiB,GAAsB;EAC3CC,KAAK,EAAE,OADoC;EAE3CC,IAAI,EAAE,MAFqC;EAG3CC,IAAI,EAAE,MAHqC;EAI3CC,SAAS,EAAE,WAJgC;EAK3CC,EAAE,EAAE,IALuC;EAM3CC,OAAO,EAAE;AANkC,CAA7C;AAeO,IAAMC,cAAc,GAAmB;EAC5CV,KAAK,EAAE,OADqC;EAE5CE,KAAK,EAAE,OAFqC;EAG5CD,KAAK,EAAE,OAHqC;EAI5CU,GAAG,EAAE,KAJuC;EAK5CC,MAAM,EAAE;AALoC,CAAvC;AAcP,IAAMC,oBAAoB,GAAyB;EACjDC,IAAI,EAAE,MAD2C;EAEjDC,SAAS,EAAE,WAFsC;EAGjDC,MAAM,EAAE,QAHyC;EAIjDC,OAAO,EAAE;AAJwC,CAAnD;AAgBA,IAAMC,qBAAqB,GAA0B;EACnDJ,IAAI,EAAE,MAD6C;EAEnDG,OAAO,EAAE,SAF0C;EAGnDE,IAAI,EAAE,MAH6C;EAInDH,MAAM,EAAE,QAJ2C;EAKnDI,SAAS,EAAE,WALwC;EAMnDC,IAAI,EAAE;AAN6C,CAArD;;IAWaC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;EAC7B,IAAIA,IAAI,KAAK,EAATA,IAAeA,IAAI,KAAK,IAA5B,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACD;;IAEYC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;EAA2B,sBAAe,CAACzB,KAAhBD,CAAsB2B,OAAtB3B,CAA8B0B,IAA9B1B,KAAuC,CAAvC;AAAwC;;IAC7E4B,OAAO,GAAG,SAAVA,OAAU,CAACF,IAAD;EAA2B,sBAAe,CAACxB,KAAhBF,CAAsB2B,OAAtB3B,CAA8B0B,IAA9B1B,KAAuC,CAAvC;AAAwC;;IAC7E6B,KAAK,GAAG,SAARA,KAAQ,CAACH,IAAD;EAA2B,WAAI,KAAK,WAAT;AAAoB;;IACvDI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,IAAD;EAA2B,cAAO,CAACA,IAAD,CAAPD,IAAiBG,OAAO,CAACF,IAAD,CAAxB;AAA8B;;AACrF,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACL,IAAD;EAA2B,sBAAe,CAACvB,KAAhBH,CAAsB2B,OAAtB3B,CAA8B0B,IAA9B1B,KAAuC,CAAvC;AAA3C;;IAEMgC,iBAAiB,GAAG,SAApBA,iBAAoB;EAAsB,oBAAMrB,cAAN;AAAuB;;IACjEsB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,IAAD;EAC9B,IAAIG,KAAK,CAACH,IAAD,CAAT,EAAiB,OAAOf,cAAc,CAACC,GAAtB;EACjB,IAAIa,OAAO,CAACC,IAAD,CAAX,EAAmB,OAAOf,cAAc,CAACV,KAAtB;EACnB,IAAI2B,OAAO,CAACF,IAAD,CAAX,EAAmB,OAAOf,cAAc,CAACT,KAAtB;EACnB,IAAI6B,OAAO,CAACL,IAAD,CAAX,EAAmB,OAAOf,cAAc,CAACR,KAAtB;EACnB,OAAOQ,cAAc,CAACE,MAAtB;AACD;;IACYqB,wBAAwB,GAAG,SAA3BA,wBAA2B;EAA6B,oBAAMf,qBAAN;AAA8B;;IACtFgB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,OAAD,EAAsCC,OAAtC;;;EACrC,IAAIA,OAAO,CAACC,aAARD,KAA0B,SAA9B,EAAyC,OAAOlB,qBAAqB,CAACD,OAA7B;EACzC,IAAImB,OAAO,CAACC,aAARD,KAA0B,QAA9B,EAAwC,OAAOlB,qBAAqB,CAACF,MAA7B;;EACxC,IAAI,aAAO,SAAPmB,WAAO,WAAPA,mBAAO,CAAEG,cAAT,uDAAJ,EAAiC;IAC/B;IACA,IAAKH,OAAwB,CAACI,oBAAzBJ,CAA8CC,OAA9CD,MAA2D,CAAhE,EAAmE;MACjE,OAAOjB,qBAAqB,CAACG,IAA7B;IADF,OAEO,IAAKc,OAAwB,CAACK,yBAAzBL,CAAmDC,OAAnDD,MAAgE,CAArE,EAAwE;MAC7E,OAAOjB,qBAAqB,CAACE,SAA7B;IACD;EACF;;EACD,IAAIgB,OAAO,CAACC,aAARD,KAA0B,WAA9B,EAA2C,OAAOlB,qBAAqB,CAACC,IAA7B;EAC3C,OAAOD,qBAAqB,CAACJ,IAA7B;AACD;;IACY2B,aAAa,GAAG,SAAhBA,aAAgB,CAACN,OAAD,EAAsCC,OAAtC;EAAsF,OACjHF,uBAAuB,CAACC,OAAD,EAAUC,OAAV,CAAvBF,KAA8ChB,qBAAqB,CAACC,IAApEe,IACGA,uBAAuB,CAACC,OAAD,EAAUC,OAAV,CAAvBF,KAA8ChB,qBAAqB,CAACE,SADvEc,IAEGA,uBAAuB,CAACC,OAAD,EAAUC,OAAV,CAAvBF,KAA8ChB,qBAAqB,CAACG,IAH0C;AAIlH;;IASYqB,eAAe,GAAG,SAAlBA,eAAkB,CAACP,OAAD,EAAsCC,OAAtC;EAAsF,OACnHF,uBAAuB,CAACC,OAAD,EAAUC,OAAV,CAAvBF,KAA8ChB,qBAAqB,CAACF,MAD+C;AAEpH;;IACY2B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACR,OAAD,EAAsCC,OAAtC;EAAsF,OACpHF,uBAAuB,CAACC,OAAD,EAAUC,OAAV,CAAvBF,KAA8ChB,qBAAqB,CAACD,OADgD;AAErH;;IACY2B,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;EAA4B,OACtDA,KAAK,KAAK3B,qBAAqB,CAACC,IAAhC0B,IACGA,KAAK,KAAK3B,qBAAqB,CAACE,SADnCyB,IAEGA,KAAK,KAAK3B,qBAAqB,CAACG,IAHmB;AAIvD;;AAEM,IAAMyB,cAAc,GAAG,SAAjBA,cAAiB,CAACV,OAAD;;;EAAoC,OAChEA,OAAO,KAAK,cAAO,CAACU,cAAR,4DAA+BV,OAAO,CAAC,aAAD,CAAPA,IAA0BA,OAAO,CAACW,WAARX,KAAwB,OAAtF,CADyD;AAA3D;;IAGMY,aAAa,GAAG,SAAhBA,aAAgB,CAACZ,OAAD;;;EAAmC,OAC9DA,OAAO,KAAK,cAAO,CAACY,aAAR,4DAA8BZ,OAAO,CAAC,aAAD,CAAPA,IAA0BA,OAAO,CAACW,WAARX,KAAwB,MAArF,CADuD;AAE/D;;IACYa,aAAa,GAAG,SAAhBA,aAAgB,CAACb,OAAD;;;EAAmC,OAC9DA,OAAO,KAAK,cAAO,CAACa,aAAR,4DAA8Bb,OAAO,CAAC,aAAD,CAAPA,IAA0BA,OAAO,CAACW,WAARX,KAAwB,MAArF,CADuD;AAE/D;;IAEYc,WAAW,GAAG,SAAdA,WAAc,CAACd,OAAD;;;EAAmC,QAAC,EAC7DA,OAAO,IAAIY,aAAa,CAACZ,OAAD,CAAxBA,KAAqCA,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEe,UAA9Cf,MAA4D,aAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEe,UAAT,0CAAqBC,GAAjFhB,CAD6D,CAAD;AAE7D;;IACYiB,aAAa,GAAG,SAAhBA,aAAgB,CAACjB,OAAD;EAAmC,oBAAa,CAACA,OAAD,CAAbY,IAA0B,CAACE,WAAW,CAACd,OAAD,CAAtC;AAA+C;;IAClGkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAClB,OAAD;EAAmC,cAAO,IAAIa,aAAa,CAACb,OAAD,CAAxBA,IAAqCP,mBAAmB,CAACO,OAAO,CAACX,IAAT,CAAxD;AAAsE;;IAC9H8B,cAAc,GAAG,SAAjBA,cAAiB,CAACnB,OAAD;EAAmC,cAAO,IAAIkB,kBAAkB,CAAClB,OAAD,CAA7BA,IAA0CZ,OAAO,CAACY,OAAO,CAACX,IAAT,CAAjD;AAA+D;;IACnH+B,cAAc,GAAG,SAAjBA,cAAiB,CAACpB,OAAD;EAAmC,cAAO,IAAIkB,kBAAkB,CAAClB,OAAD,CAA7BA,IAA0CT,OAAO,CAACS,OAAO,CAACX,IAAT,CAAjD;AAA+D;;IACnHgC,YAAY,GAAG,SAAfA,YAAe,CAACrB,OAAD;EAAmC,cAAO,IAAIkB,kBAAkB,CAAClB,OAAD,CAA7BA,IAA0CR,KAAK,CAACQ,OAAO,CAACX,IAAT,CAA/C;AAA6D;;IAC/GiC,cAAc,GAAG,SAAjBA,cAAiB,CAACtB,OAAD;EAAmC,cAAO,IAAIa,aAAa,CAACb,OAAD,CAAxBA,IAAqCN,OAAO,CAACM,OAAO,CAACX,IAAT,CAA5C;AAA0D;;IAE9GkC,eAAe,GAAG,SAAlBA,eAAkB,CAACvB,OAAD;EAAmC,oBAAa,CAACA,OAAD,CAAbY,IAA2B,QAAO,SAAPZ,WAAO,WAAPA,mBAAO,CAAEwB,SAAT,IAAqB,CAAhD;AAAkD;;IAKvGC,oBAAoB,GAAG,SAAvBA,oBAAuB;EAAyB,oBAAM1D,iBAAN;AAA0B;;IAC1E2D,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC1B,OAAD;EACjC,IAAIU,cAAc,CAACV,OAAD,CAAlB,EAA6C,OAAOjC,iBAAiB,CAACC,KAAzB;;EAC7C,IAAI4C,aAAa,CAACZ,OAAD,CAAjB,EAA2C;IACzC,OAAOc,WAAW,CAACd,OAAD,CAAXc,GAAsC/C,iBAAiB,CAACK,EAAxD0C,GAA6D/C,iBAAiB,CAACE,IAAtF;EACD;;EACD,IAAI4C,aAAa,CAACb,OAAD,CAAjB,EAA2C;IACzC,OAAOkB,kBAAkB,CAAClB,OAAD,CAAlBkB,GAA6CnD,iBAAiB,CAACI,SAA/D+C,GAA2EnD,iBAAiB,CAACG,IAApG;EACD;;EACD,OAAOH,iBAAiB,CAACM,OAAzB;AACD;;IACYsD,uBAAuB,GAAG,SAA1BA,uBAA0B;EAA4B,oBAAMlD,oBAAN;AAA6B;;AAEhG,IAAMmD,OAAO,GAAG,SAAVA,OAAU,CAACC,WAAD,EAA6BC,YAA7B;EACd,IAAIC,KAAK,CAACC,OAAND,CAAcD,YAAdC,CAAJ,EAAiC;IAC/B,uCAAWF,WAAX,EAAWA,IAAX,GAA2BC,YAA3B,EAA2BA,IAA3B;EADF,OAEO;IACLD,WAAW,CAACI,IAAZJ,CAAiBC,YAAjBD;IACA,OAAOA,WAAP;EACD;AANH;;IAQaK,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD;EAAgE,OAC1FJ,KAAK,CAACC,OAAND,CAAcI,UAAdJ,IACII,UAAU,CAACC,MAAXD,CAAkBP,OAAlBO,EAA2B,EAA3BA,EAA+BE,IAA/BF,CAAoC,GAApCA,CADJJ,GAEII,UAHsF;AAI3F;;IACYG,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAiBC,QAAjB;EAAiD,OAC1EA,QAAQ,CAACC,OAATD,CAAiBE,IAAjBF,CAAsB,UAACG,aAAD;IAAoC,oBAAa,KAAKJ,MAAlB;EAA1D,EAD0E;AAE3E;;IAMYK,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACJ,QAAD,EAAqBD,MAArB,EAAqCM,kBAArC,EAA8EC,SAA9E;EACnC,IAAIC,GAAG,GAAG,EAAV;;EACA,IAAIT,WAAW,CAACC,MAAD,EAASC,QAAT,CAAf,EAAmC;IACjCO,GAAG,GAAGP,QAAQ,CAACC,OAATD,CAAiBQ,MAAjBR,KAA4B,CAA5BA,GAAgCM,SAAS,CAACG,YAA1CT,GAAyDM,SAAS,CAACI,gBAAzEH;EACD;;EACD,OAAQ,KAAGP,QAAQ,CAACC,OAATD,CACRW,MADQX,CACD,UAACG,aAAD;IAA2B,oBAAa,KAAKJ,MAAlB;EAD1B,GAERa,GAFQZ,CAEJ,UAACG,aAAD;IAA2B,OAACE,kBAAkB,CAACQ,GAAnBR,CAAuBF,aAAvBE,KAAyCC,SAAS,CAACQ,qBAApD;EAFvB,GAGRjB,IAHQG,CAGH,IAHGA,CAAH,GAGQO,GAHhB;AAID;;AA+BD,IAAMQ,OAAO,GAAG,kFAAhB;;IACaC,KAAK,GAAG,SAARA,KAAQ,CAACrE,IAAD;EAA2B,cAAO,CAACsE,IAARF,CAAapE,IAAboE;AAAkB;;IAErDG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAkBC,MAAlB;EAC5B,IAAI,CAACA,MAAL,EAAaA,MAAM,GAAG,EAATA;EACb,IAAID,OAAO,KAAK,IAAZA,IAAoBA,OAAO,KAAKE,SAApC,EAA+C,OAAO,EAAP;EAC/C,IAAIF,OAAO,CAACX,MAARW,IAAkBC,MAAtB,EAA8B,OAAOD,OAAP;EAC9B,IAAMG,SAAS,GAAG,KAAlB;EACA,IAAMC,MAAM,GAAGD,SAAS,CAACd,MAAzB;EACA,IAAMgB,WAAW,GAAGJ,MAAM,GAAGG,MAA7B;EACA,IAAME,UAAU,GAAGC,IAAI,CAACC,IAALD,CAAUF,WAAW,GAAG,CAAxBE,CAAnB;EACA,IAAME,SAAS,GAAGF,IAAI,CAACG,KAALH,CAAWF,WAAW,GAAG,CAAzBE,CAAlB;EACA,OAAOP,OAAO,CAACW,MAARX,CAAe,CAAfA,EAAkBM,UAAlBN,IAAgCG,SAAhCH,GAA4CA,OAAO,CAACW,MAARX,CAAeA,OAAO,CAACX,MAARW,GAAiBS,SAAhCT,CAAnD;AACD;;IAEYY,eAAe,GAAG,SAAlBA,eAAkB,CAACpF,IAAD;EAC7B;EACA,IAAIqF,MAAM,CAACC,aAAPD,IAAwBA,MAAM,CAACC,aAAPD,CAAqBE,OAAjD,EAA0D;IACxD;IACA;IACA,OAAOF,MAAM,CAACC,aAAPD,CAAqBE,OAArBF,CAA6B,MAA7BA,EAAqCrF,IAArCqF,CAAP;EACD;;EACD,IAAIG,QAAQ,CAACC,qBAATD,IAAkCA,QAAQ,CAACC,qBAATD,CAA+B,MAA/BA,CAAtC,EAA8E;IAC5E,IAAME,QAAQ,GAAGF,QAAQ,CAACG,aAATH,CAAuB,UAAvBA,CAAjB;IACAE,QAAQ,CAACE,WAATF,GAAuB1F,IAAvB0F;IACAA,QAAQ,CAACG,KAATH,CAAeI,QAAfJ,GAA0B,OAA1BA,CAH4E;;IAI5EF,QAAQ,CAACO,IAATP,CAAcQ,WAAdR,CAA0BE,QAA1BF;IACAE,QAAQ,CAACO,MAATP;;IACA,IAAI;MACF,OAAOF,QAAQ,CAACU,WAATV,CAAqB,MAArBA,CAAP,CADE;IAAJ,EAEE,OAAOW,EAAP,EAAW;MACX,OAAO,KAAP;IAHF,UAIU;MACRX,QAAQ,CAACO,IAATP,CAAcY,WAAdZ,CAA0BE,QAA1BF;IACD;EACF;;EACD,OAAO,KAAP;AACD;;IAEYa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,cAAD;;;EAAkD,OAC/E,oBAAc,SAAdA,kBAAc,WAAdA,0BAAc,CAAEC,eAAhB,0CAAiCtC,GAAjC,CAAqC,UAACuC,aAAD;IAAkC,oBAAa,CAACC,MAAd;EAAoB,CAA3F,EACGxD,MADH,CACU,UAACyD,OAAD,EAAwBC,OAAxB;IAAkD,cAAO,CAACC,MAARF,CAAeC,OAAfD;EAAuB,CADnF,EACqF,EADrF,CAD+E;AAGhF;;IACYG,cAAc,GAAG,SAAjBA,cAAiB,CAACP,cAAD;;;EAC5B,IAAMQ,QAAQ,GAAG,IAAIC,GAAJ,EAAjB;EACA,oBAAc,SAAdT,kBAAc,WAAdA,0BAAc,CAAEC,eAAhB,0CAAiCS,OAAjC,CAAyC,UAACC,QAAD;;;IACvC,cAAQ,SAARA,YAAQ,WAARA,oBAAQ,CAAER,MAAV,0CAAkBO,OAAlB,CAA0B,UAACE,KAAD;MACxB,IAAIA,KAAK,IAAIA,KAAK,CAACC,GAAnB,EAAwB;QACtBL,QAAQ,CAACM,GAATN,CAAaI,KAAK,CAACC,GAAnBL,EAAwBI,KAAxBJ;MACD;IACF,CAJD;EAKD,CAND;EAOA,OAAOA,QAAP;AACD;;AAEM,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD;EAAwB,OAAC,KAAI,SAAJA,QAAI,WAAJA,gBAAI,CAAEC,UAAN,MAAoBD,IAAI,SAAJA,QAAI,WAAJA,gBAAI,CAAEE,QAA1B,MAAsCF,IAAI,SAAJA,QAAI,WAAJA,gBAAI,CAAElE,MAA5C,CAAD;AAA5C;;IACMqE,aAAa,GAAG,SAAhBA,aAAgB,CAAC5G,OAAD;EAAgD,OAACA,OAAO,CAAC6G,MAAR7G,IAAkBwG,WAAW,CAACxG,OAAO,CAAC6G,MAAT,CAA9B;AAA+C;;AAErH,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAIC,CAAJ,EAAYC,CAAZ;EAC5B,IAAID,CAAC,KAAKC,CAAV,EAAa;IACX,OAAO,IAAP;EACD;;EACD,IAAID,CAAC,IAAI,IAALA,IAAaC,CAAC,IAAI,IAAtB,EAA4B;IAC1B,OAAO,KAAP;EACD;;EACD,IAAID,CAAC,CAAC/D,MAAF+D,KAAaC,CAAC,CAAChE,MAAnB,EAA2B;IACzB,OAAO,KAAP;EACD;;EAED,IAAMiE,OAAO,GAAGC,kBAAIH,CAAJG,EAAIH,IAAJG,EAAOC,IAAPD,EAAhB;;EACA,IAAME,OAAO,GAAGF,kBAAIF,CAAJE,EAAIF,IAAJE,EAAOC,IAAPD,EAAhB;;EAEA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACjE,MAA5B,EAAoC,EAAEqE,CAAtC,EAAyC;IACvC,IAAIJ,OAAO,CAACI,CAAD,CAAPJ,KAAeG,OAAO,CAACC,CAAD,CAA1B,EAA+B;MAC7B,OAAO,KAAP;IACD;EACF;;EACD,OAAO,IAAP;AAnBK;;AAqBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACb,IAAD;EAAyB,QAAC,EAAEA,IAAI,CAACc,kBAALd,IAA2BA,IAAI,CAACC,UAAlC,CAAD;AAA1C;;IAEMc,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,MAAD,EAA4BzH,OAA5B;;;EACrC,IAAI,OAAM,SAANyH,UAAM,WAANA,kBAAM,CAAE9G,WAAR,KAAuB8G,MAAM,CAAC9G,WAAP8G,KAAuBzH,OAAO,CAACW,WAA1D,EAAuE;IACrE,OAAO,KAAP;EACD;;EACD,IAAI,aAAM,SAAN8G,UAAM,WAANA,kBAAM,CAAEC,WAAR,0CAAqB1E,MAArB,IAA8B,CAAlC,EAAqC;IACnC,IAAM0E,WAAW,GAAGD,MAAM,CAACC,WAAPD,CAAmBtE,MAAnBsE,CAA0B,UAACE,IAAD;MAAU,WAAI,KAAK,GAAT;IAApC,EAApB,CADmC;;IAGnC,IAAID,WAAW,CAAC1E,MAAZ0E,GAAqB,CAArBA,IAA0B,CAACA,WAAW,CAACE,QAAZF,CAAqB1H,OAAO,CAAC6H,UAA7BH,CAA/B,EAAyE;MACvE,OAAO,KAAP;IACD;EACF;;EACD,IAAI,OAAM,SAAND,UAAM,WAANA,kBAAM,CAAEK,aAAR,KAAyB,aAAM,SAANL,UAAM,WAANA,kBAAM,CAAEK,aAAR,0CAAuB9E,MAAvB,IAAgC,CAA7D,EAAgE;IAC9D,IAAI,QAAO,SAAPhD,WAAO,WAAPA,mBAAO,CAAEY,aAATZ,OAA4BA,OAAO,CAACa,aAARb,EAAhC,EAAyD;MACvD,IAAM+H,aAAa,GAAI/H,OAAqC,CAAC6G,MAAtC7G,IAAgDA,OAAO,CAAC,SAAD,CAA9E;;MACA,IAAI,EAAC,YAAM,SAANyH,UAAM,WAANA,kBAAM,CAAEK,aAAR,0CAAuBF,QAAvB,CAAgCG,aAAa,SAAbA,iBAAa,WAAbA,yBAAa,CAAExF,MAA/C,CAAD,CAAJ,EAA6D;QAC3D,OAAO,KAAP;MACD;IAJH,OAKO;MACL,OAAO,KAAP;IACD;EACF;;EACD,IAAI,EAACkF,MAAM,SAANA,UAAM,WAANA,kBAAM,CAAEO,wBAAT,MAAsC,QAAO,SAAPhI,WAAO,WAAPA,mBAAO,CAAEiI,eAAT,MAA4BjI,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEkI,aAArC,CAAtC,CAAJ,EAA+F;IAC7F,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD;;IAaYC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACV,MAAD,EAA2C1H,OAA3C,EAAkEqI,aAAlE;;;EACrC,IAAI,EAACX,MAAM,SAANA,UAAM,WAANA,kBAAM,CAAEY,YAAT,MAAyBtI,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEuI,WAAlC,KAAiDvI,OAAO,CAACuI,WAARvI,KAAwB,IAA7E,EAAmF;IACjF,OAAO,KAAP;EACD;;EACD,IAAI,aAAM,SAAN0H,UAAM,WAANA,kBAAM,CAAEc,aAAR,0CAAuBC,YAAvB,KAAuC,aAAM,CAACD,aAAPd,CAAqBgB,aAArB,0CAAoCzF,MAApC,IAA6C,CAAxF,EAA2F;IACzF,IAAM0F,YAAY,GAAGjB,MAAM,CAACc,aAA5B;IACA,IAAMI,aAAW,GAAGD,YAAY,CAACF,YAAjC;IACA,IAAMI,YAAY,GAAGF,YAAY,CAACD,aAAlC;;IACA,IAAIE,aAAW,IAAIC,YAAfD,IAA+BC,YAAY,CAAC5F,MAAb4F,GAAsB,CAAzD,EAA4D;MAC1D,IAAI,CAACA,YAAY,CAAClG,IAAbkG,CAAkB,UAACC,WAAD;QACrB,QAAQA,WAAR;UACE,KAAK,cAAL;YAAqB;cACnB,OAAO9I,OAAO,CAAC+I,IAAR/I,CAAagJ,WAAbhJ,GAA2B6H,QAA3B7H,CAAoC4I,aAAW,CAACI,WAAZJ,EAApC5I,CAAP;YACD;;UACD,KAAK,iBAAL;YAAwB;cACtB,OAAOA,OAAO,CAACiJ,OAARjJ,CAAgB2C,IAAhB3C,CAAqB,UAACkJ,MAAD;gBAAoB,aAAM,CAACtC,QAAPsC,CAAgBF,WAAhBE,GAA8BrB,QAA9BqB,CAAuCN,aAAW,CAACI,WAAZJ,EAAvCM;cAAzC,EAAP;YACD;;UACD;YAAS;cACP,OAAO,IAAP;YACD;QATH;MADG,EAAL,EAYI;QACF,OAAO,KAAP;MACD;IACF;EACF;;EACD,IAAI,mBAAM,SAANxB,UAAM,WAANA,kBAAM,CAAEyB,cAAR,0CAAwBzG,OAAxB,0CAAiCO,MAAjC,IAA0C,CAA9C,EAAiD;IAC/C,IAAMmG,aAAa,GAAG1B,MAAM,CAACyB,cAA7B;IACQ,eAAW,GAAgBC,aAAa,YAAxC;IAAA,IAAaC,SAAS,GAAKD,aAAa,UAAxC;IACR,IAAM1G,OAAO,GAAa0G,aAAa,CAAC1G,OAAxC;IACA,IAAM4G,WAAS,GAAGtJ,OAAO,CAACiJ,OAARjJ,CAAgBqD,GAAhBrD,CAAoB,UAACkJ,MAAD;MAAoB,aAAM,CAAC1G,MAAP;IAAxC,EAAlB;;IACA,IAAI,CAAC+G,WAAL,EAAkB;MAAE;MAClB,IAAI,CAAC7G,OAAO,CAACmF,QAARnF,CAAiB2F,aAAjB3F,CAAL,EAAsC;QACpCA,OAAO,CAACR,IAARQ,CAAa2F,aAAb3F,EADoC;MAErC;;MACD,IAAI1C,OAAO,CAACiJ,OAARjJ,CAAgBiD,MAAhBjD,GAAyB0C,OAAO,CAACO,MAArC,EAA6C;QAC3C,OAAO,KAAP,CAD2C;MAE5C;;MACD,IAAI,CAAC8D,cAAc,CAACrE,OAAD,EAAU4G,WAAV,CAAnB,EAAyC;QACvC,OAAO,KAAP;MACD;IATH,OAUO,IAAI5G,OAAO,CAACO,MAARP,GAAiB,CAArB,EAAwB;MAAE;MAC/B,QAAQ2G,SAAR;QACE,KAAK,KAAL;UAAY;YACV,IAAI3G,OAAO,CAACC,IAARD,CAAa,UAACF,MAAD;cAAoB,QAAC8G,WAAS,CAACzB,QAAVyB,CAAmB9G,MAAnB8G,CAAD;YAAjC,EAAJ,EAAmE;cACjE,OAAO,KAAP;YACD;;YACD;UACD;;QACD,KAAK,IAAL;UAAW;YACT,IAAI5G,OAAO,CAAC8G,KAAR9G,CAAc,UAACF,MAAD;cAAoB,QAAC8G,WAAS,CAACzB,QAAVyB,CAAmB9G,MAAnB8G,CAAD;YAAlC,EAAJ,EAAoE;cAClE,OAAO,KAAP;YACD;;YACD;UACD;MAZH;IAiBD;EACF;;EACD,IAAI,OAAM,SAAN5B,UAAM,WAANA,kBAAM,CAAEY,YAAR,MAAyB,KAAzB,IAAkC,QAAO,SAAPtI,WAAO,WAAPA,mBAAO,CAAEuI,WAAT,MAAyB,IAA/D,EAAqE;IACnE,OAAO,KAAP;EACD;;EACD,IAAI,OAAM,SAANb,UAAM,WAANA,kBAAM,CAAE+B,aAAR,MAA0B,KAA1B,IAAmC,QAAO,SAAPzJ,WAAO,WAAPA,mBAAO,CAAE0J,QAAT,MAAsB,IAA7D,EAAmE;IACjE,OAAO,KAAP;EACD;;EACD,IAAI,aAAM,SAANhC,UAAM,WAANA,kBAAM,CAAEiC,iBAAR,0CAA2B1G,MAA3B,IAAoC,CAApC,IAAyC,CAACyE,MAAM,CAACiC,iBAAPjC,CAAyBG,QAAzBH,CAAkC1H,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAE8H,UAA3CJ,CAA9C,EAAsG;IACpG,OAAO,KAAP;EACD;;EACD,IAAI,OAAM,SAANA,UAAM,WAANA,kBAAM,CAAEkC,0BAAR,KAAsC,CAAC,IAAIC,MAAJ,CAAW,MAAInC,MAAM,CAACkC,0BAAtB,EAAoDlG,IAApD,CAAyD1D,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAE8H,UAAlE,CAA3C,EAA0H;IACxH,OAAO,KAAP;EACD;;EACD,IAAI,OAAM,SAANJ,UAAM,WAANA,kBAAM,CAAEoC,yBAAR,KAAqC,EAAC,aAAO,SAAP9J,WAAO,WAAPA,mBAAO,CAAE+I,IAAT,0CAAeC,WAAf,GAA6BnB,QAA7B,CAAsCH,MAAM,CAACoC,yBAAPpC,CAAiCsB,WAAjCtB,EAAtC,CAAD,CAAzC,EAAiI;IAC/H,OAAO,KAAP;EACD;;EACD,IAAIA,MAAM,SAANA,UAAM,WAANA,kBAAM,CAAEqC,sBAAZ,EAAoC;IAClC,IAAMC,qBAAmB,GAAGtC,MAAM,CAACqC,sBAAPrC,CAA8BsB,WAA9BtB,EAA5B;;IACA,IAAI,aAAO,SAAP1H,WAAO,WAAPA,mBAAO,CAAEiJ,OAAT,0CAAkBO,KAAlB,CAAwB,UAACN,MAAD;MAAoB,QAACA,MAAM,CAACtC,QAAPsC,CAAgBF,WAAhBE,GAA8BrB,QAA9BqB,CAAuCc,qBAAvCd,CAAD;IAA4D,CAAxG,CAAJ,EAA+G;MAC7G,OAAO,KAAP;IACD;EACF;;EACD,IAAI,aAAM,SAANxB,UAAM,WAANA,kBAAM,CAAEuC,iBAAR,0CAA2BhH,MAA3B,IAAoC,CAApC,IAAyC,CAACyE,MAAM,CAACuC,iBAAPvC,CAAyBG,QAAzBH,CAAkC1H,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEiB,GAA3CyG,CAA9C,EAA+F;IAC7F,OAAO,KAAP;EACD;;EACD,IAAIA,MAAM,SAANA,UAAM,WAANA,kBAAM,CAAEwC,iBAAZ,EAA+B;IAC7B,QAAQxC,MAAM,CAACwC,iBAAf;MACE,KAAK,aAAL;QACE,IAAI,QAAO,SAAPlK,WAAO,WAAPA,mBAAO,CAAEmK,aAAT,MAA2B,QAA/B,EAAyC;UACvC,OAAO,KAAP;QACD;;QACD;;MACF,KAAK,cAAL;QACE,IAAI,QAAO,SAAPnK,WAAO,WAAPA,mBAAO,CAAEmK,aAAT,MAA2B,SAA/B,EAA0C;UACxC,OAAO,KAAP;QACD;;QACD;;MACF,KAAK,mBAAL;QACE,IAAI,QAAO,SAAPnK,WAAO,WAAPA,mBAAO,CAAEmK,aAAT,MAA2B,SAA3B,IAAwC,CAAC5C,QAAQ,CAACvH,OAAO,CAACoK,OAAT,CAArD,EAAwE;UACtE,OAAO,KAAP;QACD;;QACD;;MACF,KAAK,uBAAL;QACE,IAAI,QAAO,SAAPpK,WAAO,WAAPA,mBAAO,CAAEmK,aAAT,MAA2B,SAA3B,IAAwC5C,QAAQ,CAACvH,OAAO,CAACoK,OAAT,CAApD,EAAuE;UACrE,OAAO,KAAP;QACD;;QACD;IApBJ;EAsBD;;EACD,IAAI1C,MAAM,SAANA,UAAM,WAANA,kBAAM,CAAE2C,mBAAZ,EAAiC;IAC/B,QAAQ3C,MAAM,CAAC2C,mBAAf;MACE,KAAK,eAAL;QACE,IAAI,QAAO,SAAPrK,WAAO,WAAPA,mBAAO,CAAEsK,QAAT,KAAqB,QAAO,SAAPtK,WAAO,WAAPA,mBAAO,CAAEuK,WAAT,MAAyB,UAAlD,EAA8D;UAC5D,OAAO,KAAP;QACD;;QACD;;MACF,KAAK,aAAL;QACE,IAAI,EAACvK,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEsK,QAAV,CAAJ,EAAwB;UACtB,OAAO,KAAP;QACD;;QACD;;MACF,KAAK,0BAAL;QACE,IAAI,EAACtK,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEsK,QAAV,KAAsB,QAAO,SAAPtK,WAAO,WAAPA,mBAAO,CAAEuK,WAAT,MAAyB,0BAAnD,EAA+E;UAC7E,OAAO,KAAP;QACD;;QACD;;MACF,KAAK,4BAAL;QACE,IAAI,EAACvK,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEsK,QAAV,KAAsB,QAAO,SAAPtK,WAAO,WAAPA,mBAAO,CAAEuK,WAAT,MAAyB,4BAAnD,EAAiF;UAC/E,OAAO,KAAP;QACD;;QACD;IApBJ;EAsBD;;EACD,IAAI7C,MAAM,SAANA,UAAM,WAANA,kBAAM,CAAE8C,mBAAZ,EAAiC;IAC/B,QAAQ9C,MAAM,CAAC8C,mBAAf;MACE,KAAK,gBAAL;QACE,IAAI,QAAO,SAAPxK,WAAO,WAAPA,mBAAO,CAAEyK,kBAAT,MAAgC,CAApC,EAAuC;UACrC,OAAO,KAAP;QACD;;QACD;IALJ;EAOD;;EACD,IAAI/C,MAAM,SAANA,UAAM,WAANA,kBAAM,CAAEgD,mBAAZ,EAAiC;IAC/B,QAAQhD,MAAM,CAACgD,mBAAf;MACE,KAAK,QAAL;QACE,IAAI,EAAC1K,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAE2K,QAAV,CAAJ,EAAwB;UACtB,OAAO,KAAP;QACD;;QACD;;MACF,KAAK,SAAL;QACE,IAAI3K,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAE2K,QAAb,EAAuB;UACrB,OAAO,KAAP;QACD;;QACD;IAVJ;EAYD;;EACD,IAAIjD,MAAM,SAANA,UAAM,WAANA,kBAAM,CAAEkD,kBAAZ,EAAgC;IAC9B,QAAQlD,MAAM,CAACkD,kBAAf;MACE,KAAK,OAAL;QACE,IAAI,EAAC5K,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAE6K,OAAV,CAAJ,EAAuB;UACrB,OAAO,KAAP;QACD;;QACD;;MACF,KAAK,UAAL;QACE,IAAI7K,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAE6K,OAAb,EAAsB;UACpB,OAAO,KAAP;QACD;;QACD;IAVJ;EAYD;;EACD,OAAO,IAAP;AACD;;AAEM,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAsBC,MAAtB;EAC1B,IAAMC,KAAK,GAAG9G,IAAI,CAACG,KAALH,CAAW4G,IAAI,CAAC9H,MAAL8H,GAAc,CAAzB5G,CAAd;;EACA,IAAI4G,IAAI,CAACE,KAAD,CAAJF,KAAgBC,MAApB,EAA4B;IAC1B,OAAOC,KAAP;EACD;;EACD,IAAMC,QAAQ,GAAGH,IAAI,CAACI,KAALJ,CAAW,CAAXA,EAAcE,KAAdF,CAAjB;EACA,IAAMK,SAAS,GAAGL,IAAI,CAACI,KAALJ,CAAWE,KAAK,GAAG,CAAnBF,EAAsBA,IAAI,CAAC9H,MAA3B8H,CAAlB;;EACA,IAAIA,IAAI,CAACE,KAAD,CAAJF,GAAcC,MAAlB,EAA0B;IACxB,OAAOC,KAAK,GAAG,CAARA,IAAaG,SAAS,CAACnI,MAAVmI,KAAqB,CAArBA,GAAyB,CAAzBA,GAA6BN,YAAY,CAACM,SAAD,EAAYJ,MAAZ,CAAtDC,CAAP;EADF,OAEO;IACL,OAAQC,QAAQ,CAACjI,MAATiI,KAAoB,CAApBA,GAAyBD,KAAzBC,GAAiCJ,YAAY,CAACI,QAAD,EAAWF,MAAX,CAArD;EACD;AAXI,E,CAAA;;;IAcMK,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,QAAD,EAAgCtL,OAAhC;;;EAC5C,IAAIsL,QAAQ,CAAC3I,IAAT2I,CAAc,UAACC,EAAD;IAAsB,SAAE,CAACtK,GAAHsK,KAAWvL,OAAO,CAACiB,GAAnB;EAApC,EAAJ,EAAiE;IAC/D,OAAOqK,QAAQ,CAACjI,GAATiI,CAAa,UAACC,EAAD;MAAsB,OAACA,EAAE,CAACtK,GAAHsK,KAAWvL,OAAO,CAACiB,GAAnBsK,GAAyBvL,OAAzBuL,GAAmCA,EAApC;IAAnC,EAAP;EACD;;EACD,IAAMC,WAAW,GAAGV,YAAY,CAC9BQ,QAAQ,CAACjI,GAATiI,CAAa,UAACtL,OAAD;;;IAA2B,qBAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEuI,WAAT,0CAAsBkD,SAAtB,MAAmCzL,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEyL,SAA5C;EAAxC,EAD8B,EAE9B,cAAO,SAAPzL,WAAO,WAAPA,mBAAO,CAAEuI,WAAT,0CAAsBkD,SAAtB,MAAmCzL,OAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEyL,SAA5C,CAF8B,CAAhC;EAIA,qDAAWH,QAAQ,CAACH,KAATG,CAAe,CAAfA,EAAkBE,WAAlBF,CAAX,EAAW,IAAX,GAAW,CAAgCtL,OAAhC,CAAX,EAA2CA,KAA3C,GAAuDsL,QAAQ,CAACH,KAATG,CAAeE,WAAfF,EAA4BA,QAAQ,CAACrI,MAArCqI,CAAvD,EAAuD,IAAvD;AACD","names":["SUPPORTED_MIMES","IMAGE","VIDEO","AUDIO","UIKitMessageTypes","ADMIN","TEXT","FILE","THUMBNAIL","OG","UNKNOWN","UIKitFileTypes","GIF","OTHERS","SendingMessageStatus","NONE","SUCCEEDED","FAILED","PENDING","OutgoingMessageStates","SENT","DELIVERED","READ","isTextuallyNull","text","isImage","type","indexOf","isVideo","isGif","isSupportedFileView","isAudio","getUIKitFileTypes","getUIKitFileType","getOutgoingMessageStates","getOutgoingMessageState","channel","message","sendingStatus","isGroupChannel","getUnreadMemberCount","getUndeliveredMemberCount","isSentMessage","isFailedMessage","isPendingMessage","isSentStatus","state","isAdminMessage","messageType","isUserMessage","isFileMessage","isOGMessage","ogMetaData","url","isTextMessage","isThumbnailMessage","isImageMessage","isVideoMessage","isGifMessage","isAudioMessage","isEditedMessage","updatedAt","getUIKitMessageTypes","getUIKitMessageType","getSendingMessageStatus","reducer","accumulator","currentValue","Array","isArray","push","getClassName","classNames","reduce","join","isReactedBy","userId","reaction","userIds","some","reactorUserId","getEmojiTooltipString","memberNicknamesMap","stringSet","you","length","TOOLTIP__YOU","TOOLTIP__AND_YOU","filter","map","get","TOOLTIP__UNKNOWN_USER","URL_REG","isUrl","test","truncateString","fullStr","strLen","undefined","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","copyToClipboard","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","getEmojiListAll","emojiContainer","emojiCategories","emojiCategory","emojis","prevArr","currArr","concat","getEmojiMapAll","emojiMap","Map","forEach","category","emoji","key","set","getUserName","user","friendName","nickname","getSenderName","sender","hasSameMembers","a","b","sortedA","__spreadArray","sort","sortedB","i","isFriend","friendDiscoveryKey","filterMessageListParams","params","customTypes","item","includes","customType","senderUserIds","messageSender","includeParentMessageInfo","parentMessageId","parentMessage","filterChannelListParams","currentUserId","includeEmpty","lastMessage","_searchFilter","search_query","search_fields","searchFilter","searchQuery_1","searchFields","searchField","name","toLowerCase","members","member","_userIdsFilter","userIdsFilter","queryType","memberIds_1","includeMode","every","includeFrozen","isFrozen","customTypesFilter","customTypeStartsWithFilter","RegExp","channelNameContainsFilter","nicknameContainsFilter","lowerCasedSubString_1","channelUrlsFilter","memberStateFilter","myMemberState","inviter","hiddenChannelFilter","isHidden","hiddenState","unreadChannelFilter","unreadMessageCount","publicChannelFilter","isPublic","superChannelFilter","isSuper","binarySearch","list","number","pivot","leftList","slice","rightList","getChannelsWithUpsertedChannel","channels","ch","targetIndex","createdAt"],"sources":["C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\utils\\index.ts"],"sourcesContent":["import { AdminMessage, Emoji, EmojiCategory, EmojiContainer, FileMessage, GroupChannel, GroupChannelListQuery, Member, MessageListParams, OpenChannel, Reaction, SendBirdInstance, User, UserMessage } from \"sendbird\";\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp', // not supported in IE\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n  AUDIO: [\n    'audio/aac',\n    'audio/midi',\n    'audio/x-midi',\n    'audio/mpeg',\n    'audio/ogg',\n    'audio/opus',\n    'audio/wav',\n    'audio/webm',\n    'audio/3gpp',\n    'audio/3gpp2',\n    'audio/mp3',\n  ],\n};\n\nexport interface UIKitMessageTypes {\n  ADMIN: \"ADMIN\",\n  TEXT: \"TEXT\",\n  FILE: \"FILE\",\n  THUMBNAIL: \"THUMBNAIL\",\n  OG: \"OG\",\n  UNKNOWN: \"UNKNOWN\",\n}\nconst UIKitMessageTypes: UIKitMessageTypes = {\n  ADMIN: \"ADMIN\",\n  TEXT: \"TEXT\",\n  FILE: \"FILE\",\n  THUMBNAIL: \"THUMBNAIL\",\n  OG: \"OG\",\n  UNKNOWN: \"UNKNOWN\",\n};\nexport interface UIKitFileTypes {\n  IMAGE: \"IMAGE\",\n  AUDIO: \"AUDIO\",\n  VIDEO: \"VIDEO\",\n  GIF: \"GIF\",\n  OTHERS: \"OTHERS\",\n}\nexport const UIKitFileTypes: UIKitFileTypes = {\n  IMAGE: \"IMAGE\",\n  AUDIO: \"AUDIO\",\n  VIDEO: \"VIDEO\",\n  GIF: \"GIF\",\n  OTHERS: \"OTHERS\",\n};\n\nexport interface SendingMessageStatus {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n}\nconst SendingMessageStatus: SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending',\n};\n\nexport interface OutgoingMessageStates {\n  NONE: 'NONE',\n  PENDING: 'PENDING',\n  SENT: 'SENT',\n  FAILED: 'FAILED',\n  DELIVERED: 'DELIVERED',\n  READ: 'READ',\n  // delivered and read are only in group channel\n}\nconst OutgoingMessageStates: OutgoingMessageStates = {\n  NONE: 'NONE',\n  PENDING: 'PENDING',\n  SENT: 'SENT',\n  FAILED: 'FAILED',\n  DELIVERED: 'DELIVERED',\n  READ: 'READ',\n};\n\nexport type CoreMessageType = AdminMessage | UserMessage | FileMessage;\n\nexport const isTextuallyNull = (text: string): boolean => {\n  if (text === '' || text === null) {\n    return true;\n  }\n  return false;\n};\n\nexport const isImage = (type: string): boolean => SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\nexport const isVideo = (type: string): boolean => SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\nexport const isGif = (type: string): boolean => type === 'image/gif';\nexport const isSupportedFileView = (type: string): boolean => isImage(type) || isVideo(type);\nexport const isAudio = (type: string): boolean => SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;\n\nexport const getUIKitFileTypes = (): UIKitFileTypes => ({ ...UIKitFileTypes });\nexport const getUIKitFileType = (type: string): string => {\n  if (isGif(type)) return UIKitFileTypes.GIF;\n  if (isImage(type)) return UIKitFileTypes.IMAGE;\n  if (isVideo(type)) return UIKitFileTypes.VIDEO;\n  if (isAudio(type)) return UIKitFileTypes.AUDIO;\n  return UIKitFileTypes.OTHERS;\n};\nexport const getOutgoingMessageStates = (): OutgoingMessageStates => ({ ...OutgoingMessageStates });\nexport const getOutgoingMessageState = (channel: GroupChannel | OpenChannel, message: UserMessage | FileMessage): string => {\n  if (message.sendingStatus === 'pending') return OutgoingMessageStates.PENDING;\n  if (message.sendingStatus === 'failed') return OutgoingMessageStates.FAILED;\n  if (channel?.isGroupChannel?.()) {\n    /* GroupChannel only */\n    if ((channel as GroupChannel).getUnreadMemberCount(message) === 0) {\n      return OutgoingMessageStates.READ;\n    } else if ((channel as GroupChannel).getUndeliveredMemberCount(message) === 0) {\n      return OutgoingMessageStates.DELIVERED;\n    }\n  }\n  if (message.sendingStatus === 'succeeded') return OutgoingMessageStates.SENT;\n  return OutgoingMessageStates.NONE;\n};\nexport const isSentMessage = (channel: GroupChannel | OpenChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.SENT\n  || getOutgoingMessageState(channel, message) === OutgoingMessageStates.DELIVERED\n  || getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\nexport const isDeliveredMessage = (channel: GroupChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.DELIVERED\n  || getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\nexport const isReadMessage = (channel: GroupChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ\n);\n// TODO: Remove channel from the params, it seems unnecessary\nexport const isFailedMessage = (channel: GroupChannel | OpenChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.FAILED\n);\nexport const isPendingMessage = (channel: GroupChannel | OpenChannel, message: UserMessage | FileMessage): boolean => (\n  getOutgoingMessageState(channel, message) === OutgoingMessageStates.PENDING\n);\nexport const isSentStatus = (state: string): boolean => (\n  state === OutgoingMessageStates.SENT\n  || state === OutgoingMessageStates.DELIVERED\n  || state === OutgoingMessageStates.READ\n);\n\nexport const isAdminMessage = (message: AdminMessage): boolean => (\n  message && (message.isAdminMessage?.() || (message['messageType'] && message.messageType === 'admin'))\n);\nexport const isUserMessage = (message: UserMessage): boolean => (\n  message && (message.isUserMessage?.() || (message['messageType'] && message.messageType === 'user'))\n);\nexport const isFileMessage = (message: FileMessage): boolean => (\n  message && (message.isFileMessage?.() || (message['messageType'] && message.messageType === 'file'))\n);\n\nexport const isOGMessage = (message: UserMessage): boolean => !!(\n  message && isUserMessage(message) && message?.ogMetaData && message?.ogMetaData?.url\n);\nexport const isTextMessage = (message: UserMessage): boolean => isUserMessage(message) && !isOGMessage(message);\nexport const isThumbnailMessage = (message: FileMessage): boolean => message && isFileMessage(message) && isSupportedFileView(message.type);\nexport const isImageMessage = (message: FileMessage): boolean => message && isThumbnailMessage(message) && isImage(message.type);\nexport const isVideoMessage = (message: FileMessage): boolean => message && isThumbnailMessage(message) && isVideo(message.type);\nexport const isGifMessage = (message: FileMessage): boolean => message && isThumbnailMessage(message) && isGif(message.type);\nexport const isAudioMessage = (message: FileMessage): boolean => message && isFileMessage(message) && isAudio(message.type);\n\nexport const isEditedMessage = (message: UserMessage): boolean => isUserMessage(message) && (message?.updatedAt > 0);\nexport const isEnabledOGMessage = (message: UserMessage): boolean => (\n  (!message || !message.ogMetaData || !message.ogMetaData.url) ? false : true\n);\n\nexport const getUIKitMessageTypes = (): UIKitMessageTypes => ({ ...UIKitMessageTypes });\nexport const getUIKitMessageType = (message: CoreMessageType): string => {\n  if (isAdminMessage(message as AdminMessage)) return UIKitMessageTypes.ADMIN;\n  if (isUserMessage(message as UserMessage)) {\n    return isOGMessage(message as UserMessage) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;\n  }\n  if (isFileMessage(message as FileMessage)) {\n    return isThumbnailMessage(message as FileMessage) ? UIKitMessageTypes.THUMBNAIL : UIKitMessageTypes.FILE;\n  }\n  return UIKitMessageTypes.UNKNOWN;\n};\nexport const getSendingMessageStatus = (): SendingMessageStatus => ({ ...SendingMessageStatus });\n\nconst reducer = (accumulator: Array<string>, currentValue: string | Array<string>): Array<any> => {\n  if (Array.isArray(currentValue)) {\n    return [...accumulator, ...currentValue];\n  } else {\n    accumulator.push(currentValue);\n    return accumulator;\n  }\n};\nexport const getClassName = (classNames: string | Array<string | Array<string>>): string => (\n  Array.isArray(classNames)\n    ? classNames.reduce(reducer, []).join(' ')\n    : classNames\n);\nexport const isReactedBy = (userId: string, reaction: Reaction): boolean => (\n  reaction.userIds.some((reactorUserId: string): boolean => reactorUserId === userId)\n);\ninterface StringSet {\n  TOOLTIP__YOU: string;\n  TOOLTIP__AND_YOU: string;\n  TOOLTIP__UNKNOWN_USER: string;\n}\nexport const getEmojiTooltipString = (reaction: Reaction, userId: string, memberNicknamesMap: Map<string, string>, stringSet: StringSet): string => {\n  let you = '';\n  if (isReactedBy(userId, reaction)) {\n    you = reaction.userIds.length === 1 ? stringSet.TOOLTIP__YOU : stringSet.TOOLTIP__AND_YOU;\n  }\n  return (`${reaction.userIds\n    .filter((reactorUserId: string) => reactorUserId !== userId)\n    .map((reactorUserId: string) => (memberNicknamesMap.get(reactorUserId) || stringSet.TOOLTIP__UNKNOWN_USER))\n    .join(', ')}${you}`);\n};\n\n// TODO: Use the interface after language tranlsatation of Sendbird.js\ninterface UIKitStore {\n  stores: {\n    sdkStore: {\n      sdk: SendBirdInstance,\n    },\n    userStore: {\n      user: User,\n    },\n  },\n  config: {\n    useReaction: boolean,\n  }\n}\nexport const getCurrentUserId = (store: UIKitStore): string => (store?.stores?.userStore?.user?.userId);\nexport const getUseReaction = (store: UIKitStore, channel: GroupChannel | OpenChannel): boolean => {\n  if (!store?.config?.useReaction)\n    return false;\n  if (!store?.stores?.sdkStore?.sdk?.appInfo?.isUsingReaction)\n    return false;\n  if (channel?.isGroupChannel())\n    return !((channel as GroupChannel).isBroadcast || (channel as GroupChannel).isSuper);\n  return store?.config?.useReaction;\n};\n\nexport const isMessageSentByMe = (userId: string, message: UserMessage | FileMessage): boolean => (\n  (userId && message?.sender?.userId) && userId === message.sender.userId\n);\n\nconst URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\nexport const isUrl = (text: string): boolean => URL_REG.test(text);\n\nexport const truncateString = (fullStr: string, strLen?: number): string => {\n  if (!strLen) strLen = 40;\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  const separator = '...';\n  const sepLen = separator.length;\n  const charsToShow = strLen - sepLen;\n  const frontChars = Math.ceil(charsToShow / 2);\n  const backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n\nexport const copyToClipboard = (text: string): boolean => {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport const getEmojiListAll = (emojiContainer: EmojiContainer): Array<Emoji> => (\n  emojiContainer?.emojiCategories?.map((emojiCategory: EmojiCategory) => emojiCategory.emojis)\n    .reduce((prevArr: Array<Emoji>, currArr: Array<Emoji>) => prevArr.concat(currArr), [])\n);\nexport const getEmojiMapAll = (emojiContainer: EmojiContainer): Map<string, Emoji> => {\n  const emojiMap = new Map();\n  emojiContainer?.emojiCategories?.forEach((category: EmojiCategory) => {\n    category?.emojis?.forEach((emoji: Emoji): void => {\n      if (emoji && emoji.key) {\n        emojiMap.set(emoji.key, emoji);\n      }\n    });\n  });\n  return emojiMap;\n};\n\nexport const getUserName = (user: User): string => (user?.friendName || user?.nickname || user?.userId);\nexport const getSenderName = (message: UserMessage | FileMessage): string => (message.sender && getUserName(message.sender));\n\nexport const hasSameMembers = <T>(a: T[], b: T[]): boolean => {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return false;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  const sortedA = [...a].sort();\n  const sortedB = [...b].sort();\n\n  for (let i = 0; i < sortedA.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport const isFriend = (user: User): boolean => !!(user.friendDiscoveryKey || user.friendName);\n\nexport const filterMessageListParams = (params: MessageListParams, message: UserMessage | FileMessage): boolean => {\n  if (params?.messageType && params.messageType !== message.messageType) {\n    return false;\n  }\n  if (params?.customTypes?.length > 0) {\n    const customTypes = params.customTypes.filter((item) => item !== '*');\n    // Because Chat SDK inserts '*' when customTypes is empty\n    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {\n      return false;\n    }\n  }\n  if (params?.senderUserIds && params?.senderUserIds?.length > 0) {\n    if (message?.isUserMessage() || message.isFileMessage()) {\n      const messageSender = (message as UserMessage | FileMessage).sender || message['_sender'];\n      if (!params?.senderUserIds?.includes(messageSender?.userId)) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  if (!params?.includeParentMessageInfo && (message?.parentMessageId || message?.parentMessage)) {\n    return false;\n  }\n  return true;\n};\n\ninterface SDKChannelListParamsPrivateProps extends GroupChannelListQuery {\n  _searchFilter: {\n    search_query: string,\n    search_fields: Array<'member_nickname' | 'channel_name'>,\n  };\n  _userIdsFilter: {\n    userIds: Array<string>,\n    includeMode: boolean,\n    queryType: 'AND' | 'OR',\n  };\n}\nexport const filterChannelListParams = (params: SDKChannelListParamsPrivateProps, channel: GroupChannel, currentUserId: string): boolean => {\n  if (!params?.includeEmpty && channel?.lastMessage && channel.lastMessage === null) {\n    return false;\n  }\n  if (params?._searchFilter?.search_query && params._searchFilter.search_fields?.length > 0) {\n    const searchFilter = params._searchFilter;\n    const searchQuery = searchFilter.search_query;\n    const searchFields = searchFilter.search_fields;\n    if (searchQuery && searchFields && searchFields.length > 0) {\n      if (!searchFields.some((searchField) => {\n        switch (searchField) {\n          case 'channel_name': {\n            return channel.name.toLowerCase().includes(searchQuery.toLowerCase());\n          }\n          case 'member_nickname': {\n            return channel.members.some((member: Member) => member.nickname.toLowerCase().includes(searchQuery.toLowerCase()));\n          }\n          default: {\n            return true;\n          }\n        }\n      })) {\n        return false;\n      }\n    }\n  }\n  if (params?._userIdsFilter?.userIds?.length > 0) {\n    const userIdsFilter = params._userIdsFilter;\n    const { includeMode, queryType } = userIdsFilter;\n    const userIds: string[] = userIdsFilter.userIds;\n    const memberIds = channel.members.map((member: Member) => member.userId);\n    if (!includeMode) { // exact match\n      if (!userIds.includes(currentUserId)) {\n        userIds.push(currentUserId); // add the caller's userId if not added already.\n      }\n      if (channel.members.length > userIds.length) {\n        return false; // userIds may contain one or more non-member(s).\n      }\n      if (!hasSameMembers(userIds, memberIds)) {\n        return false;\n      }\n    } else if (userIds.length > 0) { // inclusive\n      switch (queryType) {\n        case 'AND': {\n          if (userIds.some((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        case 'OR': {\n          if (userIds.every((userId: string) => !memberIds.includes(userId))) {\n            return false;\n          }\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    }\n  }\n  if (params?.includeEmpty === false && channel?.lastMessage === null) {\n    return false;\n  }\n  if (params?.includeFrozen === false && channel?.isFrozen === true) {\n    return false;\n  }\n  if (params?.customTypesFilter?.length > 0 && !params.customTypesFilter.includes(channel?.customType)) {\n    return false;\n  }\n  if (params?.customTypeStartsWithFilter && !new RegExp(`^${params.customTypeStartsWithFilter}`).test(channel?.customType)) {\n    return false;\n  }\n  if (params?.channelNameContainsFilter && !channel?.name?.toLowerCase().includes(params.channelNameContainsFilter.toLowerCase())) {\n    return false;\n  }\n  if (params?.nicknameContainsFilter) {\n    const lowerCasedSubString = params.nicknameContainsFilter.toLowerCase();\n    if (channel?.members?.every((member: Member) => !member.nickname.toLowerCase().includes(lowerCasedSubString))) {\n      return false;\n    }\n  }\n  if (params?.channelUrlsFilter?.length > 0 && !params.channelUrlsFilter.includes(channel?.url)) {\n    return false;\n  }\n  if (params?.memberStateFilter) {\n    switch (params.memberStateFilter) {\n      case 'joined_only':\n        if (channel?.myMemberState !== 'joined') {\n          return false;\n        }\n        break;\n      case 'invited_only':\n        if (channel?.myMemberState !== 'invited') {\n          return false;\n        }\n        break;\n      case 'invited_by_friend':\n        if (channel?.myMemberState !== 'invited' || !isFriend(channel.inviter)) {\n          return false;\n        }\n        break;\n      case 'invited_by_non_friend':\n        if (channel?.myMemberState !== 'invited' || isFriend(channel.inviter)) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.hiddenChannelFilter) {\n    switch (params.hiddenChannelFilter) {\n      case 'unhidden_only':\n        if (channel?.isHidden || channel?.hiddenState !== 'unhidden') {\n          return false;\n        }\n        break;\n      case 'hidden_only':\n        if (!channel?.isHidden) {\n          return false;\n        }\n        break;\n      case 'hidden_allow_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_allow_auto_unhide') {\n          return false;\n        }\n        break;\n      case 'hidden_prevent_auto_unhide':\n        if (!channel?.isHidden || channel?.hiddenState !== 'hidden_prevent_auto_unhide') {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.unreadChannelFilter) {\n    switch (params.unreadChannelFilter) {\n      case 'unread_message':\n        if (channel?.unreadMessageCount === 0) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.publicChannelFilter) {\n    switch (params.publicChannelFilter) {\n      case 'public':\n        if (!channel?.isPublic) {\n          return false;\n        }\n        break;\n      case 'private':\n        if (channel?.isPublic) {\n          return false;\n        }\n        break;\n    }\n  }\n  if (params?.superChannelFilter) {\n    switch (params.superChannelFilter) {\n      case 'super':\n        if (!channel?.isSuper) {\n          return false;\n        }\n        break;\n      case 'nonsuper':\n        if (channel?.isSuper) {\n          return false;\n        }\n        break;\n    }\n  }\n  return true;\n};\n\nexport const binarySearch = (list: Array<number>, number: number): number => {// [100, 99, 98, 97, ...]\n  const pivot = Math.floor(list.length / 2);\n  if (list[pivot] === number) {\n    return pivot;\n  }\n  const leftList = list.slice(0, pivot);\n  const rightList = list.slice(pivot + 1, list.length);\n  if (list[pivot] > number) {\n    return pivot + 1 + (rightList.length === 0 ? 0 : binarySearch(rightList, number));\n  } else {\n    return (leftList.length === 0) ? pivot : binarySearch(leftList, number);\n  }\n};\n// This is required when channel is displayed on channel list by filter\nexport const getChannelsWithUpsertedChannel = (channels: Array<GroupChannel>, channel: GroupChannel): Array<GroupChannel> => {\n  if (channels.some((ch: GroupChannel) => ch.url === channel.url)) {\n    return channels.map((ch: GroupChannel) => (ch.url === channel.url ? channel : ch));\n  }\n  const targetIndex = binarySearch(\n    channels.map((channel: GroupChannel) => channel?.lastMessage?.createdAt || channel?.createdAt),\n    channel?.lastMessage?.createdAt || channel?.createdAt\n  );\n  return [...channels.slice(0, targetIndex), channel, ...channels.slice(targetIndex, channels.length)];\n};\n"]},"metadata":{},"sourceType":"module"}