{"ast":null,"code":"import { d as __spreadArray } from './LocalizationContext-963dc1a0.js';\nimport React__default, { useState } from 'react';\nimport { I as Icon, c as IconTypes } from './index-6ff1fa1b.js';\nimport { n as noop } from './index-ec4c0e85.js';\nvar Context = /*#__PURE__*/React__default.createContext({\n  opened: '',\n  setOpened: noop\n});\nvar Consumer = Context.Consumer;\nvar Provider = Context.Provider; // Wraps all the accordions in an accordion set\n\nfunction AccordionGroup$1(_a) {\n  var children = _a.children,\n      _b = _a.className,\n      className = _b === void 0 ? '' : _b;\n\n  var _c = useState(''),\n      opened = _c[0],\n      setOpened = _c[1];\n\n  return /*#__PURE__*/React__default.createElement(Provider, {\n    value: {\n      opened: opened,\n      setOpened: setOpened\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: className\n  }, children));\n}\n\nfunction Accordion(_a) {\n  var className = _a.className,\n      id = _a.id,\n      renderTitle = _a.renderTitle,\n      renderContent = _a.renderContent,\n      renderFooter = _a.renderFooter;\n\n  var _b = useState(false),\n      showAccordion = _b[0],\n      setShowAccordion = _b[1];\n\n  return /*#__PURE__*/React__default.createElement(Consumer, null, // Function is considered like a react component\n  function (value) {\n    var opened = value.opened,\n        setOpened = value.setOpened; // props from Provider\n\n    if (id === opened) {\n      setShowAccordion(true);\n    } else {\n      setShowAccordion(false);\n    }\n\n    var handleClick = function handleClick() {\n      if (showAccordion) {\n        setOpened('');\n      } else {\n        setOpened(id);\n      }\n    };\n\n    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], true), ['sendbird-accordion__panel-header'], false).join(' '),\n      id: id,\n      role: \"switch\",\n      \"aria-checked\": false,\n      onClick: handleClick,\n      onKeyDown: handleClick,\n      tabIndex: 0\n    }, renderTitle(), /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.CHEVRON_RIGHT,\n      className: ['sendbird-accordion__panel-icon-right', 'sendbird-accordion__panel-icon--chevron', showAccordion ? 'sendbird-accordion__panel-icon--open' : ''].join(' '),\n      height: \"24px\",\n      width: \"24px\"\n    })), showAccordion && /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-accordion\"\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-accordion__list\"\n    }, renderContent()), renderFooter && /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-accordion__footer\"\n    }, renderFooter())));\n  });\n}\n\nvar AccordionGroup = AccordionGroup$1;\nexport { AccordionGroup as A, Accordion as a };","map":{"version":3,"mappings":";;;;AASA,IAAMA,OAAO,gBAAGC,cAAK,CAACC,aAAND,CAAkC;EAChDE,MAAM,EAAE,EADwC;EAEhDC,SAAS,EAAEC;AAFqC,CAAlCJ,CAAhB;AAKO,IAAMK,QAAQ,GAAGN,OAAO,CAACM,QAAzB;AACA,IAAMC,QAAQ,GAAGP,OAAO,CAACO,QAAzB,C,CCfP;;SAYwBC,iBAAeC;MACrCC,QAAQ;MACRC;MAAAC,SAAS,mBAAG,EAAH,GAAGD;;EAEN,SAAsBE,QAAQ,CAAC,EAAD,CAA9B;EAAA,IAACV,MAAM,QAAP;EAAA,IAASC,SAAS,QAAlB;;EACN,oBACEH,6BAACM,QAADN;IAAUa,KAAK,EAAE;MAAEX,MAAM,QAAR;MAAUC,SAAS;IAAnB;EAAjB,gBACEH;IAAKW,SAAS,EAAEA;EAAhBX,GAA6BS,QAA7BT,CADFA,CADF;AAKD;;SCNuBc,UAAUN;MAChCG,SAAS;MACTI,EAAE;MACFC,WAAW;MACXC,aAAa;MACbC,YAAY;;EAEN,SAAoCN,QAAQ,CAAC,KAAD,CAA5C;EAAA,IAACO,aAAa,QAAd;EAAA,IAAgBC,gBAAgB,QAAhC;;EACN,oBACEpB,6BAACK,QAADL;EAGI,UAACa,KAAD;IACU,UAAM,GAAgBA,KAAK,OAA3B;IAAA,IAAQV,SAAS,GAAKU,KAAK,UAA3B,CADV,CACU;;IACR,IAAIE,EAAE,KAAKb,MAAX,EAAmB;MACjBkB,gBAAgB,CAAC,IAAD,CAAhBA;IADF,OAEO;MACLA,gBAAgB,CAAC,KAAD,CAAhBA;IACD;;IACD,IAAMC,WAAW,GAAG,SAAdA,WAAc;MAClB,IAAIF,aAAJ,EAAmB;QACjBhB,SAAS,CAAC,EAAD,CAATA;MADF,OAEO;QACLA,SAAS,CAACY,EAAD,CAATZ;MACD;IALH;;IAOA,oBACEH,yEACEA;MACEW,SAAS,EAAEW,gCACLC,KAAK,CAACC,OAAND,CAAcZ,SAAdY,IAA2BZ,SAA3BY,GAAuC,CAACZ,SAAD,CADlCW,EACkC,IADlCA,GACkC,CAC3C,kCAD2C,CADlCA,EAET,KAFSA,EAGTG,IAHSH,CAGJ,GAHIA,CADbtB;MAKEe,EAAE,EAAEA,EALNf;MAME0B,IAAI,EAAC,QANP1B;MAOE,gBAAc,KAPhBA;MAQE2B,OAAO,EAAEN,WARXrB;MASE4B,SAAS,EAAEP,WATbrB;MAUE6B,QAAQ,EAAE;IAVZ7B,GAYIgB,WAAW,EAZfhB,eAaEA,6BAAC8B,IAAD9B;MACE+B,IAAI,EAAEC,SAAS,CAACC,aADlB;MAEEtB,SAAS,EAAE,CACT,sCADS,EAET,yCAFS,EAGRQ,aAAa,GAAG,sCAAH,GAA4C,EAHjD,EAITM,IAJS,CAIJ,GAJI,CAFb;MAOES,MAAM,EAAC,MAPT;MAQEC,KAAK,EAAC;IARR,EAbFnC,CADFA,EA0BImB,aAAa,iBACXnB;MAAKW,SAAS,EAAC;IAAfX,gBACEA;MAAKW,SAAS,EAAC;IAAfX,GACIiB,aAAa,EADjBjB,CADFA,EAKIkB,YAAY,iBACVlB;MAAKW,SAAS,EAAC;IAAfX,GACIkB,YAAY,EADhBlB,CANNA,CA3BNA,CADF;EAjBN,EADF;AAiED;;IAEYO,cAAc,GAAG6B","names":["Context","React","createContext","opened","setOpened","noop","Consumer","Provider","AccordionGroup","_a","children","_b","className","useState","value","Accordion","id","renderTitle","renderContent","renderFooter","showAccordion","setShowAccordion","handleClick","__spreadArray","Array","isArray","join","role","onClick","onKeyDown","tabIndex","Icon","type","IconTypes","CHEVRON_RIGHT","height","width","AccordionGroup_"],"sources":["C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\Accordion\\context.ts","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\Accordion\\AccordionGroup.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\Accordion\\index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { noop } from '../../utils/utils';\n\ninterface ContextValue {\n  setOpened(accordion: string): void;\n  opened: string;\n}\n\nconst Context = React.createContext<ContextValue>({\n  opened: '', // mock default value\n  setOpened: noop,\n});\n\nexport const Consumer = Context.Consumer;\nexport const Provider = Context.Provider;\n","// Wraps all the accordions in an accordion set\n// keep one accordion open at a time\nimport React, { ReactElement, useState } from 'react';\n\nimport { Provider } from './context';\n\ninterface Props {\n  children: Array<ReactElement> | ReactElement;\n  defaultOpened?: string;\n  className?: string;\n}\n\nexport default function AccordionGroup({\n  children,\n  className = '',\n}: Props): ReactElement {\n  const [opened, setOpened] = useState('');\n  return (\n    <Provider value={{ opened, setOpened }}>\n      <div className={className}>{ children }</div>\n    </Provider>\n  )\n}\n","import React, { ReactElement, useState } from 'react';\n\nimport './index.scss';\n\nimport Icon, { IconTypes } from '../Icon';\nimport AccordionGroup_ from './AccordionGroup';\nimport { Consumer } from './context';\n\ninterface Props {\n  className?: string | Array<string>;\n  id: string;\n  renderTitle(): ReactElement;\n  renderContent(): ReactElement;\n  renderFooter?(): ReactElement;\n}\n\nexport default function Accordion({\n  className,\n  id,\n  renderTitle,\n  renderContent,\n  renderFooter,\n}: Props): ReactElement {\n  const [showAccordion, setShowAccordion] = useState(false);\n  return (\n    <Consumer>\n      {\n        // Function is considered like a react component\n        (value) => {\n          const { opened, setOpened } = value; // props from Provider\n          if (id === opened) {\n            setShowAccordion(true);\n          } else {\n            setShowAccordion(false);\n          }\n          const handleClick = () => {\n            if (showAccordion) {\n              setOpened('');\n            } else {\n              setOpened(id);\n            }\n          }\n          return (\n            <>\n              <div\n                className={[\n                  ...(Array.isArray(className) ? className : [className]),\n                  'sendbird-accordion__panel-header',\n                ].join(' ')}\n                id={id}\n                role=\"switch\"\n                aria-checked={false}\n                onClick={handleClick}\n                onKeyDown={handleClick}\n                tabIndex={0}\n              >\n                { renderTitle() }\n                <Icon\n                  type={IconTypes.CHEVRON_RIGHT}\n                  className={[\n                    'sendbird-accordion__panel-icon-right',\n                    'sendbird-accordion__panel-icon--chevron',\n                    (showAccordion ? 'sendbird-accordion__panel-icon--open' : ''),\n                  ].join(' ')}\n                  height=\"24px\"\n                  width=\"24px\"\n                />\n              </div>\n              {\n                showAccordion && (\n                  <div className=\"sendbird-accordion\">\n                    <div className=\"sendbird-accordion__list\">\n                      { renderContent() }\n                    </div>\n                    {\n                      renderFooter && (\n                        <div className=\"sendbird-accordion__footer\">\n                          { renderFooter() }\n                        </div>\n                      )\n                    }\n                  </div>\n                )\n              }\n            </>);\n        }\n      }\n    </Consumer>\n  )\n}\n\nexport const AccordionGroup = AccordionGroup_;\n"]},"metadata":{},"sourceType":"module"}