{"ast":null,"code":"import { c as LocalizationContext, b as _slicedToArray } from './LocalizationContext-963dc1a0.js';\nimport React__default, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Sendbird from './SendbirdProvider.js';\nimport ChannelList from './ChannelList.js';\nimport Conversation from './Channel.js';\nimport ChannelSettings from './ChannelSettings.js';\nimport MessageSearch from './MessageSearch.js';\nimport { L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, e as Loader } from './index-6ff1fa1b.js';\nimport { I as IconButton } from './index-f66438bd.js';\nimport 'sendbird';\nimport './actionTypes-15ff2923.js';\nimport './index-a1512a62.js';\nimport 'css-vars-ponyfill';\nimport './index-7c2502c4.js';\nimport './utils-fa79caf2.js';\nimport './LeaveChannel-058050f7.js';\nimport './index-ec4c0e85.js';\nimport './index-a9a603e2.js';\nimport './index-53ae4315.js';\nimport './index-1de8106c.js';\nimport 'react-dom';\nimport './index-7e077832.js';\nvar COMPONENT_CLASS_NAME = 'sendbird-message-search-pannel';\n\nfunction MessageSearchPannel(props) {\n  var channelUrl = props.channelUrl,\n      onResultClick = props.onResultClick,\n      onCloseClick = props.onCloseClick;\n\n  var _a = useState(''),\n      searchString = _a[0],\n      setSearchString = _a[1];\n\n  var _b = useState(''),\n      inputString = _b[0],\n      setInputString = _b[1];\n\n  var _c = useState(false),\n      loading = _c[0],\n      setLoading = _c[1];\n\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var timeout = null;\n  useEffect(function () {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(function () {\n      setSearchString(inputString);\n      setLoading(true);\n      timeout = null;\n    }, 500);\n  }, [inputString]);\n\n  var handleOnChangeInputString = function handleOnChangeInputString(e) {\n    setInputString(e.target.value);\n  };\n\n  var handleOnResultLoaded = function handleOnResultLoaded() {\n    setLoading(false);\n  };\n\n  var handleOnClickResetStringButton = function handleOnClickResetStringButton(e) {\n    e.stopPropagation();\n    setInputString('');\n    setSearchString('');\n  };\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__header\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_CLASS_NAME + \"__header__title\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.SEARCH_IN_CHANNEL), /*#__PURE__*/React__default.createElement(IconButton, {\n    className: COMPONENT_CLASS_NAME + \"__header__close-button\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onCloseClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_1,\n    width: \"22px\",\n    height: \"22px\"\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__input\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__input__container\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__search-icon\",\n    type: IconTypes.SEARCH,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(\"input\", {\n    className: COMPONENT_CLASS_NAME + \"__input__container__input-area\",\n    placeholder: stringSet.SEARCH,\n    value: inputString,\n    onChange: handleOnChangeInputString\n  }), inputString && loading && /*#__PURE__*/React__default.createElement(Loader, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__spinner\",\n    width: \"20px\",\n    height: \"20px\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SPINNER,\n    fillColor: IconColors.PRIMARY,\n    width: \"20px\",\n    height: \"20px\"\n  })), !loading && inputString && /*#__PURE__*/React__default.createElement(Icon, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__reset-input-button\",\n    type: IconTypes.REMOVE,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"20px\",\n    height: \"20px\",\n    onClick: handleOnClickResetStringButton\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__message-search\"\n  }, /*#__PURE__*/React__default.createElement(MessageSearch, {\n    channelUrl: channelUrl,\n    searchString: searchString,\n    onResultClick: onResultClick,\n    onResultLoaded: handleOnResultLoaded\n  })));\n}\n\nfunction App(props) {\n  var appId = props.appId,\n      userId = props.userId,\n      accessToken = props.accessToken,\n      theme = props.theme,\n      userListQuery = props.userListQuery,\n      nickname = props.nickname,\n      profileUrl = props.profileUrl,\n      _props$config = props.config,\n      config = _props$config === void 0 ? {} : _props$config,\n      useReaction = props.useReaction,\n      replyType = props.replyType,\n      useMessageGrouping = props.useMessageGrouping,\n      colorSet = props.colorSet,\n      stringSet = props.stringSet,\n      dateLocale = props.dateLocale,\n      allowProfileEdit = props.allowProfileEdit,\n      disableUserProfile = props.disableUserProfile,\n      renderUserProfile = props.renderUserProfile,\n      showSearchIcon = props.showSearchIcon,\n      onProfileEditSuccess = props.onProfileEditSuccess,\n      imageCompression = props.imageCompression,\n      disableAutoSelect = props.disableAutoSelect;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentChannelUrl = _useState2[0],\n      setCurrentChannelUrl = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showSettings = _useState4[0],\n      setShowSettings = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showSearch = _useState6[0],\n      setShowSearch = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      highlightedMessage = _useState8[0],\n      setHighlightedMessage = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      startingPoint = _useState10[0],\n      setStartingPoint = _useState10[1];\n\n  return /*#__PURE__*/React__default.createElement(Sendbird, {\n    stringSet: stringSet,\n    dateLocale: dateLocale,\n    appId: appId,\n    userId: userId,\n    accessToken: accessToken,\n    theme: theme,\n    nickname: nickname,\n    profileUrl: profileUrl,\n    userListQuery: userListQuery,\n    config: config,\n    colorSet: colorSet,\n    disableUserProfile: disableUserProfile,\n    renderUserProfile: renderUserProfile,\n    imageCompression: imageCompression,\n    useReaction: useReaction\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__wrap\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__channellist-wrap\"\n  }, /*#__PURE__*/React__default.createElement(ChannelList, {\n    allowProfileEdit: allowProfileEdit,\n    onProfileEditSuccess: onProfileEditSuccess,\n    onChannelSelect: function onChannelSelect(channel) {\n      setStartingPoint(null);\n      setHighlightedMessage(null);\n\n      if (channel && channel.url) {\n        setCurrentChannelUrl(channel.url);\n      } else {\n        setCurrentChannelUrl('');\n      }\n    },\n    disableAutoSelect: disableAutoSelect\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\\n            \".concat(showSettings ? 'sendbird-app__conversation--settings-open' : '', \"\\n            \").concat(showSearch ? 'sendbird-app__conversation--search-open' : '', \"\\n            sendbird-app__conversation-wrap\\n          \")\n  }, /*#__PURE__*/React__default.createElement(Conversation, {\n    channelUrl: currentChannelUrl,\n    onChatHeaderActionClick: function onChatHeaderActionClick() {\n      setShowSearch(false);\n      setShowSettings(!showSettings);\n    },\n    onSearchClick: function onSearchClick() {\n      setShowSettings(false);\n      setShowSearch(!showSearch);\n    },\n    showSearchIcon: showSearchIcon,\n    startingPoint: startingPoint,\n    highlightedMessage: highlightedMessage,\n    useReaction: useReaction,\n    replyType: replyType,\n    useMessageGrouping: useMessageGrouping\n  })), showSettings && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__settingspanel-wrap\"\n  }, /*#__PURE__*/React__default.createElement(ChannelSettings, {\n    className: \"sendbird-channel-settings\",\n    channelUrl: currentChannelUrl,\n    onCloseClick: function onCloseClick() {\n      setShowSettings(false);\n    }\n  })), showSearch && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__searchpanel-wrap\"\n  }, /*#__PURE__*/React__default.createElement(MessageSearchPannel, {\n    channelUrl: currentChannelUrl,\n    onResultClick: function onResultClick(message) {\n      if (message.messageId === highlightedMessage) {\n        setHighlightedMessage(null);\n        setTimeout(function () {\n          setHighlightedMessage(message.messageId);\n        });\n      } else {\n        setStartingPoint(message.createdAt);\n        setHighlightedMessage(message.messageId);\n      }\n    },\n    onCloseClick: function onCloseClick() {\n      setShowSearch(false);\n    }\n  }))));\n}\n\nApp.propTypes = {\n  appId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  accessToken: PropTypes.string,\n  theme: PropTypes.string,\n  userListQuery: PropTypes.func,\n  nickname: PropTypes.string,\n  profileUrl: PropTypes.string,\n  allowProfileEdit: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  config: PropTypes.shape({\n    // None Error Warning Info 'All/Debug'\n    logLevel: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n  }),\n  dateLocale: PropTypes.shape({}),\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showSearchIcon: PropTypes.bool,\n  useMessageGrouping: PropTypes.bool,\n  stringSet: PropTypes.objectOf(PropTypes.string),\n  colorSet: PropTypes.objectOf(PropTypes.string),\n  imageCompression: PropTypes.shape({\n    compressionRate: PropTypes.number,\n    resizingWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    resizingHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  }),\n  disableAutoSelect: PropTypes.bool\n};\nApp.defaultProps = {\n  accessToken: '',\n  theme: 'light',\n  nickname: '',\n  profileUrl: '',\n  userListQuery: null,\n  allowProfileEdit: false,\n  onProfileEditSuccess: null,\n  disableUserProfile: false,\n  showSearchIcon: false,\n  renderUserProfile: null,\n  config: {},\n  dateLocale: null,\n  useReaction: true,\n  replyType: 'NONE',\n  useMessageGrouping: true,\n  stringSet: null,\n  colorSet: null,\n  imageCompression: {},\n  disableAutoSelect: false\n};\nexport { App as default };","map":{"version":3,"mappings":"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","names":["COMPONENT_CLASS_NAME","MessageSearchPannel","props","onResultClick","onCloseClick","useState","searchString","setSearchString","inputString","setInputString","loading","setLoading","useContext","LocalizationContext","timeout","useEffect","clearTimeout","setTimeout","handleOnChangeInputString","e","target","value","handleOnResultLoaded","handleOnClickResetStringButton","stopPropagation","React","className","Label","type","LabelTypography","H_2","color","LabelColors","ONBACKGROUND_1","stringSet","SEARCH_IN_CHANNEL","IconButton","width","height","onClick","Icon","IconTypes","CLOSE","fillColor","IconColors","ON_BACKGROUND_1","SEARCH","ON_BACKGROUND_3","placeholder","onChange","Loader","SPINNER","PRIMARY","REMOVE","MessageSearch","channelUrl","onResultLoaded","App","appId","userId","accessToken","theme","userListQuery","nickname","profileUrl","config","useReaction","replyType","useMessageGrouping","colorSet","dateLocale","allowProfileEdit","disableUserProfile","renderUserProfile","showSearchIcon","onProfileEditSuccess","imageCompression","disableAutoSelect","currentChannelUrl","setCurrentChannelUrl","showSettings","setShowSettings","showSearch","setShowSearch","highlightedMessage","setHighlightedMessage","startingPoint","setStartingPoint","Sendbird","ChannelList","onChannelSelect","channel","url","Conversation","onChatHeaderActionClick","onSearchClick","ChannelSettings","message","messageId","createdAt","propTypes","PropTypes","string","isRequired","func","bool","shape","logLevel","oneOfType","arrayOf","oneOf","objectOf","compressionRate","number","resizingWidth","resizingHeight","defaultProps"],"sources":["C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\MessageSearch\\messageSearchPannel.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\App\\index.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport './messageSearchPannel.scss';\n\nimport MessageSearch from './index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Loader from '../../ui/Loader';\n\ninterface Props {\n  channelUrl: string;\n  onResultClick?: (message) => void;\n  onCloseClick?: () => void;\n}\n\nconst COMPONENT_CLASS_NAME = 'sendbird-message-search-pannel';\n\nfunction MessageSearchPannel(props: Props): JSX.Element {\n  const {\n    channelUrl,\n    onResultClick,\n    onCloseClick,\n  } = props;\n\n  const [searchString, setSearchString] = useState('');\n  const [inputString, setInputString] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  let timeout = null;\n  useEffect(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      setSearchString(inputString);\n      setLoading(true);\n      timeout = null;\n    }, 500);\n  }, [inputString]);\n\n  const handleOnChangeInputString = (e) => {\n    setInputString(e.target.value);\n  };\n\n  const handleOnResultLoaded = () => {\n    setLoading(false);\n  };\n\n  const handleOnClickResetStringButton = (e) => {\n    e.stopPropagation();\n    setInputString('');\n    setSearchString('');\n  };\n\n  return (\n    <div className={COMPONENT_CLASS_NAME}>\n      <div className={`${COMPONENT_CLASS_NAME}__header`}>\n        <Label\n          className={`${COMPONENT_CLASS_NAME}__header__title`}\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {stringSet.SEARCH_IN_CHANNEL}\n        </Label>\n        <IconButton\n          className={`${COMPONENT_CLASS_NAME}__header__close-button`}\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onCloseClick}\n        >\n          <Icon\n            type={IconTypes.CLOSE}\n            fillColor={IconColors.ON_BACKGROUND_1}\n            width=\"22px\"\n            height=\"22px\"\n          />\n        </IconButton>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__input`}>\n        <div className={`${COMPONENT_CLASS_NAME}__input__container`}>\n            <Icon\n              className={`${COMPONENT_CLASS_NAME}__input__container__search-icon`}\n              type={IconTypes.SEARCH}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"24px\"\n              height=\"24px\"\n            />\n            <input\n              className={`${COMPONENT_CLASS_NAME}__input__container__input-area`}\n              placeholder={stringSet.SEARCH}\n              value={inputString}\n              onChange={handleOnChangeInputString}\n            />\n            {\n              inputString && loading && (\n                <Loader\n                  className={`${COMPONENT_CLASS_NAME}__input__container__spinner`}\n                  width=\"20px\"\n                  height=\"20px\"\n                >\n                  <Icon\n                    type={IconTypes.SPINNER}\n                    fillColor={IconColors.PRIMARY}\n                    width=\"20px\"\n                    height=\"20px\"\n                  />\n                </Loader>\n              )\n            }\n            {\n              !loading && inputString && (\n                <Icon\n                  className={`${COMPONENT_CLASS_NAME}__input__container__reset-input-button`}\n                  type={IconTypes.REMOVE}\n                  fillColor={IconColors.ON_BACKGROUND_3}\n                  width=\"20px\"\n                  height=\"20px\"\n                  onClick={handleOnClickResetStringButton}\n                />\n              )\n            }\n        </div>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__message-search`}>\n        <MessageSearch\n          channelUrl={channelUrl}\n          searchString={searchString}\n          onResultClick={onResultClick}\n          onResultLoaded={handleOnResultLoaded}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MessageSearchPannel;\n","/**\n * This is a drop in Chat solution\n * Can also be used as an example for creating\n * default chat apps\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sendbird from '../../lib/Sendbird';\n\nimport ChannelList from '../ChannelList';\nimport Conversation from '../Conversation';\nimport ChannelSettings from '../ChannelSettings';\nimport MessageSearchPannel from '../MessageSearch/messageSearchPannel';\n\nimport './index.scss';\n\nexport default function App(props) {\n  const {\n    appId,\n    userId,\n    accessToken,\n    theme,\n    userListQuery,\n    nickname,\n    profileUrl,\n    config = {},\n    useReaction,\n    replyType,\n    useMessageGrouping,\n    colorSet,\n    stringSet,\n    dateLocale,\n    allowProfileEdit,\n    disableUserProfile,\n    renderUserProfile,\n    showSearchIcon,\n    onProfileEditSuccess,\n    imageCompression,\n    disableAutoSelect,\n  } = props;\n  const [currentChannelUrl, setCurrentChannelUrl] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n  const [highlightedMessage, setHighlightedMessage] = useState(null);\n  const [startingPoint, setStartingPoint] = useState(null);\n\n  return (\n    <Sendbird\n      stringSet={stringSet}\n      dateLocale={dateLocale}\n      appId={appId}\n      userId={userId}\n      accessToken={accessToken}\n      theme={theme}\n      nickname={nickname}\n      profileUrl={profileUrl}\n      userListQuery={userListQuery}\n      config={config}\n      colorSet={colorSet}\n      disableUserProfile={disableUserProfile}\n      renderUserProfile={renderUserProfile}\n      imageCompression={imageCompression}\n      useReaction={useReaction}\n    >\n      <div className=\"sendbird-app__wrap\">\n        <div className=\"sendbird-app__channellist-wrap\">\n          <ChannelList\n            allowProfileEdit={allowProfileEdit}\n            onProfileEditSuccess={onProfileEditSuccess}\n            onChannelSelect={(channel) => {\n              setStartingPoint(null);\n              setHighlightedMessage(null);\n              if (channel && channel.url) {\n                setCurrentChannelUrl(channel.url);\n              } else {\n                setCurrentChannelUrl('');\n              }\n            }}\n            disableAutoSelect={disableAutoSelect}\n          />\n        </div>\n        <div\n          className={`\n            ${showSettings ? 'sendbird-app__conversation--settings-open' : ''}\n            ${showSearch ? 'sendbird-app__conversation--search-open' : ''}\n            sendbird-app__conversation-wrap\n          `}\n        >\n          <Conversation\n            channelUrl={currentChannelUrl}\n            onChatHeaderActionClick={() => {\n              setShowSearch(false);\n              setShowSettings(!showSettings);\n            }}\n            onSearchClick={() => {\n              setShowSettings(false);\n              setShowSearch(!showSearch);\n            }}\n            showSearchIcon={showSearchIcon}\n            startingPoint={startingPoint}\n            highlightedMessage={highlightedMessage}\n            useReaction={useReaction}\n            replyType={replyType}\n            useMessageGrouping={useMessageGrouping}\n          />\n        </div>\n        {showSettings && (\n          <div className=\"sendbird-app__settingspanel-wrap\">\n            <ChannelSettings\n              className=\"sendbird-channel-settings\"\n              channelUrl={currentChannelUrl}\n              onCloseClick={() => {\n                setShowSettings(false);\n              }}\n            />\n          </div>\n        )}\n        {showSearch && (\n          <div className=\"sendbird-app__searchpanel-wrap\">\n            <MessageSearchPannel\n              channelUrl={currentChannelUrl}\n              onResultClick={(message) => {\n                if (message.messageId === highlightedMessage) {\n                  setHighlightedMessage(null);\n                  setTimeout(() => {\n                    setHighlightedMessage(message.messageId);\n                  });\n                } else {\n                  setStartingPoint(message.createdAt);\n                  setHighlightedMessage(message.messageId);\n                }\n              }}\n              onCloseClick={() => {\n                setShowSearch(false);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </Sendbird>\n  );\n}\n\nApp.propTypes = {\n  appId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  accessToken: PropTypes.string,\n  theme: PropTypes.string,\n  userListQuery: PropTypes.func,\n  nickname: PropTypes.string,\n  profileUrl: PropTypes.string,\n  allowProfileEdit: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  config: PropTypes.shape({\n    // None Error Warning Info 'All/Debug'\n    logLevel: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n  }),\n  dateLocale: PropTypes.shape({}),\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showSearchIcon: PropTypes.bool,\n  useMessageGrouping: PropTypes.bool,\n  stringSet: PropTypes.objectOf(PropTypes.string),\n  colorSet: PropTypes.objectOf(PropTypes.string),\n  imageCompression: PropTypes.shape({\n    compressionRate: PropTypes.number,\n    resizingWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    resizingHeight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  }),\n  disableAutoSelect: PropTypes.bool,\n};\n\nApp.defaultProps = {\n  accessToken: '',\n  theme: 'light',\n  nickname: '',\n  profileUrl: '',\n  userListQuery: null,\n  allowProfileEdit: false,\n  onProfileEditSuccess: null,\n  disableUserProfile: false,\n  showSearchIcon: false,\n  renderUserProfile: null,\n  config: {},\n  dateLocale: null,\n  useReaction: true,\n  replyType: 'NONE',\n  useMessageGrouping: true,\n  stringSet: null,\n  colorSet: null,\n  imageCompression: {},\n  disableAutoSelect: false,\n};\n"]},"metadata":{},"sourceType":"module"}