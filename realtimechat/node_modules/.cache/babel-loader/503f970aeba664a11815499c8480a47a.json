{"ast":null,"code":"import { b as _slicedToArray, c as LocalizationContext, d as __spreadArray, _ as __assign, w as withSendbirdContext, u as uuidv4, e as _toConsumableArray } from './LocalizationContext-963dc1a0.js';\nimport React__default, { useRef, useState, useContext, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { M as Modal, T as Type, a as TextButton, C as ContextMenu, I as IconButton, b as MenuItems, c as MenuItem, B as Button, d as ButtonTypes, e as ButtonSizes, U as UserProfileContext, f as ConnectedUserProfile, g as getSdk, h as UserProfileProvider } from './index-f66438bd.js';\nimport { I as InviteMembers$1, B as Badge, c as createDefaultUserListQuery, L as LeaveChannel } from './LeaveChannel-058050f7.js';\nimport { A as Avatar, L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, P as PlaceHolder, f as PlaceHolderTypes } from './index-6ff1fa1b.js';\nimport { I as InputLabel, a as Input, n as noop, U as UserListItem$2, M as MutedAvatarOverlay } from './index-ec4c0e85.js';\nimport { C as ChannelAvatar } from './index-7c2502c4.js';\nimport { A as AccordionGroup, a as Accordion } from './index-7e077832.js';\nimport 'react-dom';\nimport './index-a1512a62.js';\nimport './utils-fa79caf2.js';\n\nvar EditDetails = function EditDetails(props) {\n  var _onSubmit = props.onSubmit,\n      onCancel = props.onCancel,\n      channel = props.channel,\n      userId = props.userId,\n      theme = props.theme;\n  var inputRef = useRef(null);\n  var formRef = useRef(null);\n  var hiddenInputRef = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentImg = _useState2[0],\n      setCurrentImg = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newFile = _useState4[0],\n      setNewFile = _useState4[1];\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var title = channel.name;\n  return /*#__PURE__*/React__default.createElement(Modal, {\n    titleText: stringSet.MODAL__CHANNEL_INFORMATION__TITLE,\n    submitText: stringSet.BUTTON__SAVE,\n    onCancel: onCancel,\n    onSubmit: function onSubmit() {\n      if (title !== '' && !inputRef.current.value) {\n        if (formRef.current.reportValidity) {\n          // might not work in explorer\n          formRef.current.reportValidity();\n        }\n\n        return;\n      }\n\n      _onSubmit(newFile, inputRef.current.value);\n\n      onCancel();\n    },\n    type: Type.PRIMARY\n  }, /*#__PURE__*/React__default.createElement(\"form\", {\n    className: \"channel-profile-form\",\n    ref: formRef,\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"channel-profile-form__img-section\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"channel-profile-form__avatar\"\n  }, currentImg ? /*#__PURE__*/React__default.createElement(Avatar, {\n    height: \"80px\",\n    width: \"80px\",\n    src: currentImg\n  }) : /*#__PURE__*/React__default.createElement(ChannelAvatar, {\n    height: 80,\n    width: 80,\n    channel: channel,\n    userId: userId,\n    theme: theme\n  })), /*#__PURE__*/React__default.createElement(\"input\", {\n    ref: hiddenInputRef,\n    type: \"file\",\n    accept: \"image/gif, image/jpeg, image/png\",\n    style: {\n      display: 'none'\n    },\n    onChange: function onChange(e) {\n      setCurrentImg(URL.createObjectURL(e.target.files[0]));\n      setNewFile(e.target.files[0]);\n      hiddenInputRef.current.value = '';\n    }\n  }), /*#__PURE__*/React__default.createElement(TextButton, {\n    className: \"channel-profile-form__avatar-button\",\n    onClick: function onClick() {\n      return hiddenInputRef.current.click();\n    },\n    notUnderline: true\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: LabelColors.PRIMARY\n  }, stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"channel-profile-form__name-section\"\n  }, /*#__PURE__*/React__default.createElement(InputLabel, null, stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME), /*#__PURE__*/React__default.createElement(Input, {\n    required: title !== '',\n    name: \"channel-profile-form__name\",\n    ref: inputRef,\n    value: title,\n    placeHolder: stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER\n  }))));\n};\n\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired\n};\n\nvar ChannelProfile = function ChannelProfile(props) {\n  var disabled = props.disabled,\n      channel = props.channel,\n      userId = props.userId,\n      theme = props.theme,\n      onChannelInfoChange = props.onChannelInfoChange;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var getChannelName = function getChannelName() {\n    if (channel && channel.name && channel.name !== 'Group Channel') {\n      return channel.name;\n    }\n\n    if (channel && (channel.name === 'Group Channel' || !channel.name)) {\n      return channel.members.map(function (member) {\n        return member.nickname || stringSet.NO_NAME;\n      }).join(', ');\n    }\n\n    return stringSet.NO_TITLE;\n  };\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-profile\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-profile--inner\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-profile__avatar\"\n  }, /*#__PURE__*/React__default.createElement(ChannelAvatar, {\n    channel: channel,\n    userId: userId,\n    theme: theme,\n    width: 80,\n    height: 80\n  })), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-profile__title\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, getChannelName()), /*#__PURE__*/React__default.createElement(TextButton, {\n    disabled: disabled,\n    className: \"sendbird-channel-profile__edit\",\n    onClick: function onClick() {\n      if (disabled) {\n        return;\n      }\n\n      setShowModal(true);\n    },\n    notUnderline: true\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY\n  }, stringSet.CHANNEL_SETTING__PROFILE__EDIT)), showModal && /*#__PURE__*/React__default.createElement(EditDetails, {\n    onCancel: function onCancel() {\n      return setShowModal(false);\n    },\n    onSubmit: onChannelInfoChange,\n    channel: channel,\n    userId: userId,\n    theme: theme\n  })));\n};\n\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n    members: PropTypes.arrayOf(PropTypes.shape({\n      nickname: PropTypes.string\n    }))\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func\n};\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: function onChannelInfoChange() {}\n};\n\nfunction MembersModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel,\n      currentUser = _a.currentUser;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(null),\n      memberQuery = _c[0],\n      setMemberQuery = _c[1];\n\n  useEffect(function () {\n    var memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"All Members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      user: member,\n      key: member.userId,\n      currentUser: currentUser,\n      action: function action(_a) {\n        var parentRef = _a.parentRef,\n            actionRef = _a.actionRef;\n        return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, channel.myRole === 'operator' && /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.role !== 'operator') {\n                  channel.addOperators([member.userId], function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          role: 'operator'\n                        });\n                      }\n\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                } else {\n                  channel.removeOperators([member.userId], function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          role: ''\n                        });\n                      }\n\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'), // No muted members in broadcast channel\n            !channel.isBroadcast && /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.isMuted) {\n                  channel.unmuteUser(member, function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          isMuted: false\n                        });\n                      }\n\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                } else {\n                  channel.muteUser(member, function () {\n                    setMembers(members.map(function (m) {\n                      if (m.userId === member.userId) {\n                        return __assign(__assign({}, member), {\n                          isMuted: true\n                        });\n                      }\n\n                      return m;\n                    }));\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.isMuted ? 'Unmute' : 'Mute'), /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.banUser(member, -1, '', function () {\n                  setMembers(members.filter(function (_a) {\n                    var userId = _a.userId;\n                    return userId !== member.userId;\n                  }));\n                });\n              }\n            }, \"Ban\"));\n          }\n        }));\n      }\n    });\n  }))));\n}\n\nvar SHOWN_MEMBER_MAX = 10;\n\nvar UserListItem$1 = function UserListItem(_ref) {\n  var _ref$member = _ref.member,\n      member = _ref$member === void 0 ? {} : _ref$member,\n      _ref$currentUser = _ref.currentUser,\n      currentUser = _ref$currentUser === void 0 ? '' : _ref$currentUser;\n  var avatarRef = useRef(null);\n\n  var _useContext = useContext(UserProfileContext),\n      disableUserProfile = _useContext.disableUserProfile,\n      renderUserProfile = _useContext.renderUserProfile;\n\n  var _useContext2 = useContext(LocalizationContext),\n      stringSet = _useContext2.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__member\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__member-avatar\"\n  }, /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        },\n        ref: avatarRef,\n        src: member.profileUrl,\n        width: 24,\n        height: 24\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef // for catching location(x, y) of MenuItems\n        ,\n        parentContainRef: avatarRef // for toggling more options(menus & reactions)\n        ,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: member,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        user: member,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  })), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, member.nickname || stringSet.NO_NAME, currentUser === member.userId && stringSet.CHANNEL_SETTING__MEMBERS__YOU));\n};\n\nUserListItem$1.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired\n};\n\nvar MembersAccordion = function MembersAccordion(_ref2) {\n  var channel = _ref2.channel,\n      disabled = _ref2.disabled,\n      currentUser = _ref2.currentUser,\n      userQueryCreator = _ref2.userQueryCreator,\n      onInviteMembers = _ref2.onInviteMembers,\n      swapParams = _ref2.swapParams;\n  var members = channel.members || [];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMoreModal = _useState2[0],\n      setShowMoreModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showAddUserModal = _useState4[0],\n      setShowAddUserModal = _useState4[1];\n\n  var _useContext3 = useContext(LocalizationContext),\n      stringSet = _useContext3.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__list\"\n  }, members.slice(0, SHOWN_MEMBER_MAX).map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$1, {\n      member: member,\n      currentUser: currentUser,\n      key: member.userId\n    });\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-members-accordion__footer\"\n  }, members.length >= SHOWN_MEMBER_MAX && /*#__PURE__*/React__default.createElement(Button, {\n    className: \"sendbird-members-accordion__footer__all-members\",\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowMoreModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS), members.length >= SHOWN_MEMBER_MAX && showMoreModal && /*#__PURE__*/React__default.createElement(MembersModal, {\n    currentUser: currentUser,\n    hideModal: function hideModal() {\n      setShowMoreModal(false);\n    },\n    channel: channel\n  }), /*#__PURE__*/React__default.createElement(Button, {\n    className: \"sendbird-members-accordion__footer__invite-users\",\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    disabled: disabled,\n    onClick: function onClick() {\n      if (disabled) {\n        return;\n      }\n\n      setShowAddUserModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER), showAddUserModal && /*#__PURE__*/React__default.createElement(InviteMembers$1, {\n    swapParams: swapParams,\n    titleText: stringSet.MODAL__INVITE_MEMBER__TITLE,\n    submitText: stringSet.BUTTON__INVITE,\n    closeModal: function closeModal() {\n      return setShowAddUserModal(false);\n    },\n    idsToFilter: members.map(function (member) {\n      return member.userId;\n    }),\n    userQueryCreator: userQueryCreator,\n    onSubmit: onInviteMembers\n  })));\n};\n\nMembersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({}))\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMembers: PropTypes.func.isRequired\n};\nMembersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {}\n}; // might move to reusable/UI\n\nvar COMPONENT_NAME = 'sendbird-user-list-item--small';\n\nvar UserListItem = function UserListItem(_a) {\n  var user = _a.user,\n      className = _a.className,\n      currentUser = _a.currentUser,\n      action = _a.action;\n  var actionRef = useRef(null);\n  var parentRef = useRef(null);\n  var avatarRef = useRef(null);\n  var stringSet = useContext(LocalizationContext).stringSet;\n\n  var _b = useContext(UserProfileContext),\n      disableUserProfile = _b.disableUserProfile,\n      renderUserProfile = _b.renderUserProfile;\n\n  var injectingClassNames = Array.isArray(className) ? className : [className];\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: parentRef,\n    className: __spreadArray([COMPONENT_NAME], injectingClassNames, true).join(' ')\n  }, user.isMuted && /*#__PURE__*/React__default.createElement(MutedAvatarOverlay, null), /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        },\n        ref: avatarRef,\n        className: COMPONENT_NAME + \"__avatar\",\n        src: user.profileUrl,\n        width: 24,\n        height: 24\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef // for catching location(x, y) of MenuItems\n        ,\n        parentContainRef: avatarRef // for toggling more options(menus & reactions)\n        ,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: user,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        user: user,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_NAME + \"__title\",\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && \" (You)\"), // if there is now nickname, display userId\n  !user.nickname && /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_NAME + \"__subtitle\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, user.userId), user.role === 'operator' && /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_NAME + \"__operator\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, \"Operator\"), action && /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: actionRef,\n    className: COMPONENT_NAME + \"__action\"\n  }, action({\n    actionRef: actionRef,\n    parentRef: parentRef\n  })));\n};\n\nfunction OperatorsModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel,\n      currentUser = _a.currentUser;\n\n  var _b = useState([]),\n      operators = _b[0],\n      setOperators = _b[1];\n\n  var _c = useState(null),\n      operatorQuery = _c[0],\n      setOperatorQuery = _c[1];\n\n  useEffect(function () {\n    var operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next(function (operators, error) {\n      if (error) {\n        return;\n      }\n\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"All operators\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = operatorQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        operatorQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setOperators(__spreadArray(__spreadArray([], operators, true), o, true));\n        });\n      }\n    }\n  }, operators.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      currentUser: currentUser,\n      user: member,\n      key: member.userId,\n      action: function action(_a) {\n        var parentRef = _a.parentRef,\n            actionRef = _a.actionRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.removeOperators([member.userId], function (response, error) {\n                  if (error) {\n                    return;\n                  }\n\n                  setOperators(operators.filter(function (_a) {\n                    var userId = _a.userId;\n                    return userId !== member.userId;\n                  }));\n                });\n                closeDropdown();\n              }\n            }, \"Dismiss operator\"));\n          }\n        });\n      }\n    });\n  }))));\n}\n\nfunction AddOperatorsModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel,\n      _onSubmit = _a.onSubmit;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState({}),\n      selectedMembers = _c[0],\n      setSelectedMembers = _c[1];\n\n  var _d = useState(null),\n      memberQuery = _d[0],\n      setMemberQuery = _d[1];\n\n  var stringSet = useContext(LocalizationContext).stringSet;\n  useEffect(function () {\n    var memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, []);\n  var selectedCount = Object.keys(selectedMembers).filter(function (m) {\n    return selectedMembers[m];\n  }).length;\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    type: Type.PRIMARY,\n    submitText: \"Add\",\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: function onSubmit() {\n      var members = Object.keys(selectedMembers).filter(function (m) {\n        return selectedMembers[m];\n      });\n\n      _onSubmit(members);\n    },\n    titleText: \"Select members\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3,\n    type: LabelTypography.CAPTION_1\n  }, selectedCount + \" \" + stringSet.MODAL__INVITE_MEMBER__SELECTEC), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      checkBox: true,\n      checked: selectedMembers[member.userId],\n      onChange: function onChange(event) {\n        var _a;\n\n        var modifiedSelectedMembers = __assign(__assign({}, selectedMembers), (_a = {}, _a[event.target.id] = event.target.checked, _a));\n\n        if (!event.target.checked) {\n          delete modifiedSelectedMembers[event.target.id];\n        }\n\n        setSelectedMembers(modifiedSelectedMembers);\n      },\n      user: member,\n      key: member.userId\n    });\n  }))));\n}\n\nvar OperatorList = function OperatorList(_a) {\n  var sdk = _a.sdk,\n      channel = _a.channel;\n\n  var _b = useState([]),\n      operators = _b[0],\n      setOperators = _b[1];\n\n  var _c = useState(false),\n      showMore = _c[0],\n      setShowMore = _c[1];\n\n  var _d = useState(false),\n      showAdd = _d[0],\n      setShowAdd = _d[1];\n\n  var _e = useState(false),\n      hasNext = _e[0],\n      setHasNext = _e[1];\n\n  var stringSet = useContext(LocalizationContext).stringSet;\n  useEffect(function () {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    var operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next(function (operators, error) {\n      if (error) {\n        return;\n      }\n\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  var refershList = useCallback(function () {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    var operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next(function (operators, error) {\n      if (error) {\n        return;\n      }\n\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, operators.map(function (operator) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: operator.userId,\n      user: operator,\n      currentUser: sdk.currentUser.userId,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.removeOperators([operator.userId], function (response, error) {\n                  if (error) {\n                    return;\n                  }\n\n                  setOperators(operators.filter(function (_a) {\n                    var userId = _a.userId;\n                    return userId !== operator.userId;\n                  }));\n                });\n                closeDropdown();\n              }\n            }, \"Dismiss operator\"));\n          }\n        });\n      }\n    });\n  }), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowMore(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL), /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowAdd(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD)), showMore && /*#__PURE__*/React__default.createElement(OperatorsModal, {\n    currentUser: sdk.currentUser.userId,\n    hideModal: function hideModal() {\n      setShowMore(false);\n      refershList();\n    },\n    channel: channel\n  }), showAdd && /*#__PURE__*/React__default.createElement(AddOperatorsModal, {\n    hideModal: function hideModal() {\n      return setShowAdd(false);\n    },\n    channel: channel,\n    onSubmit: function onSubmit(members) {\n      setShowAdd(false);\n      channel.addOperators(members, function () {\n        refershList();\n      });\n    }\n  }));\n};\n\nvar mapStoreToProps$3 = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\n\nvar OperatorList$1 = withSendbirdContext(OperatorList, mapStoreToProps$3);\n\nfunction InviteMembers(_a) {\n  var hideModal = _a.hideModal,\n      userQueryCreator = _a.userQueryCreator,\n      _onSubmit = _a.onSubmit;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState({}),\n      selectedMembers = _c[0],\n      setSelectedMembers = _c[1];\n\n  var _d = useState(null),\n      userQuery = _d[0],\n      setUserQuery = _d[1];\n\n  useEffect(function () {\n    var userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    disabled: Object.keys(selectedMembers).length === 0,\n    submitText: \"Invite\",\n    type: Type.PRIMARY,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: function onSubmit() {\n      var members = Object.keys(selectedMembers).filter(function (m) {\n        return selectedMembers[m];\n      });\n\n      _onSubmit(members);\n    },\n    titleText: \"Select members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = userQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        userQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      checkBox: true,\n      checked: selectedMembers[member.userId],\n      onChange: function onChange(event) {\n        var _a;\n\n        var modifiedSelectedMembers = __assign(__assign({}, selectedMembers), (_a = {}, _a[event.target.id] = event.target.checked, _a));\n\n        if (!event.target.checked) {\n          delete modifiedSelectedMembers[event.target.id];\n        }\n\n        setSelectedMembers(modifiedSelectedMembers);\n      },\n      user: member,\n      key: member.userId\n    });\n  }))));\n}\n\nvar MemberList = function MemberList(_a) {\n  var sdk = _a.sdk,\n      channel = _a.channel,\n      userQueryCreator = _a.userQueryCreator,\n      userId = _a.userId;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(false),\n      hasNext = _c[0],\n      setHasNext = _c[1];\n\n  var _d = useState(false),\n      showAllMembers = _d[0],\n      setShowAllMembers = _d[1];\n\n  var _e = useState(false),\n      showInviteMembers = _e[0],\n      setShowInviteMembers = _e[1];\n\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refershList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: member.userId,\n      user: member,\n      currentUser: sdk.currentUser.userId,\n      action: userId !== member.userId ? function (_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.role !== 'operator') {\n                  channel.addOperators([member.userId], function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                } else {\n                  channel.removeOperators([member.userId], function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'), // No muted members in broadcast channel\n            !channel.isBroadcast && /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                if (member.isMuted) {\n                  channel.unmuteUser(member, function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                } else {\n                  channel.muteUser(member, function () {\n                    refershList();\n                    closeDropdown();\n                  });\n                }\n              }\n            }, member.isMuted ? 'Unmute' : 'Mute'), /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.banUser(member, -1, '', function () {\n                  refershList();\n                  closeDropdown();\n                });\n              }\n            }, \"Ban\"));\n          }\n        });\n      } : null\n    });\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, hasNext && /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowAllMembers(true);\n    }\n  }, \"All members\"), /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      return setShowInviteMembers(true);\n    }\n  }, \"Invite members\")), showAllMembers && /*#__PURE__*/React__default.createElement(MembersModal, {\n    currentUser: sdk.currentUser.userId,\n    channel: channel,\n    hideModal: function hideModal() {\n      setShowAllMembers(false);\n      refershList();\n    }\n  }), showInviteMembers && /*#__PURE__*/React__default.createElement(InviteMembers, {\n    userQueryCreator: userQueryCreator,\n    onSubmit: function onSubmit(selectedMembers) {\n      channel.inviteWithUserIds(selectedMembers, function () {\n        setShowInviteMembers(false);\n        refershList();\n      });\n    },\n    channel: channel,\n    hideModal: function hideModal() {\n      return setShowInviteMembers(false);\n    }\n  }));\n};\n\nvar mapStoreToProps$2 = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\n\nvar MemberList$1 = withSendbirdContext(MemberList, mapStoreToProps$2);\n\nfunction BannedMembersModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(null),\n      memberQuery = _c[0],\n      setMemberQuery = _c[1];\n\n  useEffect(function () {\n    var bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function (users, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"Muted members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      user: member,\n      key: member.userId,\n      action: function action(_a) {\n        var parentRef = _a.parentRef,\n            actionRef = _a.actionRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unbanUser(member, function () {\n                  closeDropdown();\n                  setMembers(members.filter(function (m) {\n                    return m.userId !== member.userId;\n                  }));\n                });\n              }\n            }, \"Unban\"));\n          }\n        });\n      }\n    });\n  }))));\n}\n\nvar BannedMemberList = function BannedMemberList(_a) {\n  var channel = _a.channel;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(false),\n      hasNext = _c[0],\n      setHasNext = _c[1];\n\n  var _d = useState(false),\n      showModal = _d[0],\n      setShowModal = _d[1];\n\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function (users, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function (users, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: member.userId,\n      user: member,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unbanUser(member, function () {\n                  closeDropdown();\n                  refreshList();\n                });\n              }\n            }, \"Unban\"));\n          }\n        });\n      }\n    });\n  }), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, \"No banned members yet\"), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowModal(true);\n    }\n  }, \"All banned members\")), showModal && /*#__PURE__*/React__default.createElement(BannedMembersModal, {\n    channel: channel,\n    hideModal: function hideModal() {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\n\nvar mapStoreToProps$1 = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\n\nvar BannedMemberList$1 = withSendbirdContext(BannedMemberList, mapStoreToProps$1);\n\nfunction MutedMembersModal(_a) {\n  var hideModal = _a.hideModal,\n      channel = _a.channel,\n      currentUser = _a.currentUser;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(null),\n      memberQuery = _c[0],\n      setMemberQuery = _c[1];\n\n  useEffect(function () {\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(Modal, {\n    hideFooter: true,\n    onCancel: function onCancel() {\n      return hideModal();\n    },\n    onSubmit: noop,\n    titleText: \"Muted members\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: function onScroll(e) {\n      var hasNext = memberQuery.hasNext;\n      var target = e.target;\n      var fetchMore = target.clientHeight + target.scrollTop === target.scrollHeight;\n\n      if (hasNext && fetchMore) {\n        memberQuery.next(function (o, error) {\n          if (error) {\n            return;\n          }\n\n          setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n        });\n      }\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem$2, {\n      currentUser: currentUser,\n      user: member,\n      key: member.userId,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n              ,\n              closeDropdown: closeDropdown,\n              openLeft: true\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unmuteUser(member, function () {\n                  closeDropdown();\n                  setMembers(members.filter(function (m) {\n                    return m.userId !== member.userId;\n                  }));\n                });\n              }\n            }, \"Unmute\"));\n          }\n        });\n      }\n    });\n  }))));\n}\n\nvar MutedMemberList = function MutedMemberList(_a) {\n  var sdk = _a.sdk,\n      channel = _a.channel;\n\n  var _b = useState([]),\n      members = _b[0],\n      setMembers = _b[1];\n\n  var _c = useState(false),\n      hasNext = _c[0],\n      setHasNext = _c[1];\n\n  var _d = useState(false),\n      showModal = _d[0],\n      setShowModal = _d[1];\n\n  useEffect(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    var memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next(function (members, error) {\n      if (error) {\n        return;\n      }\n\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return /*#__PURE__*/React__default.createElement(UserListItem, {\n      key: member.userId,\n      user: member,\n      currentUser: sdk.currentUser.userId,\n      action: function action(_a) {\n        var actionRef = _a.actionRef,\n            parentRef = _a.parentRef;\n        return /*#__PURE__*/React__default.createElement(ContextMenu, {\n          menuTrigger: function menuTrigger(toggleDropdown) {\n            return /*#__PURE__*/React__default.createElement(IconButton, {\n              className: \"sendbird-user-message__more__menu\",\n              width: \"32px\",\n              height: \"32px\",\n              onClick: toggleDropdown\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              width: \"24px\",\n              height: \"24px\",\n              type: IconTypes.MORE,\n              fillColor: IconColors.CONTENT_INVERSE\n            }));\n          },\n          menuItems: function menuItems(closeDropdown) {\n            return /*#__PURE__*/React__default.createElement(MenuItems, {\n              closeDropdown: closeDropdown,\n              openLeft: true,\n              parentContainRef: parentRef,\n              parentRef: actionRef // for catching location(x, y) of MenuItems\n\n            }, /*#__PURE__*/React__default.createElement(MenuItem, {\n              onClick: function onClick() {\n                channel.unmuteUser(member, function () {\n                  refreshList();\n                  closeDropdown();\n                });\n              }\n            }, \"Unmute\"));\n          }\n        });\n      }\n    });\n  }), members && members.length === 0 && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, \"No muted members yet\"), hasNext && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      setShowModal(true);\n    }\n  }, \"All muted members\")), showModal && /*#__PURE__*/React__default.createElement(MutedMembersModal, {\n    currentUser: sdk.currentUser.userId,\n    channel: channel,\n    hideModal: function hideModal() {\n      setShowModal(false);\n      refreshList();\n    }\n  }));\n};\n\nvar mapStoreToProps = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store)\n  };\n};\n\nvar MutedMemberList$1 = withSendbirdContext(MutedMemberList, mapStoreToProps);\n\nvar kFormatter$1 = function kFormatter(num) {\n  return Math.abs(num) > 999 ? (Math.abs(num) / 1000).toFixed(1) + \"K\" : num;\n};\n\nfunction AdminPannel(_a) {\n  var userQueryCreator = _a.userQueryCreator,\n      channel = _a.channel,\n      userId = _a.userId;\n\n  var _b = useState(false),\n      frozen = _b[0],\n      setFrozen = _b[1]; // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n\n\n  useEffect(function () {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(AccordionGroup, {\n    className: \"sendbird-channel-settings__operator\"\n  }, /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__operators-list\",\n    id: \"operators\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.OPERATOR,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(OperatorList$1, {\n        channel: channel\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__members-list\",\n    id: \"members\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.MEMBERS,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__MEMBERS__TITLE), /*#__PURE__*/React__default.createElement(Badge, {\n        count: kFormatter$1(channel.memberCount)\n      }));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MemberList$1, {\n        userQueryCreator: userQueryCreator,\n        channel: channel,\n        userId: userId\n      }));\n    }\n  }), // No muted members in broadcast channel\n  !channel.isBroadcast && /*#__PURE__*/React__default.createElement(Accordion, {\n    id: \"mutedMembers\",\n    className: \"sendbird-channel-settings__muted-members-list\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.MUTE,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(MutedMemberList$1, {\n        channel: channel\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Accordion, {\n    className: \"sendbird-channel-settings__banned-members-list\",\n    id: \"bannedMembers\",\n    renderTitle: function renderTitle() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.BAN,\n        fillColor: IconColors.PRIMARY,\n        width: 24,\n        height: 24,\n        className: \"sendbird-channel-settings__accordion-icon\"\n      }), /*#__PURE__*/React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE));\n    },\n    renderContent: function renderContent() {\n      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(BannedMemberList$1, {\n        channel: channel\n      }));\n    }\n  }), // cannot frozen broadcast channel\n  !channel.isBroadcast && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__freeze\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.FREEZE,\n    fillColor: IconColors.PRIMARY,\n    width: 24,\n    height: 24,\n    className: \"sendbird-channel-settings__accordion-icon\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__FREEZE_CHANNEL), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__frozen-icon\"\n  }, frozen ? /*#__PURE__*/React__default.createElement(Icon, {\n    onClick: function onClick() {\n      channel.unfreeze(function () {\n        setFrozen(false);\n      });\n    },\n    type: IconTypes.TOGGLE_ON,\n    fillColor: IconColors.PRIMARY,\n    width: 44,\n    height: 24\n  }) : /*#__PURE__*/React__default.createElement(Icon, {\n    onClick: function onClick() {\n      channel.freeze(function () {\n        setFrozen(true);\n      });\n    },\n    type: IconTypes.TOGGLE_OFF,\n    fillColor: IconColors.PRIMARY,\n    width: 44,\n    height: 24\n  }))));\n}\n\nvar COMPONENT_CLASS_NAME = 'sendbird-channel-settings';\n\nvar kFormatter = function kFormatter(num) {\n  return Math.abs(num) > 999 ? \"\".concat((Math.abs(num) / 1000).toFixed(1), \"K\") : num;\n};\n\nfunction ChannelSettings(props) {\n  var className = props.className,\n      onCloseClick = props.onCloseClick,\n      channelUrl = props.channelUrl,\n      disableUserProfile = props.disableUserProfile,\n      renderUserProfile = props.renderUserProfile,\n      _onChannelModified = props.onChannelModified,\n      renderChannelProfile = props.renderChannelProfile,\n      onBeforeUpdateChannel = props.onBeforeUpdateChannel;\n  var sdkStore = props.stores.sdkStore,\n      _props$config = props.config,\n      userListQuery = _props$config.userListQuery,\n      theme = _props$config.theme,\n      userId = _props$config.userId,\n      logger = _props$config.logger,\n      isOnline = _props$config.isOnline,\n      _props$queries = props.queries,\n      queries = _props$queries === void 0 ? {} : _props$queries;\n  var _props$config2 = props.config,\n      config = _props$config2 === void 0 ? {} : _props$config2;\n  var userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  var userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  var userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var sdk = sdkStore.sdk,\n      initialized = sdkStore.initialized; // hack to kepp track of channel updates by triggering useEffect\n\n  var _useState = useState(uuidv4()),\n      _useState2 = _slicedToArray(_useState, 2),\n      channelUpdateId = _useState2[0],\n      setChannelUpdateId = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      channel = _useState4[0],\n      setChannel = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      invalidChannel = _useState6[0],\n      setInvalidChannel = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showAccordion = _useState8[0],\n      setShowAccordion = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showLeaveChannelModal = _useState10[0],\n      setShowLeaveChannelModal = _useState10[1];\n\n  var componentClassNames = (Array.isArray(className) ? [COMPONENT_CLASS_NAME].concat(_toConsumableArray(className)) : [COMPONENT_CLASS_NAME, className]).join(' ');\n  useEffect(function () {\n    logger.info('ChannelSettings: Setting up');\n\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl, function (groupChannel) {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  if (!channel || invalidChannel) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: componentClassNames\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-channel-settings__header\"\n    }, /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.H_2,\n      color: LabelColors.ONBACKGROUND_1\n    }, stringSet.CHANNEL_SETTING__HEADER__TITLE), /*#__PURE__*/React__default.createElement(Icon, {\n      className: \"sendbird-channel-settings__close-icon\",\n      type: IconTypes.CLOSE,\n      height: \"24px\",\n      width: \"24px\",\n      onClick: function onClick() {\n        logger.info('ChannelSettings: Click close');\n        onCloseClick();\n      }\n    })), /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.WRONG\n    })));\n  }\n\n  return /*#__PURE__*/React__default.createElement(UserProfileProvider, {\n    className: componentClassNames,\n    disableUserProfile: userDefinedDisableUserProfile,\n    renderUserProfile: userDefinedRenderProfile\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__header\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__HEADER__TITLE), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__header-icon\"\n  }, /*#__PURE__*/React__default.createElement(IconButton, {\n    width: \"32px\",\n    height: \"32px\",\n    onClick: function onClick() {\n      logger.info('ChannelSettings: Click close');\n      onCloseClick();\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-channel-settings__close-icon\",\n    type: IconTypes.CLOSE,\n    height: \"22px\",\n    width: \"22px\"\n  })))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__scroll-area\"\n  }, renderChannelProfile ? renderChannelProfile({\n    channel: channel\n  }) : /*#__PURE__*/React__default.createElement(ChannelProfile, {\n    disabled: !isOnline,\n    channel: channel,\n    userId: userId,\n    theme: theme,\n    onChannelInfoChange: function onChannelInfoChange(currentImg, currentTitle) {\n      logger.info('ChannelSettings: Channel information being updated');\n      var swapParams = sdk.getErrorFirstCallback();\n\n      if (onBeforeUpdateChannel) {\n        var params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data); // swapParams\n\n        channel.updateChannel(params, function (response, error) {\n          var groupChannel = response;\n\n          if (swapParams) {\n            groupChannel = error;\n          }\n\n          _onChannelModified(groupChannel);\n\n          setChannelUpdateId(uuidv4());\n        });\n        return;\n      }\n\n      channel.updateChannel(currentTitle, currentImg, channel.data, function (response, error) {\n        var groupChannel = response;\n\n        if (swapParams) {\n          groupChannel = error;\n        }\n\n        logger.info('ChannelSettings: Channel information updated', groupChannel);\n\n        _onChannelModified(groupChannel);\n\n        setChannelUpdateId(uuidv4());\n      });\n    }\n  }), channel.myRole === 'operator' ? /*#__PURE__*/React__default.createElement(AdminPannel, {\n    channel: channel,\n    userId: userId,\n    onChannelModified: function onChannelModified(groupChannel) {\n      // setChannelUpdateId(uuidv4());\n      _onChannelModified(groupChannel);\n    },\n    userQueryCreator: function userQueryCreator() {\n      return userListQuery && typeof userListQuery === 'function' ? userListQuery() : createDefaultUserListQuery({\n        sdk: sdk,\n        userFilledApplicationUserListQuery: userFilledApplicationUserListQuery\n      });\n    }\n  }) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-channel-settings__panel-item', 'sendbird-channel-settings__members'].join(' '),\n    role: \"switch\",\n    \"aria-checked\": showAccordion,\n    onKeyDown: function onKeyDown() {\n      return setShowAccordion(!showAccordion);\n    },\n    onClick: function onClick() {\n      return setShowAccordion(!showAccordion);\n    },\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-channel-settings__panel-icon-left\",\n    type: IconTypes.MEMBERS,\n    fillColor: IconColors.PRIMARY,\n    height: \"24px\",\n    width: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__MEMBERS__TITLE, /*#__PURE__*/React__default.createElement(Badge, {\n    count: kFormatter(channel.memberCount)\n  })), /*#__PURE__*/React__default.createElement(Icon, {\n    className: ['sendbird-channel-settings__panel-icon-right', 'sendbird-channel-settings__panel-icon--chevron', showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''].join(' '),\n    type: IconTypes.CHEVRON_RIGHT,\n    height: \"24px\",\n    width: \"24px\"\n  })), showAccordion && /*#__PURE__*/React__default.createElement(MembersAccordion, {\n    currentUser: userId,\n    disabled: !isOnline // eslint-disable-next-line\n    ,\n    userQueryCreator: function userQueryCreator() {\n      return userListQuery && typeof userListQuery === 'function' ? userListQuery() : createDefaultUserListQuery({\n        sdk: sdk,\n        userFilledApplicationUserListQuery: userFilledApplicationUserListQuery\n      });\n    },\n    swapParams: sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback(),\n    channel: channel,\n    members: channel.members,\n    onInviteMembers: function onInviteMembers(selectedMembers) {\n      logger.info('ChannelSettings: Inviting new users');\n      channel.inviteWithUserIds(selectedMembers).then(function (res) {\n        _onChannelModified(res);\n\n        setChannelUpdateId(uuidv4());\n        logger.info('ChannelSettings: Inviting new users success!', res);\n      });\n    }\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-channel-settings__panel-item', 'sendbird-channel-settings__leave-channel', !isOnline ? 'sendbird-channel-settings__panel-item__disabled' : ''].join(' '),\n    role: \"button\",\n    disabled: true,\n    onKeyDown: function onKeyDown() {\n      if (!isOnline) {\n        return;\n      }\n\n      setShowLeaveChannelModal(true);\n    },\n    onClick: function onClick() {\n      if (!isOnline) {\n        return;\n      }\n\n      setShowLeaveChannelModal(true);\n    },\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: ['sendbird-channel-settings__panel-icon-left', 'sendbird-channel-settings__panel-icon__leave'].join(' '),\n    type: IconTypes.LEAVE,\n    fillColor: IconColors.ERROR,\n    height: \"24px\",\n    width: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE)), showLeaveChannelModal && /*#__PURE__*/React__default.createElement(LeaveChannel, {\n    onCloseModal: function onCloseModal() {\n      return setShowLeaveChannelModal(false);\n    },\n    onLeaveChannel: function onLeaveChannel() {\n      logger.info('ChannelSettings: Leaving channel', channel);\n      channel.leave().then(function () {\n        logger.info('ChannelSettings: Leaving channel successful!', channel);\n        onCloseClick();\n      });\n    }\n  })));\n}\n\nChannelSettings.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string)\n    })\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([PropTypes.shape({\n          getChannel: PropTypes.func\n        }), PropTypes.func]),\n        createApplicationUserListQuery: PropTypes.any\n      }),\n      initialized: PropTypes.bool\n    })\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func\n    })\n  }).isRequired\n};\nChannelSettings.defaultProps = {\n  className: '',\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: function onCloseClick() {},\n  onChannelModified: function onChannelModified() {}\n};\nvar ChannelSettings$1 = withSendbirdContext(ChannelSettings);\nexport { ChannelSettings$1 as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAYA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;EAC7B,IACEC,SADF,GAMID,KANJ,CACEC,QADF;EAAA,IAEEC,QAFF,GAMIF,KANJ,CAEEE,QAFF;EAAA,IAGEC,OAHF,GAMIH,KANJ,CAGEG,OAHF;EAAA,IAIEC,MAJF,GAMIJ,KANJ,CAIEI,MAJF;EAAA,IAKEC,KALF,GAMIL,KANJ,CAKEK,KALF;EAOA,IAAMC,QAAQ,GAAGC,MAAM,CAAC,IAAD,CAAvB;EACA,IAAMC,OAAO,GAAGD,MAAM,CAAC,IAAD,CAAtB;EACA,IAAME,cAAc,GAAGF,MAAM,CAAC,IAAD,CAA7B;;EACA,gBAAoCG,QAAQ,CAAC,IAAD,CAA5C;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAA8BF,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOG,OAAP;EAAA,IAAgBC,UAAhB;;EACA,kBAAsBC,UAAU,CAACC,mBAAD,CAAhC;EAAA,IAAQC,SAAR,eAAQA,SAAR;;EACA,IAAMC,KAAK,GAAGf,OAAO,CAACgB,IAAtB;EACA,oBACEC,6BAACC,KAADD;IACEE,SAAS,EAAEL,SAAS,CAACM,iCADvB;IAEEC,UAAU,EAAEP,SAAS,CAACQ,YAFxB;IAGEvB,QAAQ,EAAEA,QAHZ;IAIED,QAAQ,EAAE,oBAAM;MACd,IAAIiB,KAAK,KAAK,EAAVA,IAAgB,CAACZ,QAAQ,CAACoB,OAATpB,CAAiBqB,KAAtC,EAA6C;QAC3C,IAAInB,OAAO,CAACkB,OAARlB,CAAgBoB,cAApB,EAAoC;UAAE;UACpCpB,OAAO,CAACkB,OAARlB,CAAgBoB,cAAhBpB;QACD;;QACD;MACD;;MACDP,SAAQ,CAACY,OAAD,EAAUP,QAAQ,CAACoB,OAATpB,CAAiBqB,KAA3B,CAAR1B;;MACAC,QAAQ;IAZZ;IAcE2B,IAAI,EAAEC,IAAU,CAACC;EAdnB,gBAgBEX;IACEY,SAAS,EAAC,sBADZZ;IAEEa,GAAG,EAAEzB,OAFPY;IAGEnB,QAAQ,EAAE,kBAACiC,CAAD,EAAO;MAAEA,CAAC,CAACC,cAAFD;IAAqB;EAH1Cd,gBAKEA;IAAKY,SAAS,EAAC;EAAfZ,gBACEA,6BAACgB,UAADhB,QACGH,SAAS,CAACoB,yCADbjB,CADFA,eAIEA;IAAKY,SAAS,EAAC;EAAfZ,GAEIT,UAAU,gBAENS,6BAACkB,MAADlB;IACEmB,MAAM,EAAC,MADT;IAEEC,KAAK,EAAC,MAFR;IAGEC,GAAG,EAAE9B;EAHP,EAFM,gBAQNS,6BAACsB,aAADtB;IACEmB,MAAM,EAAE,EADV;IAEEC,KAAK,EAAE,EAFT;IAGErC,OAAO,EAAEA,OAHX;IAIEC,MAAM,EAAEA,MAJV;IAKEC,KAAK,EAAEA;EALT,EAVRe,CAJFA,eAwBEA;IACEa,GAAG,EAAExB,cADPW;IAEES,IAAI,EAAC,MAFPT;IAGEuB,MAAM,EAAC,kCAHTvB;IAIEwB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAX,CAJTzB;IAKE0B,QAAQ,EAAE,kBAACZ,CAAD,EAAO;MACftB,aAAa,CAACmC,GAAG,CAACC,eAAJD,CAAoBb,CAAC,CAACe,MAAFf,CAASgB,KAAThB,CAAe,CAAfA,CAApBa,CAAD,CAAbnC;MACAE,UAAU,CAACoB,CAAC,CAACe,MAAFf,CAASgB,KAAThB,CAAe,CAAfA,CAAD,CAAVpB;MACAL,cAAc,CAACiB,OAAfjB,CAAuBkB,KAAvBlB,GAA+B,EAA/BA;IACD;EATHW,EAxBFA,eAmCEA,6BAAC+B,UAAD/B;IACEY,SAAS,EAAC,qCADZ;IAEEoB,OAAO,EAAE;MAAA,OAAM3C,cAAc,CAACiB,OAAfjB,CAAuB4C,KAAvB5C,EAAN;IAFX;IAGE6C,YAAY;EAHd,gBAKElC,6BAACmC,KAADnC;IAAOS,IAAI,EAAE2B,eAAe,CAACC,QAA7B;IAAuCC,KAAK,EAAEC,WAAW,CAAC5B;EAA1D,GACGd,SAAS,CAAC2C,kCADbxC,CALFA,CAnCFA,CALFA,eAkDEA;IAAKY,SAAS,EAAC;EAAfZ,gBACEA,6BAACgB,UAADhB,QACGH,SAAS,CAAC4C,wCADbzC,CADFA,eAIEA,6BAAC0C,KAAD1C;IACE2C,QAAQ,EAAE7C,KAAK,KAAK,EADtB;IAEEC,IAAI,EAAC,4BAFP;IAGEc,GAAG,EAAE3B,QAHP;IAIEqB,KAAK,EAAET,KAJT;IAKE8C,WAAW,EAAE/C,SAAS,CAACgD;EALzB,EAJF7C,CAlDFA,CAhBFA,CADF;AAfF;;AAmGArB,WAAW,CAACmE,SAAZnE,GAAwB;EACtBE,QAAQ,EAAEkE,SAAS,CAACC,IAAVD,CAAeE,UADH;EAEtBnE,QAAQ,EAAEiE,SAAS,CAACC,IAAVD,CAAeE,UAFH;EAGtBlE,OAAO,EAAEgE,SAAS,CAACG,KAAVH,CAAgB;IACvBhD,IAAI,EAAEgD,SAAS,CAACI;EADO,CAAhBJ,EAENE,UALmB;EAMtBjE,MAAM,EAAE+D,SAAS,CAACI,MAAVJ,CAAiBE,UANH;EAOtBhE,KAAK,EAAE8D,SAAS,CAACI,MAAVJ,CAAiBE;AAPF,CAAxBtE;;ACpGA,IAAMyE,cAAc,GAAG,SAAjBA,cAAiB,CAACxE,KAAD,EAAW;EAChC,IACEyE,QADF,GAMIzE,KANJ,CACEyE,QADF;EAAA,IAEEtE,OAFF,GAMIH,KANJ,CAEEG,OAFF;EAAA,IAGEC,MAHF,GAMIJ,KANJ,CAGEI,MAHF;EAAA,IAIEC,KAJF,GAMIL,KANJ,CAIEK,KAJF;EAAA,IAKEqE,mBALF,GAMI1E,KANJ,CAKE0E,mBALF;;EAOA,gBAAkChE,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOiE,SAAP;EAAA,IAAkBC,YAAlB;;EACA,kBAAsB7D,UAAU,CAACC,mBAAD,CAAhC;EAAA,IAAQC,SAAR,eAAQA,SAAR;;EAEA,IAAM4D,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3B,IAAI1E,OAAO,IAAIA,OAAO,CAACgB,IAAnBhB,IAA2BA,OAAO,CAACgB,IAARhB,KAAiB,eAAhD,EAAiE;MAC/D,OAAOA,OAAO,CAACgB,IAAf;IACD;;IACD,IAAIhB,OAAO,KAAKA,OAAO,CAACgB,IAARhB,KAAiB,eAAjBA,IAAoC,CAACA,OAAO,CAACgB,IAAlD,CAAX,EAAoE;MAClE,OAAOhB,OAAO,CAAC2E,OAAR3E,CAAgB4E,GAAhB5E,CAAoB,UAAC6E,MAAD;QAAA,OAAYA,MAAM,CAACC,QAAPD,IAAmB/D,SAAS,CAACiE,OAAzC;MAApB,GAAsEC,IAAtEhF,CAA2E,IAA3EA,CAAP;IACD;;IACD,OAAOc,SAAS,CAACmE,QAAjB;EAPF;;EAUA,oBACEhE;IAAKY,SAAS,EAAC;EAAfZ,gBACEA;IAAKY,SAAS,EAAC;EAAfZ,gBACEA;IAAKY,SAAS,EAAC;EAAfZ,gBACEA,6BAACsB,aAADtB;IACEjB,OAAO,EAAEA,OADX;IAEEC,MAAM,EAAEA,MAFV;IAGEC,KAAK,EAAEA,KAHT;IAIEmC,KAAK,EAAE,EAJT;IAKED,MAAM,EAAE;EALV,EADFnB,CADFA,eAUEA,6BAACmC,KAADnC;IACEY,SAAS,EAAC,iCADZ;IAEEH,IAAI,EAAE2B,eAAe,CAAC6B,UAFxB;IAGE3B,KAAK,EAAEC,WAAW,CAAC2B;EAHrB,GAKGT,cAAc,EALjBzD,CAVFA,eAiBEA,6BAAC+B,UAAD/B;IACEqD,QAAQ,EAAEA,QADZ;IAEEzC,SAAS,EAAC,gCAFZ;IAGEoB,OAAO,EAAE,mBAAM;MACb,IAAIqB,QAAJ,EAAc;QAAE;MAAS;;MACzBG,YAAY,CAAC,IAAD,CAAZA;IALJ;IAOEtB,YAAY;EAPd,gBASElC,6BAACmC,KAADnC;IACES,IAAI,EAAE2B,eAAe,CAACC,QADxB;IAEEC,KAAK,EAAEe,QAAQ,GAAGd,WAAW,CAAC4B,cAAf,GAAgC5B,WAAW,CAAC5B;EAF7D,GAIGd,SAAS,CAACuE,8BAJbpE,CATFA,CAjBFA,EAkCIuD,SAAS,iBACPvD,6BAACqE,WAADrE;IACElB,QAAQ,EAAE;MAAA,OAAM0E,YAAY,CAAC,KAAD,CAAlB;IADZ;IAEE3E,QAAQ,EAAEyE,mBAFZ;IAGEvE,OAAO,EAAEA,OAHX;IAIEC,MAAM,EAAEA,MAJV;IAKEC,KAAK,EAAEA;EALT,EAnCNe,CADFA,CADF;AArBF;;AAwEAoD,cAAc,CAACN,SAAfM,GAA2B;EACzBrE,OAAO,EAAEgE,SAAS,CAACG,KAAVH,CAAgB;IACvBhD,IAAI,EAAEgD,SAAS,CAACI,MADO;IAEvBO,OAAO,EAAEX,SAAS,CAACuB,OAAVvB,CACPA,SAAS,CAACG,KAAVH,CAAgB;MACdc,QAAQ,EAAEd,SAAS,CAACI;IADN,CAAhBJ,CADOA;EAFc,CAAhBA,EAONE,UARsB;EASzBjE,MAAM,EAAE+D,SAAS,CAACI,MAAVJ,CAAiBE,UATA;EAUzBhE,KAAK,EAAE8D,SAAS,CAACI,MAVQ;EAWzBE,QAAQ,EAAEN,SAAS,CAACwB,IAXK;EAYzBjB,mBAAmB,EAAEP,SAAS,CAACC;AAZN,CAA3BI;AAeAA,cAAc,CAACoB,YAAfpB,GAA8B;EAC5BnE,KAAK,EAAE,OADqB;EAE5BoE,QAAQ,EAAE,KAFkB;EAG5BC,mBAAmB,EAAE,+BAAM;AAHC,CAA9BF;;SC7EwBqB,aAAaC;MACnCC,SAAS;MACT5F,OAAO;MACP6F,WAAW;;EAEL,SAAwBtF,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAACoE,OAAO,QAAR;EAAA,IAAUmB,UAAU,QAApB;;EACA,SAAgCvF,QAAQ,CAAC,IAAD,CAAxC;EAAA,IAACwF,WAAW,QAAZ;EAAA,IAAcC,cAAc,QAA5B;;EAENC,SAAS,CAAC;IACR,IAAMC,eAAe,GAAGlG,OAAO,CAACmG,qBAARnG,EAAxB;IACAkG,eAAe,CAACE,KAAhBF,GAAwB,EAAxBA;IACAA,eAAe,CAACG,IAAhBH,CAAqB,UAACvB,OAAD,EAAU2B,KAAV;MACnB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACnB,OAAD,CAAVmB;IAJF;IAMAE,cAAc,CAACE,eAAD,CAAdF;EATO,GAUN,EAVM,CAATC;EAWA,oBACEhF,uDACEA,6BAACC,KAADD;IACEsF,UAAU,MADZ;IAEExG,QAAQ,EAAE;MAAM,gBAAS,EAAT;IAFlB;IAGED,QAAQ,EAAE0G,IAHZ;IAIErF,SAAS,EAAC;EAJZ,gBAMEF;IACEY,SAAS,EAAC,qCADZZ;IAEEwF,QAAQ,EAAE,kBAAC1E,CAAD;MACA,WAAO,GAAKgE,WAAW,QAAvB;MACR,IAAMjD,MAAM,GAAGf,CAAC,CAACe,MAAjB;MACA,IAAM4D,SAAS,GACb5D,MAAM,CAAC6D,YAAP7D,GAAsBA,MAAM,CAAC8D,SAA7B9D,KAA2CA,MAAM,CAAC+D,YADpD;;MAIA,IAAIC,OAAO,IAAIJ,SAAf,EAA0B;QACxBX,WAAW,CAACM,IAAZN,CAAiB,UAACgB,CAAD,EAAIT,KAAJ;UACf,IAAIA,KAAJ,EAAW;YACT;UACD;;UACDR,UAAU,iCACLnB,OADK,EACLA,IADK,GAELoC,CAFK,EAELA,IAFK,EAAVjB;QAJF;MASD;IACF;EApBH7E,GAsBI0D,OAAO,CAACC,GAARD,CAAY,UAACE,MAAD;IAAY,oBACxB5D,6BAAC+F,cAAD/F;MACEgG,IAAI,EAAEpC,MADR;MAEEqC,GAAG,EAAErC,MAAM,CAAC5E,MAFd;MAGE4F,WAAW,EAAEA,WAHf;MAIEsB,MAAM,EAAE,gBAACxB,EAAD;YAAGyB,SAAS;YAAEC,SAAS;QAAO,oBACpCpG,4DACGjB,OAAO,CAACsH,MAARtH,KAAmB,UAAnBA,iBACCiB,6BAACsG,WAADtG;UACEuG,WAAW,EAAE,qBAACC,cAAD;YAAoB,oBAC/BxG,6BAACyG,UAADzG;cACEY,SAAS,EAAC,mCADZ;cAEEQ,KAAK,EAAC,MAFR;cAGED,MAAM,EAAC,MAHT;cAIEa,OAAO,EAAEwE;YAJX,gBAMExG,6BAAC0G,IAAD1G;cACEoB,KAAK,EAAC,MADR;cAEED,MAAM,EAAC,MAFT;cAGEV,IAAI,EAAEkG,SAAS,CAACC,IAHlB;cAIEC,SAAS,EAAEC,UAAU,CAACC;YAJxB,EANF/G,CAD+B;UADnC;UAgBEgH,SAAS,EAAE,mBAACC,aAAD;YAAmB,oBAC5BjH,6BAACkH,SAADlH;cACEmH,gBAAgB,EAAEhB,SADpB;cAEEA,SAAS,EAAEC,SAFb;cAAA;cAGEa,aAAa,EAAEA,aAHjB;cAIEG,QAAQ;YAJV,gBAMEpH,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACP,IAAK4B,MAAM,CAAC0D,IAAP1D,KAAgB,UAArB,EAAkC;kBAChC7E,OAAO,CAACwI,YAARxI,CAAqB,CAAC6E,MAAM,CAAC5E,MAAR,CAArBD,EAAsC;oBACpC8F,UAAU,CAACnB,OAAO,CAACC,GAARD,CAAY;sBACrB,IAAG8D,CAAC,CAACxI,MAAFwI,KAAa5D,MAAM,CAAC5E,MAAvB,EAA+B;wBAC7B,6BACK4E,MADL,GACKA;0BACH0D,IAAI,EAAE;wBADH1D,CADL;sBAID;;sBACD,OAAO4D,CAAP;oBAPS,EAAD,CAAV3C;oBASAoC,aAAa;kBAVf;gBADF,OAaO;kBACLlI,OAAO,CAAC0I,eAAR1I,CAAwB,CAAC6E,MAAM,CAAC5E,MAAR,CAAxBD,EAAyC;oBACvC8F,UAAU,CAACnB,OAAO,CAACC,GAARD,CAAY;sBACrB,IAAG8D,CAAC,CAACxI,MAAFwI,KAAa5D,MAAM,CAAC5E,MAAvB,EAA+B;wBAC7B,6BACK4E,MADL,GACKA;0BACH0D,IAAI,EAAE;wBADH1D,CADL;sBAID;;sBACD,OAAO4D,CAAP;oBAPS,EAAD,CAAV3C;oBASAoC,aAAa;kBAVf;gBAYD;cACF;YA7BH,GA+BIrD,MAAM,CAAC0D,IAAP1D,KAAgB,UAAhBA,GAA6B,qBAA7BA,GAAqD,iBA/BzD5D,CANFA;YAyCI,CAACjB,OAAO,CAAC2I,WAAT,iBACE1H,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACP,IAAI4B,MAAM,CAAC+D,OAAX,EAAoB;kBAClB5I,OAAO,CAAC6I,UAAR7I,CAAmB6E,MAAnB7E,EAA2B;oBACzB8F,UAAU,CAACnB,OAAO,CAACC,GAARD,CAAY;sBACrB,IAAG8D,CAAC,CAACxI,MAAFwI,KAAa5D,MAAM,CAAC5E,MAAvB,EAA+B;wBAC7B,6BACK4E,MADL,GACKA;0BACH+D,OAAO,EAAE;wBADN/D,CADL;sBAID;;sBACD,OAAO4D,CAAP;oBAPS,EAAD,CAAV3C;oBASAoC,aAAa;kBAVf;gBADF,OAaO;kBACLlI,OAAO,CAAC8I,QAAR9I,CAAiB6E,MAAjB7E,EAAyB;oBACvB8F,UAAU,CAACnB,OAAO,CAACC,GAARD,CAAY;sBACrB,IAAG8D,CAAC,CAACxI,MAAFwI,KAAa5D,MAAM,CAAC5E,MAAvB,EAA+B;wBAC7B,6BACK4E,MADL,GACKA;0BACH+D,OAAO,EAAE;wBADN/D,CADL;sBAID;;sBACD,OAAO4D,CAAP;oBAPS,EAAD,CAAV3C;oBASAoC,aAAa;kBAVf;gBAYD;cACF;YA7BH,GA+BIrD,MAAM,CAAC+D,OAAP/D,GAAiB,QAAjBA,GAA4B,MA/BhC5D,CA1CNA,eA6EEA,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACPjD,OAAO,CAAC+I,OAAR/I,CAAgB6E,MAAhB7E,EAAwB,CAAC,CAAzBA,EAA4B,EAA5BA,EAAgC;kBAC9B8F,UAAU,CAACnB,OAAO,CAACqE,MAARrE,CAAe,UAACgB,EAAD;wBAAG1F,MAAM;oBACjC,OAAOA,MAAM,KAAK4E,MAAM,CAAC5E,MAAzB;kBADS,EAAD,CAAV6F;gBADF;cAKD;YAPH,SA7EF7E,CAD4B;UA0F7B;QA1GH,EAFJA,CADoC;MAiHrC;IArHH,EADwB;EAAxB,EAtBJA,CANFA,CADFA,CADF;AA2JD;;ACpLD,IAAMgI,gBAAgB,GAAG,EAAzB;;AAEA,IAAMjC,cAAY,GAAG,SAAfA,YAAe,OAAuC;EAAA,uBAApCnC,MAAoC;EAAA,IAApCA,MAAoC,4BAA3B,EAA2B;EAAA,4BAAvBgB,WAAuB;EAAA,IAAvBA,WAAuB,iCAAT,EAAS;EAC1D,IAAMqD,SAAS,GAAG9I,MAAM,CAAC,IAAD,CAAxB;;EACA,kBAGIQ,UAAU,CAACuI,kBAAD,CAHd;EAAA,IACEC,kBADF,eACEA,kBADF;EAAA,IAEEC,iBAFF,eAEEA,iBAFF;;EAIA,mBAAsBzI,UAAU,CAACC,mBAAD,CAAhC;EAAA,IAAQC,SAAR,gBAAQA,SAAR;;EACA,oBACEG;IAAKY,SAAS,EAAC;EAAfZ,gBACEA;IAAKY,SAAS,EAAC;EAAfZ,gBACEA,6BAACsG,WAADtG;IACEuG,WAAW,EAAE,qBAACC,cAAD;MAAA,oBACXxG,6BAACkB,MAADlB;QACEgC,OAAO,EAAE,mBAAM;UACb,IAAI,CAACmG,kBAAL,EAAyB;YACvB3B,cAAc;UACf;QAJL;QAME3F,GAAG,EAAEoH,SANP;QAOE5G,GAAG,EAAEuC,MAAM,CAACyE,UAPd;QAQEjH,KAAK,EAAE,EART;QASED,MAAM,EAAE;MATV,EADW;IADf;IAcE6F,SAAS,EAAE,mBAACC,aAAD;MAAA,oBACTjH,6BAACkH,SAADlH;QACEoH,QAAQ,MADV;QAEEjB,SAAS,EAAE8B,SAFb;QAAA;QAIEd,gBAAgB,EAAEc,SAJpB;QAAA;QAMEhB,aAAa,EAAEA,aANjB;QAOEzF,KAAK,EAAE;UAAE8G,UAAU,EAAE,CAAd;UAAiBC,aAAa,EAAE;QAAhC;MAPT,GAUIH,iBAAiB,GACbA,iBAAiB,CAAC;QAClBpC,IAAI,EAAEpC,MADY;QAElB4E,aAAa,EAAE5D,WAFG;QAGlB6D,KAAK,EAAExB;MAHW,CAAD,CADJ,gBAObjH,6BAAC0I,oBAAD1I;QACEgG,IAAI,EAAEpC,MADR;QAEE4E,aAAa,EAAE5D,WAFjB;QAGE+D,SAAS,EAAE1B;MAHb,EAjBRjH,CADS;IAAA;EAdb,EADFA,CADFA,eA6CEA,6BAACmC,KAADnC;IAAOS,IAAI,EAAE2B,eAAe,CAAC6B,UAA7B;IAAyC3B,KAAK,EAAEC,WAAW,CAAC2B;EAA5D,GACGN,MAAM,CAACC,QAAPD,IAAmB/D,SAAS,CAACiE,OADhC9D,EAGK4E,WAAW,KAAKhB,MAAM,CAAC5E,MAAvB4F,IACC/E,SAAS,CAAC+I,6BAJhB5I,CA7CFA,CADF;AAPF;;AAiEA+F,cAAY,CAACjD,SAAbiD,GAAyB;EACvBnC,MAAM,EAAEb,SAAS,CAACG,KAAVH,CAAgB;IACtB/D,MAAM,EAAE+D,SAAS,CAACI,MADI;IAEtBkF,UAAU,EAAEtF,SAAS,CAACI,MAFA;IAGtBU,QAAQ,EAAEd,SAAS,CAACI;EAHE,CAAhBJ,EAILE,UALoB;EAMvB2B,WAAW,EAAE7B,SAAS,CAACI,MAAVJ,CAAiBE;AANP,CAAzB8C;;AASA,IAAM8C,gBAAgB,GAAG,SAAnBA,gBAAmB,QAOnB;EAAA,IANJ9J,OAMI,SANJA,OAMI;EAAA,IALJsE,QAKI,SALJA,QAKI;EAAA,IAJJuB,WAII,SAJJA,WAII;EAAA,IAHJkE,gBAGI,SAHJA,gBAGI;EAAA,IAFJC,eAEI,SAFJA,eAEI;EAAA,IADJC,UACI,SADJA,UACI;EACJ,IAAMtF,OAAO,GAAG3E,OAAO,CAAC2E,OAAR3E,IAAmB,EAAnC;;EACA,gBAA0CO,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAO2J,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAAgD5J,QAAQ,CAAC,KAAD,CAAxD;EAAA;EAAA,IAAO6J,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,mBAAsBzJ,UAAU,CAACC,mBAAD,CAAhC;EAAA,IAAQC,SAAR,gBAAQA,SAAR;;EACA,oBACEG;IAAKY,SAAS,EAAC;EAAfZ,gBACEA;IAAKY,SAAS,EAAC;EAAfZ,GAEI0D,OAAO,CAAC2F,KAAR3F,CAAc,CAAdA,EAAiBsE,gBAAjBtE,EAAmCC,GAAnCD,CAAuC,UAACE,MAAD;IAAA,oBACrC5D,6BAAC+F,cAAD/F;MACE4D,MAAM,EAAEA,MADV;MAEEgB,WAAW,EAAEA,WAFf;MAGEqB,GAAG,EAAErC,MAAM,CAAC5E;IAHd,EADqC;EAAvC,EAFJgB,CADFA,eAYEA;IAAKY,SAAS,EAAC;EAAfZ,GAEI0D,OAAO,CAAC4F,MAAR5F,IAAkBsE,gBAAlBtE,iBACE1D,6BAACuJ,MAADvJ;IACEY,SAAS,EAAC,iDADZ;IAEEH,IAAI,EAAE+I,WAAW,CAACC,SAFpB;IAGEC,IAAI,EAAEC,WAAW,CAACC,KAHpB;IAIE5H,OAAO,EAAE;MAAA,OAAMkH,gBAAgB,CAAC,IAAD,CAAtB;IAAA;EAJX,GAMGrJ,SAAS,CAACgK,yCANb7J,CAHNA,EAcI0D,OAAO,CAAC4F,MAAR5F,IAAkBsE,gBAAlBtE,IAAsCuF,aAAtCvF,iBACE1D,6BAACyE,YAADzE;IACE4E,WAAW,EAAEA,WADf;IAEED,SAAS,EAAE,qBAAM;MACfuE,gBAAgB,CAAC,KAAD,CAAhBA;IAHJ;IAKEnK,OAAO,EAAEA;EALX,EAfNiB,eAwBEA,6BAACuJ,MAADvJ;IACEY,SAAS,EAAC,kDADZ;IAEEH,IAAI,EAAE+I,WAAW,CAACC,SAFpB;IAGEC,IAAI,EAAEC,WAAW,CAACC,KAHpB;IAIEvG,QAAQ,EAAEA,QAJZ;IAKErB,OAAO,EAAE,mBAAM;MACb,IAAIqB,QAAJ,EAAc;QAAE;MAAS;;MACzB+F,mBAAmB,CAAC,IAAD,CAAnBA;IACD;EARH,GAUGvJ,SAAS,CAACiK,uCAVb9J,CAxBFA,EAqCImJ,gBAAgB,iBACdnJ,6BAAC+J,eAAD/J;IACEgJ,UAAU,EAAEA,UADd;IAEE9I,SAAS,EAAEL,SAAS,CAACmK,2BAFvB;IAGE5J,UAAU,EAAEP,SAAS,CAACoK,cAHxB;IAIEC,UAAU,EAAE;MAAA,OAAMd,mBAAmB,CAAC,KAAD,CAAzB;IAJd;IAKEe,WAAW,EAAEzG,OAAO,CAACC,GAARD,CAAY,UAACE,MAAD;MAAA,OAAaA,MAAM,CAAC5E,MAApB;IAAZ,EALf;IAME8J,gBAAgB,EAAEA,gBANpB;IAOEjK,QAAQ,EAAEkK;EAPZ,EAtCN/I,CAZFA,CADF;AAZF;;AA+EA6I,gBAAgB,CAAC/F,SAAjB+F,GAA6B;EAC3BG,UAAU,EAAEjG,SAAS,CAACwB,IADK;EAE3BlB,QAAQ,EAAEN,SAAS,CAACwB,IAFO;EAG3BxF,OAAO,EAAEgE,SAAS,CAACG,KAAVH,CAAgB;IACvBW,OAAO,EAAEX,SAAS,CAACuB,OAAVvB,CAAkBA,SAAS,CAACG,KAAVH,CAAgB,EAAhBA,CAAlBA;EADc,CAAhBA,CAHkB;EAM3B6B,WAAW,EAAE7B,SAAS,CAACI,MANI;EAO3B2F,gBAAgB,EAAE/F,SAAS,CAACC,IAAVD,CAAeE,UAPN;EAQ3B8F,eAAe,EAAEhG,SAAS,CAACC,IAAVD,CAAeE;AARL,CAA7B4F;AAWAA,gBAAgB,CAACrE,YAAjBqE,GAAgC;EAC9BG,UAAU,EAAE,KADkB;EAE9BpE,WAAW,EAAE,EAFiB;EAG9BvB,QAAQ,EAAE,KAHoB;EAI9BtE,OAAO,EAAE;AAJqB,CAAhC8J,C,CCrLA;;AAeA,IAAMuB,cAAc,GAAG,gCAAvB;;AAmBA,IAAMrE,YAAY,GAAG,SAAfA,YAAe,CAACrB,EAAD;MACnBsB,IAAI;MACJpF,SAAS;MACTgE,WAAW;MACXsB,MAAM;EAEN,IAAME,SAAS,GAAGjH,MAAM,CAAC,IAAD,CAAxB;EACA,IAAMgH,SAAS,GAAGhH,MAAM,CAAC,IAAD,CAAxB;EACA,IAAM8I,SAAS,GAAG9I,MAAM,CAAC,IAAD,CAAxB;EACQ,aAAS,GAAKQ,UAAU,CAACC,mBAAD,CAAVD,UAAd;;EACF,SAGFA,UAAU,CAACuI,kBAAD,CAHR;EAAA,IACJC,kBAAkB,wBADd;EAAA,IAEJC,iBAAiB,uBAFb;;EAIN,IAAMiC,mBAAmB,GAAGC,KAAK,CAACC,OAAND,CAAc1J,SAAd0J,IAA2B1J,SAA3B0J,GAAuC,CAAC1J,SAAD,CAAnE;EACA,oBACEZ;IACEa,GAAG,EAAEsF,SADPnG;IAEEY,SAAS,EAAE4J,eACTJ,cADSI,GACUH,mBADVG,EACUH,IADVG,EAETzG,IAFSyG,CAEJ,GAFIA;EAFbxK,GAOIgG,IAAI,CAAC2B,OAAL3B,iBACEhG,6BAACyK,kBAADzK,OARNA,eAWEA,6BAACsG,WAADtG;IACEuG,WAAW,EAAE,qBAACC,cAAD;MAAoB,oBAC/BxG,6BAACkB,MAADlB;QACEgC,OAAO,EAAE;UACP,IAAI,CAACmG,kBAAL,EAAyB;YACvB3B,cAAc;UACf;QAJL;QAME3F,GAAG,EAAEoH,SANP;QAOErH,SAAS,EAAKwJ,cAAc,aAP9B;QAQE/I,GAAG,EAAE2E,IAAI,CAACqC,UARZ;QASEjH,KAAK,EAAE,EATT;QAUED,MAAM,EAAE;MAVV,EAD+B;IADnC;IAeE6F,SAAS,EAAE,mBAACC,aAAD;MAAmB,oBAC5BjH,6BAACkH,SAADlH;QACEoH,QAAQ,MADV;QAEEjB,SAAS,EAAE8B,SAFb;QAAA;QAIEd,gBAAgB,EAAEc,SAJpB;QAAA;QAMEhB,aAAa,EAAEA,aANjB;QAOEzF,KAAK,EAAE;UAAE8G,UAAU,EAAE,CAAd;UAAiBC,aAAa,EAAE;QAAhC;MAPT,GAUIH,iBAAiB,GACbA,iBAAiB,CAAC;QAClBpC,IAAI,MADc;QAElBwC,aAAa,EAAE5D,WAFG;QAGlB6D,KAAK,EAAExB;MAHW,CAAD,CADJ,gBAObjH,6BAAC0I,oBAAD1I;QACEgG,IAAI,EAAEA,IADR;QAEEwC,aAAa,EAAE5D,WAFjB;QAGE+D,SAAS,EAAE1B;MAHb,EAjBRjH,CAD4B;IA0B7B;EAzCH,EAXFA,eAsDEA,6BAACmC,KAADnC;IACEY,SAAS,EAAKwJ,cAAc,YAD9B;IAEE3J,IAAI,EAAE2B,eAAe,CAACsI,UAFxB;IAGEpI,KAAK,EAAEC,WAAW,CAAC2B;EAHrB,GAKG8B,IAAI,CAACnC,QAALmC,IAAiBnG,SAAS,CAACiE,OAL9B9D,EAOK4E,WAAW,KAAKoB,IAAI,CAAChH,MAArB4F,IACC,QARN5E,CAtDFA;EAmEI,CAACgG,IAAI,CAACnC,QAAN,iBACE7D,6BAACmC,KAADnC;IACEY,SAAS,EAAKwJ,cAAc,eAD9B;IAEE3J,IAAI,EAAE2B,eAAe,CAACuI,SAFxB;IAGErI,KAAK,EAAEC,WAAW,CAAC4B;EAHrB,GAKG6B,IAAI,CAAChH,MALRgB,CApENA,EA8EIgG,IAAI,CAACsB,IAALtB,KAAc,UAAdA,iBACEhG,6BAACmC,KAADnC;IACEY,SAAS,EAAKwJ,cAAc,eAD9B;IAEE3J,IAAI,EAAE2B,eAAe,CAAC6B,UAFxB;IAGE3B,KAAK,EAAEC,WAAW,CAAC4B;EAHrB,cA/ENnE,EAyFIkG,MAAM,iBACJlG;IAAKa,GAAG,EAAEuF,SAAVpG;IAAqBY,SAAS,EAAKwJ,cAAc;EAAjDpK,GACIkG,MAAM,CAAC;IAAEE,SAAS,WAAX;IAAaD,SAAS;EAAtB,CAAD,CADVnG,CA1FNA,CADF;AAfF;;SCZwB4K,eAAelG;MACrCC,SAAS;MACT5F,OAAO;MACP6F,WAAW;;EAEL,SAA4BtF,QAAQ,CAAC,EAAD,CAApC;EAAA,IAACuL,SAAS,QAAV;EAAA,IAAYC,YAAY,QAAxB;;EACA,SAAoCxL,QAAQ,CAAC,IAAD,CAA5C;EAAA,IAACyL,aAAa,QAAd;EAAA,IAAgBC,gBAAgB,QAAhC;;EAENhG,SAAS,CAAC;IACR,IAAMiG,iBAAiB,GAAGlM,OAAO,CAACmM,uBAARnM,EAA1B;IACAkM,iBAAiB,CAAC9F,KAAlB8F,GAA0B,EAA1BA;IACAA,iBAAiB,CAAC7F,IAAlB6F,CAAuB,UAACJ,SAAD,EAAYxF,KAAZ;MACrB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDyF,YAAY,CAACD,SAAD,CAAZC;IAJF;IAMAE,gBAAgB,CAACC,iBAAD,CAAhBD;EATO,GAUN,EAVM,CAAThG;EAWA,oBACEhF,uDACEA,6BAACC,KAADD;IACEsF,UAAU,MADZ;IAEExG,QAAQ,EAAE;MAAM,gBAAS,EAAT;IAFlB;IAGED,QAAQ,EAAE0G,IAHZ;IAIErF,SAAS,EAAC;EAJZ,gBAMEF;IACEY,SAAS,EAAC,qCADZZ;IAEEwF,QAAQ,EAAE,kBAAC1E,CAAD;MACA,WAAO,GAAKiK,aAAa,QAAzB;MACR,IAAMlJ,MAAM,GAAGf,CAAC,CAACe,MAAjB;MACA,IAAM4D,SAAS,GACb5D,MAAM,CAAC6D,YAAP7D,GAAsBA,MAAM,CAAC8D,SAA7B9D,KAA2CA,MAAM,CAAC+D,YADpD;;MAIA,IAAIC,OAAO,IAAIJ,SAAf,EAA0B;QACxBsF,aAAa,CAAC3F,IAAd2F,CAAmB,UAACjF,CAAD,EAAIT,KAAJ;UACjB,IAAIA,KAAJ,EAAW;YACT;UACD;;UACDyF,YAAY,iCACPD,SADO,EACPA,IADO,GAEP/E,CAFO,EAEPA,IAFO,EAAZgF;QAJF;MASD;IACF;EApBH9K,GAsBI6K,SAAS,CAAClH,GAAVkH,CAAc,UAACjH,MAAD;IAAY,oBAC1B5D,6BAAC+F,cAAD/F;MACE4E,WAAW,EAAEA,WADf;MAEEoB,IAAI,EAAEpC,MAFR;MAGEqC,GAAG,EAAErC,MAAM,CAAC5E,MAHd;MAIEkH,MAAM,EAAE,gBAACxB,EAAD;YAAGyB,SAAS;YAAEC,SAAS;QAAO,oBACpCpG,6BAACsG,WAADtG;UACEuG,WAAW,EAAE,qBAACC,cAAD;YAAoB,oBAC/BxG,6BAACyG,UAADzG;cACEY,SAAS,EAAC,mCADZ;cAEEQ,KAAK,EAAC,MAFR;cAGED,MAAM,EAAC,MAHT;cAIEa,OAAO,EAAEwE;YAJX,gBAMExG,6BAAC0G,IAAD1G;cACEoB,KAAK,EAAC,MADR;cAEED,MAAM,EAAC,MAFT;cAGEV,IAAI,EAAEkG,SAAS,CAACC,IAHlB;cAIEC,SAAS,EAAEC,UAAU,CAACC;YAJxB,EANF/G,CAD+B;UADnC;UAgBEgH,SAAS,EAAE,mBAACC,aAAD;YAAmB,oBAC5BjH,6BAACkH,SAADlH;cACEmH,gBAAgB,EAAEhB,SADpB;cAEEA,SAAS,EAAEC,SAFb;cAAA;cAGEa,aAAa,EAAEA,aAHjB;cAIEG,QAAQ;YAJV,gBAMEpH,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACPjD,OAAO,CAAC0I,eAAR1I,CAAwB,CAAC6E,MAAM,CAAC5E,MAAR,CAAxBD,EAAyC,UAACoM,QAAD,EAAW9F,KAAX;kBACvC,IAAIA,KAAJ,EAAW;oBACT;kBACD;;kBACDyF,YAAY,CAACD,SAAS,CAAC9C,MAAV8C,CAAiB,UAACnG,EAAD;wBAAG1F,MAAM;oBACrC,OAAOA,MAAM,KAAK4E,MAAM,CAAC5E,MAAzB;kBADW,EAAD,CAAZ8L;gBAJF;gBAQA7D,aAAa;cACd;YAXH,sBANFjH,CAD4B;UAuB7B;QAvCH,EADoC;MA0CrC;IA9CH,EAD0B;EAA1B,EAtBJA,CANFA,CADFA,CADF;AAoFD;;SCpGuBoL,kBAAkB1G;MACxCC,SAAS;MACT5F,OAAO;MACPF,SAAQ;;EAEF,SAAwBS,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAACoE,OAAO,QAAR;EAAA,IAAUmB,UAAU,QAApB;;EACA,SAAwCvF,QAAQ,CAAC,EAAD,CAAhD;EAAA,IAAC+L,eAAe,QAAhB;EAAA,IAAkBC,kBAAkB,QAApC;;EACA,SAAgChM,QAAQ,CAAC,IAAD,CAAxC;EAAA,IAACwF,WAAW,QAAZ;EAAA,IAAcC,cAAc,QAA5B;;EACE,aAAS,GAAKpF,UAAU,CAACC,mBAAD,CAAVD,UAAd;EAERqF,SAAS,CAAC;IACR,IAAMC,eAAe,GAAGlG,OAAO,CAACmG,qBAARnG,EAAxB;IACAkG,eAAe,CAACE,KAAhBF,GAAwB,EAAxBA;IACAA,eAAe,CAACG,IAAhBH,CAAqB,UAACvB,OAAD,EAAU2B,KAAV;MACnB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACnB,OAAD,CAAVmB;IAJF;IAMAE,cAAc,CAACE,eAAD,CAAdF;EATO,GAUN,EAVM,CAATC;EAYA,IAAMuG,aAAa,GAAGC,MAAM,CAACC,IAAPD,CAAYH,eAAZG,EAA6BzD,MAA7ByD,CAAoC,UAAChE,CAAD;IAAO,sBAAe,CAACA,CAAD,CAAf;EAA3C,GAA+D8B,MAArF;EACA,oBACEtJ,uDACEA,6BAACC,KAADD;IACES,IAAI,EAAEC,IAAU,CAACC,OADnB;IAEEP,UAAU,EAAC,KAFb;IAGEtB,QAAQ,EAAE;MAAM,gBAAS,EAAT;IAHlB;IAIED,QAAQ,EAAE;MACR,IAAM6E,OAAO,GAAG8H,MAAM,CAACC,IAAPD,CAAYH,eAAZG,EAA6BzD,MAA7ByD,CAAoC,UAAChE,CAAD;QAAO,sBAAe,CAACA,CAAD,CAAf;MAA3C,EAAhB;;MACA3I,SAAQ,CAAC6E,OAAD,CAAR7E;IANJ;IAQEqB,SAAS,EAAC;EARZ,gBAUEF,6BAACmC,KAADnC;IACEsC,KAAK,EAAGiJ,aAAa,GAAG,CAAhBA,GAAqBhJ,WAAW,CAAC5B,OAAjC4K,GAA2ChJ,WAAW,CAACmJ,cADjE;IAEEjL,IAAI,EAAE2B,eAAe,CAACuJ;EAFxB,GAIMJ,aAAa,MAAbA,GAAiB1L,SAAS,CAAC+L,8BAJjC5L,CAVFA,eAgBEA;IACEY,SAAS,EAAC,qCADZZ;IAEEwF,QAAQ,EAAE,kBAAC1E,CAAD;MACA,WAAO,GAAKgE,WAAW,QAAvB;MACR,IAAMjD,MAAM,GAAGf,CAAC,CAACe,MAAjB;MACA,IAAM4D,SAAS,GACb5D,MAAM,CAAC6D,YAAP7D,GAAsBA,MAAM,CAAC8D,SAA7B9D,KAA2CA,MAAM,CAAC+D,YADpD;;MAIA,IAAIC,OAAO,IAAIJ,SAAf,EAA0B;QACxBX,WAAW,CAACM,IAAZN,CAAiB,UAACgB,CAAD,EAAIT,KAAJ;UACf,IAAIA,KAAJ,EAAW;YACT;UACD;;UACDR,UAAU,iCACLnB,OADK,EACLA,IADK,GAELoC,CAFK,EAELA,IAFK,EAAVjB;QAJF;MASD;IACF;EApBH7E,GAsBI0D,OAAO,CAACC,GAARD,CAAY,UAACE,MAAD;IAAY,oBACxB5D,6BAAC+F,cAAD/F;MACE6L,QAAQ,MADV;MAEEC,OAAO,EAAET,eAAe,CAACzH,MAAM,CAAC5E,MAAR,CAF1B;MAGE0C,QAAQ,EACN,kBAACqK,KAAD;;;QACE,IAAMC,uBAAuB,yBACxBX,eADwB,IACxBA,YACFU,KAAK,CAAClK,MAANkK,CAAaE,EADXZ,IACgBU,KAAK,CAAClK,MAANkK,CAAaD,OAD7BT,EAC6BS,EAFL,EAA7B;;QAIA,IAAI,CAACC,KAAK,CAAClK,MAANkK,CAAaD,OAAlB,EAA2B;UACzB,OAAOE,uBAAuB,CAACD,KAAK,CAAClK,MAANkK,CAAaE,EAAd,CAA9B;QACD;;QACDX,kBAAkB,CAACU,uBAAD,CAAlBV;MAZN;MAeEtF,IAAI,EAAEpC,MAfR;MAgBEqC,GAAG,EAAErC,MAAM,CAAC5E;IAhBd,EADwB;EAAxB,EAtBJgB,CAhBFA,CADFA,CADF;AAgED;;ACrFM,IAAMkM,YAAY,GAAG,SAAfA,YAAe,CAACxH,EAAD;MAAGyH,GAAG;MAAEpN,OAAO;;EACnC,SAA4BO,QAAQ,CAAC,EAAD,CAApC;EAAA,IAACuL,SAAS,QAAV;EAAA,IAAYC,YAAY,QAAxB;;EACA,SAA0BxL,QAAQ,CAAC,KAAD,CAAlC;EAAA,IAAC8M,QAAQ,QAAT;EAAA,IAAWC,WAAW,QAAtB;;EACA,SAAwB/M,QAAQ,CAAC,KAAD,CAAhC;EAAA,IAACgN,OAAO,QAAR;EAAA,IAAUC,UAAU,QAApB;;EACA,SAAwBjN,QAAQ,CAAC,KAAD,CAAhC;EAAA,IAACuG,OAAO,QAAR;EAAA,IAAU2G,UAAU,QAApB;;EACE,aAAS,GAAK7M,UAAU,CAACC,mBAAD,CAAVD,UAAd;EAERqF,SAAS,CAAC;IACR,IAAI,CAACjG,OAAL,EAAc;MACZ+L,YAAY,CAAC,EAAD,CAAZA;MACA;IACD;;IAED,IAAMG,iBAAiB,GAAGlM,OAAO,CAACmM,uBAARnM,EAA1B;IACAkM,iBAAiB,CAAC9F,KAAlB8F,GAA0B,EAA1BA;IACAA,iBAAiB,CAAC7F,IAAlB6F,CAAuB,UAACJ,SAAD,EAAYxF,KAAZ;MACrB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDyF,YAAY,CAACD,SAAD,CAAZC;MACA0B,UAAU,CAACvB,iBAAiB,CAACpF,OAAnB,CAAV2G;IALF;EARO,GAeN,CAACzN,OAAD,CAfM,CAATiG;EAiBA,IAAMyH,WAAW,GAAGC,WAAW,CAC7B;IACE,IAAI,CAAC3N,OAAL,EAAc;MACZ+L,YAAY,CAAC,EAAD,CAAZA;MACA;IACD;;IACD,IAAMG,iBAAiB,GAAGlM,OAAO,CAACmM,uBAARnM,EAA1B;IACAkM,iBAAiB,CAAC9F,KAAlB8F,GAA0B,EAA1BA;IACAA,iBAAiB,CAAC7F,IAAlB6F,CAAuB,UAACJ,SAAD,EAAYxF,KAAZ;MACrB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDyF,YAAY,CAACD,SAAD,CAAZC;MACA0B,UAAU,CAACvB,iBAAiB,CAACpF,OAAnB,CAAV2G;IALF;EAR2B,GAgB7B,CAACzN,OAAD,CAhB6B,CAA/B;EAmBA,oBACEiB,4DAEI6K,SAAS,CAAClH,GAAVkH,CAAc,UAAC8B,QAAD;IAAc,oBAC1B3M,6BAAC+F,YAAD/F;MACEiG,GAAG,EAAE0G,QAAQ,CAAC3N,MADhB;MAEEgH,IAAI,EAAE2G,QAFR;MAGE/H,WAAW,EAAEuH,GAAG,CAACvH,WAAJuH,CAAgBnN,MAH/B;MAIEkH,MAAM,EAAE,gBAACxB,EAAD;YAAG0B,SAAS;YAAED,SAAS;QAC7B,oBACEnG,6BAACsG,WAADtG;UACEuG,WAAW,EAAE,qBAACC,cAAD;YAAoB,oBAC/BxG,6BAACyG,UAADzG;cACEY,SAAS,EAAC,mCADZ;cAEEQ,KAAK,EAAC,MAFR;cAGED,MAAM,EAAC,MAHT;cAIEa,OAAO,EAAEwE;YAJX,gBAMExG,6BAAC0G,IAAD1G;cACEoB,KAAK,EAAC,MADR;cAEED,MAAM,EAAC,MAFT;cAGEV,IAAI,EAAEkG,SAAS,CAACC,IAHlB;cAIEC,SAAS,EAAEC,UAAU,CAACC;YAJxB,EANF/G,CAD+B;UADnC;UAgBEgH,SAAS,EAAE,mBAACC,aAAD;YAAmB,oBAC5BjH,6BAACkH,SAADlH;cACEmH,gBAAgB,EAAEhB,SADpB;cAEEA,SAAS,EAAEC,SAFb;cAAA;cAGEa,aAAa,EAAEA,aAHjB;cAIEG,QAAQ;YAJV,gBAMEpH,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACPjD,OAAO,CAAC0I,eAAR1I,CAAwB,CAAC4N,QAAQ,CAAC3N,MAAV,CAAxBD,EAA2C,UAACoM,QAAD,EAAW9F,KAAX;kBACzC,IAAIA,KAAJ,EAAW;oBACT;kBACD;;kBACDyF,YAAY,CAACD,SAAS,CAAC9C,MAAV8C,CAAiB,UAACnG,EAAD;wBAAG1F,MAAM;oBACrC,OAAOA,MAAM,KAAK2N,QAAQ,CAAC3N,MAA3B;kBADW,EAAD,CAAZ8L;gBAJF;gBAQA7D,aAAa;cACd;YAXH,sBANFjH,CAD4B;UAuB7B;QAvCH,EADF;MA2CD;IAhDH,EAD0B;EAA5B,EAFJA,EAwDI6F,OAAO,iBACL7F;IACEY,SAAS,EAAC;EADZZ,gBAGEA,6BAACuJ,MAADvJ;IACES,IAAI,EAAE+I,WAAW,CAACC,SADpB;IAEEC,IAAI,EAAEC,WAAW,CAACC,KAFpB;IAGE5H,OAAO,EAAE;MACPqK,WAAW,CAAC,IAAD,CAAXA;IACD;EALH,GAOGxM,SAAS,CAAC+M,qCAPb5M,CAHFA,eAYEA,6BAACuJ,MAADvJ;IACES,IAAI,EAAE+I,WAAW,CAACC,SADpB;IAEEC,IAAI,EAAEC,WAAW,CAACC,KAFpB;IAGE5H,OAAO,EAAE;MACPuK,UAAU,CAAC,IAAD,CAAVA;IACD;EALH,GAOG1M,SAAS,CAACgN,qCAPb7M,CAZFA,CAzDNA,EAkFIoM,QAAQ,iBACNpM,6BAAC4K,cAAD5K;IACE4E,WAAW,EAAEuH,GAAG,CAACvH,WAAJuH,CAAgBnN,MAD/B;IAEE2F,SAAS,EAAE;MACT0H,WAAW,CAAC,KAAD,CAAXA;MACAI,WAAW;IAJf;IAME1N,OAAO,EAAEA;EANX,EAnFNiB,EA8FIsM,OAAO,iBACLtM,6BAACoL,iBAADpL;IACE2E,SAAS,EAAE;MAAM,iBAAU,CAAC,KAAD,CAAV;IADnB;IAEE5F,OAAO,EAAEA,OAFX;IAGEF,QAAQ,EAAE,kBAAC6E,OAAD;MACR6I,UAAU,CAAC,KAAD,CAAVA;MACAxN,OAAO,CAACwI,YAARxI,CAAqB2E,OAArB3E,EAA8B;QAC5B0N,WAAW;MADb;IAGD;EARH,EA/FNzM,CADF;AA3CK;;AA2JP,IAAM8M,iBAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;EAAW,OAAC;IAClCZ,GAAG,EAAEa,MAAM,CAACD,KAAD;EADuB,CAAD;AAAnC;;AAIA,qBAAeE,mBAAmB,CAACf,YAAD,EAAeY,iBAAf,CAAlC;;SC1KwB/C,cAAcrF;MACpCC,SAAS;MACTmE,gBAAgB;MAChBjK,SAAQ;;EAEF,SAAwBS,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAACoE,OAAO,QAAR;EAAA,IAAUmB,UAAU,QAApB;;EACA,SAAwCvF,QAAQ,CAAC,EAAD,CAAhD;EAAA,IAAC+L,eAAe,QAAhB;EAAA,IAAkBC,kBAAkB,QAApC;;EACA,SAA4BhM,QAAQ,CAAC,IAAD,CAApC;EAAA,IAAC4N,SAAS,QAAV;EAAA,IAAYC,YAAY,QAAxB;;EAENnI,SAAS,CAAC;IACR,IAAMoI,aAAa,GAAGtE,gBAAgB,EAAtC;IACAsE,aAAa,CAACjI,KAAdiI,GAAsB,EAAtBA;IACAA,aAAa,CAAChI,IAAdgI,CAAmB,UAAC1J,OAAD,EAAU2B,KAAV;MACjB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACnB,OAAD,CAAVmB;IAJF;IAMAsI,YAAY,CAACC,aAAD,CAAZD;EATO,GAUN,EAVM,CAATnI;EAWA,oBACEhF,uDACEA,6BAACC,KAADD;IACEqD,QAAQ,EAAEmI,MAAM,CAACC,IAAPD,CAAYH,eAAZG,EAA6BlC,MAA7BkC,KAAwC,CADpD;IAEEpL,UAAU,EAAC,QAFb;IAGEK,IAAI,EAAEC,IAAU,CAACC,OAHnB;IAIE7B,QAAQ,EAAE;MAAM,gBAAS,EAAT;IAJlB;IAKED,QAAQ,EAAE;MACR,IAAM6E,OAAO,GAAG8H,MAAM,CAACC,IAAPD,CAAYH,eAAZG,EAA6BzD,MAA7ByD,CAAoC,UAAChE,CAAD;QAAO,sBAAe,CAACA,CAAD,CAAf;MAA3C,EAAhB;;MACA3I,SAAQ,CAAC6E,OAAD,CAAR7E;IAPJ;IASEqB,SAAS,EAAC;EATZ,gBAWEF;IACEY,SAAS,EAAC,qCADZZ;IAEEwF,QAAQ,EAAE,kBAAC1E,CAAD;MACA,WAAO,GAAKoM,SAAS,QAArB;MACR,IAAMrL,MAAM,GAAGf,CAAC,CAACe,MAAjB;MACA,IAAM4D,SAAS,GACb5D,MAAM,CAAC6D,YAAP7D,GAAsBA,MAAM,CAAC8D,SAA7B9D,KAA2CA,MAAM,CAAC+D,YADpD;;MAIA,IAAIC,OAAO,IAAIJ,SAAf,EAA0B;QACxByH,SAAS,CAAC9H,IAAV8H,CAAe,UAACpH,CAAD,EAAIT,KAAJ;UACb,IAAIA,KAAJ,EAAW;YACT;UACD;;UACDR,UAAU,iCACLnB,OADK,EACLA,IADK,GAELoC,CAFK,EAELA,IAFK,EAAVjB;QAJF;MASD;IACF;EApBH7E,GAsBI0D,OAAO,CAACC,GAARD,CAAY,UAACE,MAAD;IAAY,oBACxB5D,6BAAC+F,cAAD/F;MACE6L,QAAQ,MADV;MAEEC,OAAO,EAAET,eAAe,CAACzH,MAAM,CAAC5E,MAAR,CAF1B;MAGE0C,QAAQ,EACN,kBAACqK,KAAD;;;QACE,IAAMC,uBAAuB,yBACxBX,eADwB,IACxBA,YACFU,KAAK,CAAClK,MAANkK,CAAaE,EADXZ,IACgBU,KAAK,CAAClK,MAANkK,CAAaD,OAD7BT,EAC6BS,EAFL,EAA7B;;QAIA,IAAI,CAACC,KAAK,CAAClK,MAANkK,CAAaD,OAAlB,EAA2B;UACzB,OAAOE,uBAAuB,CAACD,KAAK,CAAClK,MAANkK,CAAaE,EAAd,CAA9B;QACD;;QACDX,kBAAkB,CAACU,uBAAD,CAAlBV;MAZN;MAeEtF,IAAI,EAAEpC,MAfR;MAgBEqC,GAAG,EAAErC,MAAM,CAAC5E;IAhBd,EADwB;EAAxB,EAtBJgB,CAXFA,CADFA,CADF;AA2DD;;ACpEM,IAAMqN,UAAU,GAAG,SAAbA,UAAa,CAAC3I,EAAD;MACxByH,GAAG;MACHpN,OAAO;MACP+J,gBAAgB;MAChB9J,MAAM;;EAEA,SAAwBM,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAACoE,OAAO,QAAR;EAAA,IAAUmB,UAAU,QAApB;;EACA,SAAwBvF,QAAQ,CAAC,KAAD,CAAhC;EAAA,IAACuG,OAAO,QAAR;EAAA,IAAU2G,UAAU,QAApB;;EACA,SAAsClN,QAAQ,CAAC,KAAD,CAA9C;EAAA,IAACgO,cAAc,QAAf;EAAA,IAAiBC,iBAAiB,QAAlC;;EACA,SAA4CjO,QAAQ,CAAC,KAAD,CAApD;EAAA,IAACkO,iBAAiB,QAAlB;EAAA,IAAoBC,oBAAoB,QAAxC;;EAENzI,SAAS,CAAC;IACR,IAAI,CAACjG,OAAL,EAAc;MACZ8F,UAAU,CAAC,EAAD,CAAVA;MACA;IACD;;IAED,IAAM6I,mBAAmB,GAAG3O,OAAO,CAACmG,qBAARnG,EAA5B;IACA2O,mBAAmB,CAACvI,KAApBuI,GAA4B,EAA5BA;IACAA,mBAAmB,CAACtI,IAApBsI,CAAyB,UAAChK,OAAD,EAAU2B,KAAV;MACvB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACnB,OAAD,CAAVmB;MACA2H,UAAU,CAACkB,mBAAmB,CAAC7H,OAArB,CAAV2G;IALF;EARO,GAeN,CAACzN,OAAD,CAfM,CAATiG;EAiBA,IAAMyH,WAAW,GAAGC,WAAW,CAC7B;IACE,IAAI,CAAC3N,OAAL,EAAc;MACZ8F,UAAU,CAAC,EAAD,CAAVA;MACA;IACD;;IACD,IAAM6I,mBAAmB,GAAG3O,OAAO,CAACmG,qBAARnG,EAA5B;IACA2O,mBAAmB,CAACvI,KAApBuI,GAA4B,EAA5BA;IACAA,mBAAmB,CAACtI,IAApBsI,CAAyB,UAAChK,OAAD,EAAU2B,KAAV;MACvB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACnB,OAAD,CAAVmB;MACA2H,UAAU,CAACkB,mBAAmB,CAAC7H,OAArB,CAAV2G;IALF;EAR2B,GAgB7B,CAACzN,OAAD,CAhB6B,CAA/B;EAmBA,oBACEiB,4DAEI0D,OAAO,CAACC,GAARD,CAAY,UAACE,MAAD;IAAY,oBACtB5D,6BAAC+F,YAAD/F;MACEiG,GAAG,EAAErC,MAAM,CAAC5E,MADd;MAEEgH,IAAI,EAAEpC,MAFR;MAGEgB,WAAW,EAAEuH,GAAG,CAACvH,WAAJuH,CAAgBnN,MAH/B;MAIEkH,MAAM,EACHlH,MAAM,KAAK4E,MAAM,CAAC5E,MAAlBA,GACG,UAAC0F,EAAD;YAAG0B,SAAS;YAAED,SAAS;QAAO,oBAC9BnG,6BAACsG,WAADtG;UACEuG,WAAW,EAAE,qBAACC,cAAD;YAAoB,oBAC/BxG,6BAACyG,UAADzG;cACEY,SAAS,EAAC,mCADZ;cAEEQ,KAAK,EAAC,MAFR;cAGED,MAAM,EAAC,MAHT;cAIEa,OAAO,EAAEwE;YAJX,gBAMExG,6BAAC0G,IAAD1G;cACEoB,KAAK,EAAC,MADR;cAEED,MAAM,EAAC,MAFT;cAGEV,IAAI,EAAEkG,SAAS,CAACC,IAHlB;cAIEC,SAAS,EAAEC,UAAU,CAACC;YAJxB,EANF/G,CAD+B;UADnC;UAgBEgH,SAAS,EAAE,mBAACC,aAAD;YAAmB,oBAC5BjH,6BAACkH,SAADlH;cACEmH,gBAAgB,EAAEhB,SADpB;cAEEA,SAAS,EAAEC,SAFb;cAAA;cAGEa,aAAa,EAAEA,aAHjB;cAIEG,QAAQ;YAJV,gBAMEpH,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACP,IAAK4B,MAAM,CAAC0D,IAAP1D,KAAgB,UAArB,EAAkC;kBAChC7E,OAAO,CAACwI,YAARxI,CAAqB,CAAC6E,MAAM,CAAC5E,MAAR,CAArBD,EAAsC;oBACpC0N,WAAW;oBACXxF,aAAa;kBAFf;gBADF,OAKO;kBACLlI,OAAO,CAAC0I,eAAR1I,CAAwB,CAAC6E,MAAM,CAAC5E,MAAR,CAAxBD,EAAyC;oBACvC0N,WAAW;oBACXxF,aAAa;kBAFf;gBAID;cACF;YAbH,GAeGrD,MAAM,CAAC0D,IAAP1D,KAAgB,UAAhBA,GAA6B,qBAA7BA,GAAqD,iBAfxD5D,CANFA;YAyBI,CAACjB,OAAO,CAAC2I,WAAT,iBACE1H,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACP,IAAI4B,MAAM,CAAC+D,OAAX,EAAoB;kBAClB5I,OAAO,CAAC6I,UAAR7I,CAAmB6E,MAAnB7E,EAA2B;oBACzB0N,WAAW;oBACXxF,aAAa;kBAFf;gBADF,OAKO;kBACLlI,OAAO,CAAC8I,QAAR9I,CAAiB6E,MAAjB7E,EAAyB;oBACvB0N,WAAW;oBACXxF,aAAa;kBAFf;gBAID;cACF;YAbH,GAeIrD,MAAM,CAAC+D,OAAP/D,GAAiB,QAAjBA,GAA4B,MAfhC5D,CA1BNA,eA6CEA,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACPjD,OAAO,CAAC+I,OAAR/I,CAAgB6E,MAAhB7E,EAAwB,CAAC,CAAzBA,EAA4B,EAA5BA,EAAgC;kBAC9B0N,WAAW;kBACXxF,aAAa;gBAFf;cAID;YANH,SA7CFjH,CAD4B;UAyD7B;QAzEH,EAD8B;MADlC,CAAChB,GA8EG;IAnFR,EADsB;EAAxB,EAFJgB,eA2FEA;IACEY,SAAS,EAAC;EADZZ,GAII6F,OAAO,iBACL7F,6BAACuJ,MAADvJ;IACES,IAAI,EAAE+I,WAAW,CAACC,SADpB;IAEEC,IAAI,EAAEC,WAAW,CAACC,KAFpB;IAGE5H,OAAO,EAAE;MAAM,wBAAiB,CAAC,IAAD,CAAjB;IAAuB;EAHxC,iBALNhC,eAcEA,6BAACuJ,MAADvJ;IACES,IAAI,EAAE+I,WAAW,CAACC,SADpB;IAEEC,IAAI,EAAEC,WAAW,CAACC,KAFpB;IAGE5H,OAAO,EAAE;MAAM,2BAAoB,CAAC,IAAD,CAApB;IAA0B;EAH3C,oBAdFhC,CA3FFA,EAkHIsN,cAAc,iBACZtN,6BAACyE,YAADzE;IACE4E,WAAW,EAAEuH,GAAG,CAACvH,WAAJuH,CAAgBnN,MAD/B;IAEED,OAAO,EAAEA,OAFX;IAGE4F,SAAS,EAAE;MACT4I,iBAAiB,CAAC,KAAD,CAAjBA;MACAd,WAAW;IACZ;EANH,EAnHNzM,EA8HIwN,iBAAiB,iBACfxN,6BAAC+J,aAAD/J;IACE8I,gBAAgB,EAAEA,gBADpB;IAEEjK,QAAQ,EAAE,kBAACwM,eAAD;MACRtM,OAAO,CAAC4O,iBAAR5O,CAA0BsM,eAA1BtM,EAA2C;QACzC0O,oBAAoB,CAAC,KAAD,CAApBA;QACAhB,WAAW;MAFb;IAHJ;IAQE1N,OAAO,EAAEA,OARX;IASE4F,SAAS,EAAE;MAAM,2BAAoB,CAAC,KAAD,CAApB;IAA2B;EAT9C,EA/HN3E,CADF;AA/CK;;AAgMP,IAAM8M,iBAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;EAAW,OAAC;IAClCZ,GAAG,EAAEa,MAAM,CAACD,KAAD;EADuB,CAAD;AAAnC;;AAIA,mBAAeE,mBAAmB,CAACI,UAAD,EAAaP,iBAAb,CAAlC;;SC1MwBc,mBAAmBlJ;MACzCC,SAAS;MACT5F,OAAO;;EAED,SAAwBO,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAACoE,OAAO,QAAR;EAAA,IAAUmB,UAAU,QAApB;;EACA,SAAgCvF,QAAQ,CAAC,IAAD,CAAxC;EAAA,IAACwF,WAAW,QAAZ;EAAA,IAAcC,cAAc,QAA5B;;EAENC,SAAS,CAAC;IACR,IAAM6I,mBAAmB,GAAG9O,OAAO,CAAC+O,yBAAR/O,EAA5B;IACA8O,mBAAmB,CAACzI,IAApByI,CAAyB,UAACE,KAAD,EAAQ1I,KAAR;MACvB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACkJ,KAAD,CAAVlJ;IAJF;IAMAE,cAAc,CAAC8I,mBAAD,CAAd9I;EARO,GASN,EATM,CAATC;EAUA,oBACEhF,uDACEA,6BAACC,KAADD;IACEsF,UAAU,MADZ;IAEExG,QAAQ,EAAE;MAAM,gBAAS,EAAT;IAFlB;IAGED,QAAQ,EAAE0G,IAHZ;IAIErF,SAAS,EAAC;EAJZ,gBAMEF;IACEY,SAAS,EAAC,qCADZZ;IAEEwF,QAAQ,EAAE,kBAAC1E,CAAD;MACA,WAAO,GAAKgE,WAAW,QAAvB;MACR,IAAMjD,MAAM,GAAGf,CAAC,CAACe,MAAjB;MACA,IAAM4D,SAAS,GACb5D,MAAM,CAAC6D,YAAP7D,GAAsBA,MAAM,CAAC8D,SAA7B9D,KAA2CA,MAAM,CAAC+D,YADpD;;MAIA,IAAIC,OAAO,IAAIJ,SAAf,EAA0B;QACxBX,WAAW,CAACM,IAAZN,CAAiB,UAACgB,CAAD,EAAIT,KAAJ;UACf,IAAIA,KAAJ,EAAW;YACT;UACD;;UACDR,UAAU,iCACLnB,OADK,EACLA,IADK,GAELoC,CAFK,EAELA,IAFK,EAAVjB;QAJF;MASD;IACF;EApBH7E,GAsBI0D,OAAO,CAACC,GAARD,CAAY,UAACE,MAAD;IAAY,oBACxB5D,6BAAC+F,cAAD/F;MACEgG,IAAI,EAAEpC,MADR;MAEEqC,GAAG,EAAErC,MAAM,CAAC5E,MAFd;MAGEkH,MAAM,EAAE,gBAACxB,EAAD;YAAGyB,SAAS;YAAEC,SAAS;QAAO,oBACpCpG,6BAACsG,WAADtG;UACEuG,WAAW,EAAE,qBAACC,cAAD;YAAoB,oBAC/BxG,6BAACyG,UAADzG;cACEY,SAAS,EAAC,mCADZ;cAEEQ,KAAK,EAAC,MAFR;cAGED,MAAM,EAAC,MAHT;cAIEa,OAAO,EAAEwE;YAJX,gBAMExG,6BAAC0G,IAAD1G;cACEoB,KAAK,EAAC,MADR;cAEED,MAAM,EAAC,MAFT;cAGEV,IAAI,EAAEkG,SAAS,CAACC,IAHlB;cAIEC,SAAS,EAAEC,UAAU,CAACC;YAJxB,EANF/G,CAD+B;UADnC;UAgBEgH,SAAS,EAAE,mBAACC,aAAD;YAAmB,oBAC5BjH,6BAACkH,SAADlH;cACEmH,gBAAgB,EAAEhB,SADpB;cAEEA,SAAS,EAAEC,SAFb;cAAA;cAGEa,aAAa,EAAEA,aAHjB;cAIEG,QAAQ;YAJV,gBAMEpH,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACPjD,OAAO,CAACiP,SAARjP,CAAkB6E,MAAlB7E,EAA0B;kBACxBkI,aAAa;kBACbpC,UAAU,CAACnB,OAAO,CAACqE,MAARrE,CAAe;oBACxB,OAAQ8D,CAAC,CAACxI,MAAFwI,KAAa5D,MAAM,CAAC5E,MAA5B;kBADS,EAAD,CAAV6F;gBAFF;cAMD;YARH,WANF7E,CAD4B;UAoB7B;QApCH,EADoC;MAuCrC;IA1CH,EADwB;EAAxB,EAtBJA,CANFA,CADFA,CADF;AAiFD;;AC1FM,IAAMiO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACvJ,EAAD;MAAG3F,OAAO;;EAClC,SAAwBO,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAACoE,OAAO,QAAR;EAAA,IAAUmB,UAAU,QAApB;;EACA,SAAwBvF,QAAQ,CAAC,KAAD,CAAhC;EAAA,IAACuG,OAAO,QAAR;EAAA,IAAU2G,UAAU,QAApB;;EACA,SAA4BlN,QAAQ,CAAC,KAAD,CAApC;EAAA,IAACiE,SAAS,QAAV;EAAA,IAAYC,YAAY,QAAxB;;EAENwB,SAAS,CAAC;IACR,IAAI,CAACjG,OAAL,EAAc;MACZ8F,UAAU,CAAC,EAAD,CAAVA;MACA;IACD;;IAED,IAAMgJ,mBAAmB,GAAG9O,OAAO,CAAC+O,yBAAR/O,EAA5B;IACA8O,mBAAmB,CAACzI,IAApByI,CAAyB,UAACE,KAAD,EAAQ1I,KAAR;MACvB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACkJ,KAAD,CAAVlJ;MACA2H,UAAU,CAACqB,mBAAmB,CAAChI,OAArB,CAAV2G;IALF;EAPO,GAcN,CAACzN,OAAD,CAdM,CAATiG;EAgBA,IAAMkJ,WAAW,GAAGxB,WAAW,CAAC;IAC9B,IAAI,CAAC3N,OAAL,EAAc;MACZ8F,UAAU,CAAC,EAAD,CAAVA;MACA;IACD;;IAED,IAAMgJ,mBAAmB,GAAG9O,OAAO,CAAC+O,yBAAR/O,EAA5B;IACA8O,mBAAmB,CAACzI,IAApByI,CAAyB,UAASE,KAAT,EAAgB1I,KAAhB;MACvB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACkJ,KAAD,CAAVlJ;MACA2H,UAAU,CAACqB,mBAAmB,CAAChI,OAArB,CAAV2G;IALF;EAP6B,GAc5B,CAACzN,OAAD,CAd4B,CAA/B;EAeA,oBACEiB,4DAEI0D,OAAO,CAACC,GAARD,CAAY,UAACE,MAAD;IAAY,oBACtB5D,6BAAC+F,YAAD/F;MACEiG,GAAG,EAAErC,MAAM,CAAC5E,MADd;MAEEgH,IAAI,EAAEpC,MAFR;MAGEsC,MAAM,EAAE,gBAACxB,EAAD;YAAG0B,SAAS;YAAED,SAAS;QAC7B,oBACEnG,6BAACsG,WAADtG;UACEuG,WAAW,EAAE,qBAACC,cAAD;YAAoB,oBAC/BxG,6BAACyG,UAADzG;cACEY,SAAS,EAAC,mCADZ;cAEEQ,KAAK,EAAC,MAFR;cAGED,MAAM,EAAC,MAHT;cAIEa,OAAO,EAAEwE;YAJX,gBAMExG,6BAAC0G,IAAD1G;cACEoB,KAAK,EAAC,MADR;cAEED,MAAM,EAAC,MAFT;cAGEV,IAAI,EAAEkG,SAAS,CAACC,IAHlB;cAIEC,SAAS,EAAEC,UAAU,CAACC;YAJxB,EANF/G,CAD+B;UADnC;UAgBEgH,SAAS,EAAE,mBAACC,aAAD;YAAmB,oBAC5BjH,6BAACkH,SAADlH;cACEmH,gBAAgB,EAAEhB,SADpB;cAEEA,SAAS,EAAEC,SAFb;cAAA;cAGEa,aAAa,EAAEA,aAHjB;cAIEG,QAAQ;YAJV,gBAMEpH,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACPjD,OAAO,CAACiP,SAARjP,CAAkB6E,MAAlB7E,EAA0B;kBACxBkI,aAAa;kBACbiH,WAAW;gBAFb;cAID;YANH,WANFlO,CAD4B;UAkB7B;QAlCH,EADF;MAsCD;IA1CH,EADsB;EAAxB,EAFJA,EAkDI0D,OAAO,IAAIA,OAAO,CAAC4F,MAAR5F,KAAmB,CAA9BA,iBACE1D,6BAACmC,KAADnC;IACEY,SAAS,EAAC,uCADZ;IAEEH,IAAI,EAAE2B,eAAe,CAAC6B,UAFxB;IAGE3B,KAAK,EAAEC,WAAW,CAACmJ;EAHrB,2BAnDN1L,EA6DI6F,OAAO,iBACL7F;IACEY,SAAS,EAAC;EADZZ,gBAGEA,6BAACuJ,MAADvJ;IACES,IAAI,EAAE+I,WAAW,CAACC,SADpB;IAEEC,IAAI,EAAEC,WAAW,CAACC,KAFpB;IAGE5H,OAAO,EAAE;MACPwB,YAAY,CAAC,IAAD,CAAZA;IACD;EALH,wBAHFxD,CA9DNA,EA8EIuD,SAAS,iBACPvD,6BAAC4N,kBAAD5N;IACEjB,OAAO,EAAEA,OADX;IAEE4F,SAAS,EAAE;MACTnB,YAAY,CAAC,KAAD,CAAZA;MACA0K,WAAW;IACZ;EALH,EA/ENlO,CADF;AApCK;;AAiIP,IAAM8M,iBAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;EAAW,OAAC;IAClCZ,GAAG,EAAEa,MAAM,CAACD,KAAD;EADuB,CAAD;AAAnC;;AAIA,yBAAeE,mBAAmB,CAACgB,gBAAD,EAAmBnB,iBAAnB,CAAlC;;SC5IwBqB,kBAAkBzJ;MACxCC,SAAS;MACT5F,OAAO;MACP6F,WAAW;;EAEL,SAAwBtF,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAACoE,OAAO,QAAR;EAAA,IAAUmB,UAAU,QAApB;;EACA,SAAgCvF,QAAQ,CAAC,IAAD,CAAxC;EAAA,IAACwF,WAAW,QAAZ;EAAA,IAAcC,cAAc,QAA5B;;EAENC,SAAS,CAAC;IACR,IAAM0I,mBAAmB,GAAG3O,OAAO,CAACmG,qBAARnG,EAA5B;IACA2O,mBAAmB,CAACvI,KAApBuI,GAA4B,EAA5BA;IACAA,mBAAmB,CAACU,iBAApBV,GAAwC,OAAxCA;IACAA,mBAAmB,CAACtI,IAApBsI,CAAyB,UAAChK,OAAD,EAAU2B,KAAV;MACvB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACnB,OAAD,CAAVmB;IAJF;IAMAE,cAAc,CAAC2I,mBAAD,CAAd3I;EAVO,GAWN,EAXM,CAATC;EAYA,oBACEhF,uDACEA,6BAACC,KAADD;IACEsF,UAAU,MADZ;IAEExG,QAAQ,EAAE;MAAM,gBAAS,EAAT;IAFlB;IAGED,QAAQ,EAAE0G,IAHZ;IAIErF,SAAS,EAAC;EAJZ,gBAMEF;IACEY,SAAS,EAAC,qCADZZ;IAEEwF,QAAQ,EAAE,kBAAC1E,CAAD;MACA,WAAO,GAAKgE,WAAW,QAAvB;MACR,IAAMjD,MAAM,GAAGf,CAAC,CAACe,MAAjB;MACA,IAAM4D,SAAS,GACb5D,MAAM,CAAC6D,YAAP7D,GAAsBA,MAAM,CAAC8D,SAA7B9D,KAA2CA,MAAM,CAAC+D,YADpD;;MAIA,IAAIC,OAAO,IAAIJ,SAAf,EAA0B;QACxBX,WAAW,CAACM,IAAZN,CAAiB,UAACgB,CAAD,EAAIT,KAAJ;UACf,IAAIA,KAAJ,EAAW;YACT;UACD;;UACDR,UAAU,iCACLnB,OADK,EACLA,IADK,GAELoC,CAFK,EAELA,IAFK,EAAVjB;QAJF;MASD;IACF;EApBH7E,GAsBI0D,OAAO,CAACC,GAARD,CAAY,UAACE,MAAD;IAAY,oBACxB5D,6BAAC+F,cAAD/F;MACE4E,WAAW,EAAEA,WADf;MAEEoB,IAAI,EAAEpC,MAFR;MAGEqC,GAAG,EAAErC,MAAM,CAAC5E,MAHd;MAIEkH,MAAM,EAAE,gBAACxB,EAAD;YAAG0B,SAAS;YAAED,SAAS;QAAO,oBACpCnG,6BAACsG,WAADtG;UACEuG,WAAW,EAAE,qBAACC,cAAD;YAAoB,oBAC/BxG,6BAACyG,UAADzG;cACEY,SAAS,EAAC,mCADZ;cAEEQ,KAAK,EAAC,MAFR;cAGED,MAAM,EAAC,MAHT;cAIEa,OAAO,EAAEwE;YAJX,gBAMExG,6BAAC0G,IAAD1G;cACEoB,KAAK,EAAC,MADR;cAEED,MAAM,EAAC,MAFT;cAGEV,IAAI,EAAEkG,SAAS,CAACC,IAHlB;cAIEC,SAAS,EAAEC,UAAU,CAACC;YAJxB,EANF/G,CAD+B;UADnC;UAgBEgH,SAAS,EAAE,mBAACC,aAAD;YAAmB,oBAC5BjH,6BAACkH,SAADlH;cACEmH,gBAAgB,EAAEhB,SADpB;cAEEA,SAAS,EAAEC,SAFb;cAAA;cAGEa,aAAa,EAAEA,aAHjB;cAIEG,QAAQ;YAJV,gBAMEpH,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACPjD,OAAO,CAAC6I,UAAR7I,CAAmB6E,MAAnB7E,EAA2B;kBACzBkI,aAAa;kBACbpC,UAAU,CAACnB,OAAO,CAACqE,MAARrE,CAAe;oBACxB,OAAQ8D,CAAC,CAACxI,MAAFwI,KAAa5D,MAAM,CAAC5E,MAA5B;kBADS,EAAD,CAAV6F;gBAFF;cAMD;YARH,YANF7E,CAD4B;UAoB7B;QApCH,EADoC;MAuCrC;IA3CH,EADwB;EAAxB,EAtBJA,CANFA,CADFA,CADF;AAiFD;;AC/FM,IAAMqO,eAAe,GAAG,SAAlBA,eAAkB,CAAC3J,EAAD;MAAGyH,GAAG;MAAEpN,OAAO;;EACtC,SAAwBO,QAAQ,CAAC,EAAD,CAAhC;EAAA,IAACoE,OAAO,QAAR;EAAA,IAAUmB,UAAU,QAApB;;EACA,SAAwBvF,QAAQ,CAAC,KAAD,CAAhC;EAAA,IAACuG,OAAO,QAAR;EAAA,IAAU2G,UAAU,QAApB;;EACA,SAA4BlN,QAAQ,CAAC,KAAD,CAApC;EAAA,IAACiE,SAAS,QAAV;EAAA,IAAYC,YAAY,QAAxB;;EAENwB,SAAS,CAAC;IACR,IAAI,CAACjG,OAAL,EAAc;MACZ8F,UAAU,CAAC,EAAD,CAAVA;MACA;IACD;;IAED,IAAM6I,mBAAmB,GAAG3O,OAAO,CAACmG,qBAARnG,EAA5B;IACA2O,mBAAmB,CAACvI,KAApBuI,GAA4B,EAA5BA;IACAA,mBAAmB,CAACU,iBAApBV,GAAwC,OAAxCA;IACAA,mBAAmB,CAACtI,IAApBsI,CAAyB,UAAChK,OAAD,EAAU2B,KAAV;MACvB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACnB,OAAD,CAAVmB;MACA2H,UAAU,CAACkB,mBAAmB,CAAC7H,OAArB,CAAV2G;IALF;EATO,GAgBN,CAACzN,OAAD,CAhBM,CAATiG;EAkBA,IAAMkJ,WAAW,GAAGxB,WAAW,CAAC;IAC9B,IAAI,CAAC3N,OAAL,EAAc;MACZ8F,UAAU,CAAC,EAAD,CAAVA;MACA;IACD;;IAED,IAAM6I,mBAAmB,GAAG3O,OAAO,CAACmG,qBAARnG,EAA5B;IACA2O,mBAAmB,CAACvI,KAApBuI,GAA4B,EAA5BA;IACAA,mBAAmB,CAACU,iBAApBV,GAAwC,OAAxCA;IACAA,mBAAmB,CAACtI,IAApBsI,CAAyB,UAAChK,OAAD,EAAU2B,KAAV;MACvB,IAAIA,KAAJ,EAAW;QACT;MACD;;MACDR,UAAU,CAACnB,OAAD,CAAVmB;MACA2H,UAAU,CAACkB,mBAAmB,CAAC7H,OAArB,CAAV2G;IALF;EAT6B,GAgB5B,CAACzN,OAAD,CAhB4B,CAA/B;EAiBA,oBACEiB,4DAEI0D,OAAO,CAACC,GAARD,CAAY,UAACE,MAAD;IAAY,oBACtB5D,6BAAC+F,YAAD/F;MACEiG,GAAG,EAAErC,MAAM,CAAC5E,MADd;MAEEgH,IAAI,EAAEpC,MAFR;MAGEgB,WAAW,EAAEuH,GAAG,CAACvH,WAAJuH,CAAgBnN,MAH/B;MAIEkH,MAAM,EAAE,gBAACxB,EAAD;YAAG0B,SAAS;YAAED,SAAS;QAC7B,oBACEnG,6BAACsG,WAADtG;UACEuG,WAAW,EAAE,qBAACC,cAAD;YAAoB,oBAC/BxG,6BAACyG,UAADzG;cACEY,SAAS,EAAC,mCADZ;cAEEQ,KAAK,EAAC,MAFR;cAGED,MAAM,EAAC,MAHT;cAIEa,OAAO,EAAEwE;YAJX,gBAMExG,6BAAC0G,IAAD1G;cACEoB,KAAK,EAAC,MADR;cAEED,MAAM,EAAC,MAFT;cAGEV,IAAI,EAAEkG,SAAS,CAACC,IAHlB;cAIEC,SAAS,EAAEC,UAAU,CAACC;YAJxB,EANF/G,CAD+B;UADnC;UAgBEgH,SAAS,EAAE,mBAACC,aAAD;YAAmB,oBAC5BjH,6BAACkH,SAADlH;cACEiH,aAAa,EAAEA,aADjB;cAEEG,QAAQ,MAFV;cAGED,gBAAgB,EAAEhB,SAHpB;cAIEA,SAAS,EAAEC,SAJb;;YAAA,gBAMEpG,6BAACqH,QAADrH;cACEgC,OAAO,EAAE;gBACPjD,OAAO,CAAC6I,UAAR7I,CAAmB6E,MAAnB7E,EAA2B;kBACzBmP,WAAW;kBACXjH,aAAa;gBAFf;cAID;YANH,YANFjH,CAD4B;UAkB7B;QAlCH,EADF;MAsCD;IA3CH,EADsB;EAAxB,EAFJA,EAoDI0D,OAAO,IAAIA,OAAO,CAAC4F,MAAR5F,KAAmB,CAA9BA,iBACE1D,6BAACmC,KAADnC;IACEY,SAAS,EAAC,uCADZ;IAEEH,IAAI,EAAE2B,eAAe,CAAC6B,UAFxB;IAGE3B,KAAK,EAAEC,WAAW,CAACmJ;EAHrB,0BArDN1L,EA+DI6F,OAAO,iBACL7F;IACEY,SAAS,EAAC;EADZZ,gBAGEA,6BAACuJ,MAADvJ;IACES,IAAI,EAAE+I,WAAW,CAACC,SADpB;IAEEC,IAAI,EAAEC,WAAW,CAACC,KAFpB;IAGE5H,OAAO,EAAE;MACPwB,YAAY,CAAC,IAAD,CAAZA;IACD;EALH,uBAHFxD,CAhENA,EAgFIuD,SAAS,iBACPvD,6BAACmO,iBAADnO;IACE4E,WAAW,EAAEuH,GAAG,CAACvH,WAAJuH,CAAgBnN,MAD/B;IAEED,OAAO,EAAEA,OAFX;IAGE4F,SAAS,EAAE;MACTnB,YAAY,CAAC,KAAD,CAAZA;MACA0K,WAAW;IACZ;EANH,EAjFNlO,CADF;AAxCK;;AAwIP,IAAM8M,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;EAAW,OAAC;IAClCZ,GAAG,EAAEa,MAAM,CAACD,KAAD;EADuB,CAAD;AAAnC;;AAIA,wBAAeE,mBAAmB,CAACoB,eAAD,EAAkBvB,eAAlB,CAAlC;;AChJA,IAAMwB,YAAU,GAAG,SAAbA,UAAa,CAACC,GAAD;EACjB,OAAOC,IAAI,CAACC,GAALD,CAASD,GAATC,IAAgB,GAAhBA,GACA,CAACA,IAAI,CAACC,GAALD,CAASD,GAATC,IAAc,IAAf,EAAqBE,OAArB,CAA6B,CAA7B,OADAF,GAEHD,GAFJ;AADF;;SAYwBI,YAAYjK;MAClCoE,gBAAgB;MAChB/J,OAAO;MACPC,MAAM;;EAEA,SAAsBM,QAAQ,CAAC,KAAD,CAA9B;EAAA,IAACsP,MAAM,QAAP;EAAA,IAASC,SAAS,QAAlB,CAL4BnK,CAK5B;EAGN;EACA;;;EACAM,SAAS,CAAC;IACR6J,SAAS,CAAC9P,OAAO,CAAC+P,QAAT,CAATD;EADO,GAEN,CAAC9P,OAAD,CAFM,CAATiG;EAGQ,aAAS,GAAKrF,UAAU,CAACC,mBAAD,CAAVD,UAAd;EACR,oBACEK,6BAAC+O,cAAD/O;IAAgBY,SAAS,EAAC;EAA1B,gBACEZ,6BAACgP,SAADhP;IACEY,SAAS,EAAC,2CADZ;IAEEqL,EAAE,EAAC,WAFL;IAGEgD,WAAW,EAAE;MAAM,oBACjBjP,yEACEA,6BAAC0G,IAAD1G;QACES,IAAI,EAAEkG,SAAS,CAACuI,QADlB;QAEErI,SAAS,EAAEC,UAAU,CAACnG,OAFxB;QAGES,KAAK,EAAE,EAHT;QAIED,MAAM,EAAE,EAJV;QAKEP,SAAS,EAAC;MALZ,EADFZ,eAQEA,6BAACmC,KAADnC;QACES,IAAI,EAAE2B,eAAe,CAACsI,UADxB;QAEEpI,KAAK,EAAEC,WAAW,CAAC2B;MAFrB,GAIGrE,SAAS,CAACsP,iCAJbnP,CARFA,CADiB;IAHrB;IAoBEoP,aAAa,EAAE;MAAM,oBACnBpP,yEACEA,6BAACkM,cAADlM;QAAcjB,OAAO,EAAEA;MAAvB,EADFiB,CADmB;IAIpB;EAxBH,EADFA,eA2BEA,6BAACgP,SAADhP;IACEY,SAAS,EAAC,yCADZ;IAEEqL,EAAE,EAAC,SAFL;IAGEgD,WAAW,EAAE;MAAM,oBACjBjP,yEACEA,6BAAC0G,IAAD1G;QACES,IAAI,EAAEkG,SAAS,CAAC0I,OADlB;QAEExI,SAAS,EAAEC,UAAU,CAACnG,OAFxB;QAGES,KAAK,EAAE,EAHT;QAIED,MAAM,EAAE,EAJV;QAKEP,SAAS,EAAC;MALZ,EADFZ,eAQEA,6BAACmC,KAADnC;QACES,IAAI,EAAE2B,eAAe,CAACsI,UADxB;QAEEpI,KAAK,EAAEC,WAAW,CAAC2B;MAFrB,GAIGrE,SAAS,CAACyP,+BAJbtP,CARFA,eAcEA,6BAACuP,KAADvP;QAAOwP,KAAK,EAAElB,YAAU,CAACvP,OAAO,CAAC0Q,WAAT;MAAxB,EAdFzP,CADiB;IAHrB;IAqBEoP,aAAa,EAAE;MAAM,oBACnBpP,yEACEA,6BAACqN,YAADrN;QACE8I,gBAAgB,EAAEA,gBADpB;QAEE/J,OAAO,EAAEA,OAFX;QAGEC,MAAM,EAAEA;MAHV,EADFgB,CADmB;IAQpB;EA7BH,EA3BFA;EA4DI,CAACjB,OAAO,CAAC2I,WAAT,iBACE1H,6BAACgP,SAADhP;IACEiM,EAAE,EAAC,cADL;IAEErL,SAAS,EAAC,+CAFZ;IAGEqO,WAAW,EAAE;MAAM,oBACjBjP,yEACEA,6BAAC0G,IAAD1G;QACES,IAAI,EAAEkG,SAAS,CAAC+I,IADlB;QAEE7I,SAAS,EAAEC,UAAU,CAACnG,OAFxB;QAGES,KAAK,EAAE,EAHT;QAIED,MAAM,EAAE,EAJV;QAKEP,SAAS,EAAC;MALZ,EADFZ,eAQEA,6BAACmC,KAADnC;QACES,IAAI,EAAE2B,eAAe,CAACsI,UADxB;QAEEpI,KAAK,EAAEC,WAAW,CAAC2B;MAFrB,GAIGrE,SAAS,CAAC8P,qCAJb3P,CARFA,CADiB;IAHrB;IAoBEoP,aAAa,EAAE;MAAM,oBACnBpP,yEACEA,6BAACqO,iBAADrO;QAAiBjB,OAAO,EAAEA;MAA1B,EADFiB,CADmB;IAIpB;EAxBH,EA7DNA,eAyFEA,6BAACgP,SAADhP;IACEY,SAAS,EAAC,gDADZ;IAEEqL,EAAE,EAAC,eAFL;IAGEgD,WAAW,EAAE;MAAM,oBACjBjP,yEACEA,6BAAC0G,IAAD1G;QACES,IAAI,EAAEkG,SAAS,CAACiJ,GADlB;QAEE/I,SAAS,EAAEC,UAAU,CAACnG,OAFxB;QAGES,KAAK,EAAE,EAHT;QAIED,MAAM,EAAE,EAJV;QAKEP,SAAS,EAAC;MALZ,EADFZ,eAQEA,6BAACmC,KAADnC;QACES,IAAI,EAAE2B,eAAe,CAACsI,UADxB;QAEEpI,KAAK,EAAEC,WAAW,CAAC2B;MAFrB,GAIGrE,SAAS,CAACgQ,sCAJb7P,CARFA,CADiB;IAHrB;IAoBEoP,aAAa,EAAE;MAAM,oBACnBpP,yEACEA,6BAACiO,kBAADjO;QAAkBjB,OAAO,EAAEA;MAA3B,EADFiB,CADmB;IAIpB;EAxBH,EAzFFA;EAqHI,CAACjB,OAAO,CAAC2I,WAAT,iBACE1H;IAAKY,SAAS,EAAC;EAAfZ,gBACEA,6BAAC0G,IAAD1G;IACES,IAAI,EAAEkG,SAAS,CAACmJ,MADlB;IAEEjJ,SAAS,EAAEC,UAAU,CAACnG,OAFxB;IAGES,KAAK,EAAE,EAHT;IAIED,MAAM,EAAE,EAJV;IAKEP,SAAS,EAAC;EALZ,EADFZ,eAQEA,6BAACmC,KAADnC;IACES,IAAI,EAAE2B,eAAe,CAACsI,UADxB;IAEEpI,KAAK,EAAEC,WAAW,CAAC2B;EAFrB,GAIGrE,SAAS,CAACkQ,+BAJb/P,CARFA,eAcEA;IAAKY,SAAS,EAAC;EAAfZ,GAEI4O,MAAM,gBAEF5O,6BAAC0G,IAAD1G;IACEgC,OAAO,EAAE;MACPjD,OAAO,CAACiR,QAARjR,CAAiB;QACf8P,SAAS,CAAC,KAAD,CAATA;MADF;IAFJ;IAMEpO,IAAI,EAAEkG,SAAS,CAACsJ,SANlB;IAOEpJ,SAAS,EAAEC,UAAU,CAACnG,OAPxB;IAQES,KAAK,EAAE,EART;IASED,MAAM,EAAE;EATV,EAFE,gBAeFnB,6BAAC0G,IAAD1G;IACEgC,OAAO,EAAE;MACPjD,OAAO,CAACmR,MAARnR,CAAe;QACb8P,SAAS,CAAC,IAAD,CAATA;MADF;IAFJ;IAMEpO,IAAI,EAAEkG,SAAS,CAACwJ,UANlB;IAOEtJ,SAAS,EAAEC,UAAU,CAACnG,OAPxB;IAQES,KAAK,EAAE,EART;IASED,MAAM,EAAE;EATV,EAjBRnB,CAdFA,CAtHNA,CADF;AAyKD;;ACrMD,IAAMoQ,oBAAoB,GAAG,2BAA7B;;AAEA,IAAM9B,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD;EAAA,OACjBC,IAAI,CAACC,GAALD,CAASD,GAATC,IAAgB,GAAhBA,aACO,CAACA,IAAI,CAACC,GAALD,CAASD,GAATC,IAAgB,IAAjB,EAAuBE,OAAvB,CAA+B,CAA/B,CADP,SAEIH,GAHa;AAAnB;;AAMA,SAAS8B,eAAT,CAAyBzR,KAAzB,EAAgC;EAC9B,IACEgC,SADF,GASIhC,KATJ,CACEgC,SADF;EAAA,IAEE0P,YAFF,GASI1R,KATJ,CAEE0R,YAFF;EAAA,IAGEC,UAHF,GASI3R,KATJ,CAGE2R,UAHF;EAAA,IAIEpI,kBAJF,GASIvJ,KATJ,CAIEuJ,kBAJF;EAAA,IAKEC,iBALF,GASIxJ,KATJ,CAKEwJ,iBALF;EAAA,IAMEoI,kBANF,GASI5R,KATJ,CAME4R,iBANF;EAAA,IAOEC,oBAPF,GASI7R,KATJ,CAOE6R,oBAPF;EAAA,IAQEC,qBARF,GASI9R,KATJ,CAQE8R,qBARF;EAWA,IACYC,QADZ,GAUI/R,KAVJ,CACEgS,MASEhS,CATQ+R,QADZ;EAAA,oBAUI/R,KAVJ,CAEEiS,MAFF;EAAA,IAGIzD,aAHJ,iBAGIA,aAHJ;EAAA,IAIInO,KAJJ,iBAIIA,KAJJ;EAAA,IAKID,MALJ,iBAKIA,MALJ;EAAA,IAMI8R,MANJ,iBAMIA,MANJ;EAAA,IAOIC,QAPJ,iBAOIA,QAPJ;EAAA,qBAUInS,KAVJ,CASEoS,OATF;EAAA,IASEA,OATF,+BASY,EATZ;EAYA,qBAAwBpS,KAAxB,CAAQiS,MAAR;EAAA,IAAQA,MAAR,+BAAiB,EAAjB;EACA,IAAMI,6BAA6B,GAAG9I,kBAAkB,IAAI0I,MAAM,CAAC1I,kBAAnE;EACA,IAAM+I,wBAAwB,GAAG9I,iBAAiB,IAAIyI,MAAM,CAACzI,iBAA7D;EAEA,IAAM+I,kCAAkC,GAAGH,OAAO,CAACI,wBAAnD;;EACA,kBAAsBzR,UAAU,CAACC,mBAAD,CAAhC;EAAA,IAAQC,SAAR,eAAQA,SAAR;;EAEA,IAAQsM,GAAR,GAA6BwE,QAA7B,CAAQxE,GAAR;EAAA,IAAakF,WAAb,GAA6BV,QAA7B,CAAaU,WAAb,CA/B8B;;EAkC9B,gBAA8C/R,QAAQ,CAACgS,MAAM,EAAP,CAAtD;EAAA;EAAA,IAAOC,eAAP;EAAA,IAAwBC,kBAAxB;;EACA,iBAA8BlS,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOP,OAAP;EAAA,IAAgB0S,UAAhB;;EACA,iBAA4CnS,QAAQ,CAAC,KAAD,CAApD;EAAA;EAAA,IAAOoS,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,iBAA0CrS,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAOsS,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAA0DvS,QAAQ,CAAC,KAAD,CAAlE;EAAA;EAAA,IAAOwS,qBAAP;EAAA,IAA8BC,wBAA9B;;EAEA,IAAMC,mBAAmB,GAAG,CAC1B1H,KAAK,CAACC,OAAND,CAAc1J,SAAd0J,KACK8F,oBADL,4BAC8BxP,SAD9B,KAEI,CAACwP,oBAAD,EAAuBxP,SAAvB,CAHsB,EAI1BmD,IAJ0B,CAIrB,GAJqB,CAA5B;EAMAiB,SAAS,CAAC,YAAM;IACd8L,MAAM,CAACmB,IAAPnB,CAAY,6BAAZA;;IACA,IAAI,CAACP,UAAD,IAAe,CAACc,WAAhB,IAA+B,CAAClF,GAApC,EAAyC;MACvC2E,MAAM,CAACoB,OAAPpB,CAAe,oCAAfA,EAAqD,oCAArDA;MACAa,iBAAiB,CAAC,KAAD,CAAjBA;IAFF,OAGO;MACL,IAAI,CAACxF,GAAD,IAAQ,CAACA,GAAG,CAACgG,YAAjB,EAA+B;QAC7BrB,MAAM,CAACoB,OAAPpB,CAAe,kCAAfA;QACA;MACD;;MACD3E,GAAG,CAACgG,YAAJhG,CAAiBiG,UAAjBjG,CAA4BoE,UAA5BpE,EAAwC,UAACkG,YAAD,EAAkB;QACxD,IAAI,CAACA,YAAL,EAAmB;UACjBvB,MAAM,CAACoB,OAAPpB,CAAe,oCAAfA;UACAa,iBAAiB,CAAC,IAAD,CAAjBA;QAFF,OAGO;UACLb,MAAM,CAACmB,IAAPnB,CAAY,wCAAZA,EAAsDuB,YAAtDvB;UACAa,iBAAiB,CAAC,KAAD,CAAjBA;UACAF,UAAU,CAACY,YAAD,CAAVZ;QACD;MARH;IAUD;EApBM,GAqBN,CAAClB,UAAD,EAAac,WAAb,EAA0BE,eAA1B,CArBM,CAATvM;;EAuBA,IAAI,CAACjG,OAAD,IAAY2S,cAAhB,EAAgC;IAC9B,oBACE1R;MAAKY,SAAS,EAAEoR;IAAhBhS,gBACEA;MAAKY,SAAS,EAAC;IAAfZ,gBACEA,6BAACmC,KAADnC;MAAOS,IAAI,EAAE2B,eAAe,CAACkQ,GAA7B;MAAkChQ,KAAK,EAAEC,WAAW,CAAC2B;IAArD,GACGrE,SAAS,CAAC0S,8BADbvS,CADFA,eAIEA,6BAAC0G,IAAD1G;MACEY,SAAS,EAAC,uCADZ;MAEEH,IAAI,EAAEkG,SAAS,CAAC6L,KAFlB;MAGErR,MAAM,EAAC,MAHT;MAIEC,KAAK,EAAC,MAJR;MAKEY,OAAO,EAAE,mBAAM;QACb8O,MAAM,CAACmB,IAAPnB,CAAY,8BAAZA;QACAR,YAAY;MACb;IARH,EAJFtQ,CADFA,eAgBEA,uDACEA,6BAACyS,WAADzS;MAAaS,IAAI,EAAEiS,gBAAgB,CAACC;IAApC,EADF3S,CAhBFA,CADF;EAsBD;;EAED,oBACEA,6BAAC4S,mBAAD5S;IACEY,SAAS,EAAEoR,mBADb;IAEE7J,kBAAkB,EAAE8I,6BAFtB;IAGE7I,iBAAiB,EAAE8I;EAHrB,gBAKElR;IAAKY,SAAS,EAAC;EAAfZ,gBACEA,6BAACmC,KAADnC;IAAOS,IAAI,EAAE2B,eAAe,CAACkQ,GAA7B;IAAkChQ,KAAK,EAAEC,WAAW,CAAC2B;EAArD,GACGrE,SAAS,CAAC0S,8BADbvS,CADFA,eAIEA;IAAKY,SAAS,EAAC;EAAfZ,gBACEA,6BAACyG,UAADzG;IACEoB,KAAK,EAAC,MADR;IAEED,MAAM,EAAC,MAFT;IAGEa,OAAO,EAAE,mBAAM;MACb8O,MAAM,CAACmB,IAAPnB,CAAY,8BAAZA;MACAR,YAAY;IACb;EANH,gBAQEtQ,6BAAC0G,IAAD1G;IACEY,SAAS,EAAC,uCADZ;IAEEH,IAAI,EAAEkG,SAAS,CAAC6L,KAFlB;IAGErR,MAAM,EAAC,MAHT;IAIEC,KAAK,EAAC;EAJR,EARFpB,CADFA,CAJFA,CALFA,eA2BEA;IAAKY,SAAS,EAAC;EAAfZ,GAEIyQ,oBAAoB,GAChBA,oBAAoB,CAAC;IAAE1R,OAAO,EAAPA;EAAF,CAAD,CADJ,gBAGhBiB,6BAACoD,cAADpD;IACEqD,QAAQ,EAAE,CAAC0N,QADb;IAEEhS,OAAO,EAAEA,OAFX;IAGEC,MAAM,EAAEA,MAHV;IAIEC,KAAK,EAAEA,KAJT;IAKEqE,mBAAmB,EAAE,6BAAC/D,UAAD,EAAasT,YAAb,EAA8B;MACjD/B,MAAM,CAACmB,IAAPnB,CAAY,oDAAZA;MACA,IAAM9H,UAAU,GAAGmD,GAAG,CAAC2G,qBAAJ3G,EAAnB;;MACA,IAAIuE,qBAAJ,EAA2B;QACzB,IAAMqC,MAAM,GAAGrC,qBAAqB,CAACmC,YAAD,EAAetT,UAAf,EAA2BR,OAAO,CAACiU,IAAnC,CAApC,CADyB;;QAGzBjU,OAAO,CAACkU,aAARlU,CAAsBgU,MAAtBhU,EAA8B,UAACoM,QAAD,EAAW9F,KAAX,EAAqB;UACjD,IAAIgN,YAAY,GAAGlH,QAAnB;;UACA,IAAInC,UAAJ,EAAgB;YACdqJ,YAAY,GAAGhN,KAAfgN;UACD;;UAED7B,kBAAiB,CAAC6B,YAAD,CAAjB7B;;UACAgB,kBAAkB,CAACF,MAAM,EAAP,CAAlBE;QAPF;QASA;MACD;;MACDzS,OAAO,CAACkU,aAARlU,CACE8T,YADF9T,EAEEQ,UAFFR,EAGEA,OAAO,CAACiU,IAHVjU,EAIE,UAACoM,QAAD,EAAW9F,KAAX,EAAqB;QACnB,IAAIgN,YAAY,GAAGlH,QAAnB;;QACA,IAAInC,UAAJ,EAAgB;UACdqJ,YAAY,GAAGhN,KAAfgN;QACD;;QACDvB,MAAM,CAACmB,IAAPnB,CAAY,8CAAZA,EAA4DuB,YAA5DvB;;QACAN,kBAAiB,CAAC6B,YAAD,CAAjB7B;;QACAgB,kBAAkB,CAACF,MAAM,EAAP,CAAlBE;MAXJ;IAcD;EApCH,EALRxR,EA8CIjB,OAAO,CAACsH,MAARtH,KAAmB,UAAnBA,gBAEIiB,6BAACkT,WAADlT;IACEjB,OAAO,EAAEA,OADX;IAEEC,MAAM,EAAEA,MAFV;IAGEwR,iBAAiB,EAAE,2BAAC6B,YAAD,EAAkB;MACnC;MACA7B,kBAAiB,CAAC6B,YAAD,CAAjB7B;IALJ;IAOE1H,gBAAgB,EACd;MAAA,OAAQsE,aAAa,IAAI,OAAOA,aAAP,KAAyB,UAA1CA,GACJA,aAAa,EADTA,GAEJ+F,0BAA0B,CAAC;QAAEhH,GAAG,EAAHA,GAAF;QAAOgF,kCAAkC,EAAlCA;MAAP,CAAD,CAF9B;IAAA;EARJ,EAFJpS,gBAkBIiB,yEAEEA;IACEY,SAAS,EAAE,CACT,uCADS,EAET,oCAFS,EAGTmD,IAHS,CAGJ,GAHI,CADb/D;IAKEsH,IAAI,EAAC,QALPtH;IAME,gBAAc4R,aANhB5R;IAOEoT,SAAS,EAAE;MAAA,OAAMvB,gBAAgB,CAAC,CAACD,aAAF,CAAtB;IAPb;IAQE5P,OAAO,EAAE;MAAA,OAAM6P,gBAAgB,CAAC,CAACD,aAAF,CAAtB;IARX;IASEyB,QAAQ,EAAE;EATZrT,gBAWEA,6BAAC0G,IAAD1G;IACEY,SAAS,EAAC,4CADZ;IAEEH,IAAI,EAAEkG,SAAS,CAAC0I,OAFlB;IAGExI,SAAS,EAAEC,UAAU,CAACnG,OAHxB;IAIEQ,MAAM,EAAC,MAJT;IAKEC,KAAK,EAAC;EALR,EAXFpB,eAkBEA,6BAACmC,KAADnC;IACES,IAAI,EAAE2B,eAAe,CAACsI,UADxB;IAEEpI,KAAK,EAAEC,WAAW,CAAC2B;EAFrB,GAIGrE,SAAS,CAACyP,+BAJbtP,eAKEA,6BAACuP,KAADvP;IAAOwP,KAAK,EAAElB,UAAU,CAACvP,OAAO,CAAC0Q,WAAT;EAAxB,EALFzP,CAlBFA,eAyBEA,6BAAC0G,IAAD1G;IACEY,SAAS,EAAE,CACT,6CADS,EAET,gDAFS,EAGRgR,aAAa,GAAG,6CAAH,GAAmD,EAHxD,EAIT7N,IAJS,CAIJ,GAJI,CADb;IAMEtD,IAAI,EAAEkG,SAAS,CAAC2M,aANlB;IAOEnS,MAAM,EAAC,MAPT;IAQEC,KAAK,EAAC;EARR,EAzBFpB,CAFFA,EAuCI4R,aAAa,iBACX5R,6BAAC6I,gBAAD7I;IACE4E,WAAW,EAAE5F,MADf;IAEEqE,QAAQ,EAAE,CAAC0N,QAFb;IAAA;IAIEjI,gBAAgB,EACd;MAAA,OAAQsE,aAAa,IAAI,OAAOA,aAAP,KAAyB,UAA1CA,GACJA,aAAa,EADTA,GAEJ+F,0BAA0B,CAAC;QAAEhH,GAAG,EAAHA,GAAF;QAAOgF,kCAAkC,EAAlCA;MAAP,CAAD,CAF9B;IALJ;IAUEnI,UAAU,EACRmD,GAAG,IAAIA,GAAG,CAAC2G,qBAAX3G,IAAoCA,GAAG,CAAC2G,qBAAJ3G,EAXxC;IAaEpN,OAAO,EAAEA,OAbX;IAcE2E,OAAO,EAAE3E,OAAO,CAAC2E,OAdnB;IAeEqF,eAAe,EAAE,yBAACsC,eAAD,EAAqB;MACpCyF,MAAM,CAACmB,IAAPnB,CAAY,qCAAZA;MACA/R,OAAO,CAAC4O,iBAAR5O,CAA0BsM,eAA1BtM,EACGwU,IADHxU,CACQ,UAACyU,GAAD,EAAS;QACbhD,kBAAiB,CAACgD,GAAD,CAAjBhD;;QACAgB,kBAAkB,CAACF,MAAM,EAAP,CAAlBE;QACAV,MAAM,CAACmB,IAAPnB,CAAY,8CAAZA,EAA4D0C,GAA5D1C;MAJJ;IAMD;EAvBH,EAxCN9Q,CAhERA,eAuIEA;IACEY,SAAS,EAAE,CACT,uCADS,EAET,0CAFS,EAGT,CAACmQ,QAAD,GAAY,iDAAZ,GAAgE,EAHvD,EAIThN,IAJS,CAIJ,GAJI,CADb/D;IAMEsH,IAAI,EAAC,QANPtH;IAOEqD,QAAQ,MAPVrD;IAQEoT,SAAS,EAAE,qBAAM;MACf,IAAI,CAACrC,QAAL,EAAe;QAAE;MAAS;;MAC1BgB,wBAAwB,CAAC,IAAD,CAAxBA;IAVJ;IAYE/P,OAAO,EAAE,mBAAM;MACb,IAAI,CAAC+O,QAAL,EAAe;QAAE;MAAS;;MAC1BgB,wBAAwB,CAAC,IAAD,CAAxBA;IAdJ;IAgBEsB,QAAQ,EAAE;EAhBZrT,gBAkBEA,6BAAC0G,IAAD1G;IACEY,SAAS,EAAE,CACT,4CADS,EAET,8CAFS,EAGTmD,IAHS,CAGJ,GAHI,CADb;IAKEtD,IAAI,EAAEkG,SAAS,CAAC8M,KALlB;IAME5M,SAAS,EAAEC,UAAU,CAAC4M,KANxB;IAOEvS,MAAM,EAAC,MAPT;IAQEC,KAAK,EAAC;EARR,EAlBFpB,eA4BEA,6BAACmC,KAADnC;IACES,IAAI,EAAE2B,eAAe,CAACsI,UADxB;IAEEpI,KAAK,EAAEC,WAAW,CAAC2B;EAFrB,GAIGrE,SAAS,CAAC8T,qCAJb3T,CA5BFA,CAvIFA,EA2KI8R,qBAAqB,iBACnB9R,6BAAC4T,YAAD5T;IACE6T,YAAY,EAAE;MAAA,OAAM9B,wBAAwB,CAAC,KAAD,CAA9B;IADhB;IAEE+B,cAAc,EAAE,0BAAM;MACpBhD,MAAM,CAACmB,IAAPnB,CAAY,kCAAZA,EAAgD/R,OAAhD+R;MACA/R,OAAO,CAACgV,KAARhV,GACGwU,IADHxU,CACQ,YAAM;QACV+R,MAAM,CAACmB,IAAPnB,CAAY,8CAAZA,EAA4D/R,OAA5D+R;QACAR,YAAY;MAHhB;IAKD;EATH,EA5KNtQ,CA3BFA,CADF;AAwND;;AAEDqQ,eAAe,CAACvN,SAAhBuN,GAA4B;EAC1BzP,SAAS,EAAEmC,SAAS,CAACiR,SAAVjR,CAAoB,CAC7BA,SAAS,CAACI,MADmB,EAE7BJ,SAAS,CAACuB,OAAVvB,CAAkBA,SAAS,CAACI,MAA5BJ,CAF6B,CAApBA,CADe;EAK1BuN,YAAY,EAAEvN,SAAS,CAACC,IALE;EAM1BwN,iBAAiB,EAAEzN,SAAS,CAACC,IANH;EAO1B0N,qBAAqB,EAAE3N,SAAS,CAACC,IAPP;EAQ1ByN,oBAAoB,EAAE1N,SAAS,CAACiR,SAAVjR,CAAoB,CACxCA,SAAS,CAACkR,OAD8B,EAExClR,SAAS,CAACC,IAF8B,CAApBD,CARI;EAY1BoF,kBAAkB,EAAEpF,SAAS,CAACwB,IAZJ;EAa1B6D,iBAAiB,EAAErF,SAAS,CAACC,IAbH;EAc1BuN,UAAU,EAAExN,SAAS,CAACI,MAAVJ,CAAiBE,UAdH;EAe1B+N,OAAO,EAAEjO,SAAS,CAACG,KAAVH,CAAgB;IACvBqO,wBAAwB,EAAErO,SAAS,CAACG,KAAVH,CAAgB;MACxCoC,KAAK,EAAEpC,SAAS,CAACmR,MADuB;MAExCC,aAAa,EAAEpR,SAAS,CAACuB,OAAVvB,CAAkBA,SAAS,CAACI,MAA5BJ,CAFyB;MAGxCqR,iBAAiB,EAAErR,SAAS,CAACI,MAHW;MAIxCkR,oBAAoB,EAAEtR,SAAS,CAACuB,OAAVvB,CAAkBA,SAAS,CAACI,MAA5BJ;IAJkB,CAAhBA;EADH,CAAhBA,CAfiB;EAuB1B;EACA6N,MAAM,EAAE7N,SAAS,CAACG,KAAVH,CAAgB;IACtB4N,QAAQ,EAAE5N,SAAS,CAACG,KAAVH,CAAgB;MACxBoJ,GAAG,EAAEpJ,SAAS,CAACG,KAAVH,CAAgB;QACnB+P,qBAAqB,EAAE/P,SAAS,CAACC,IADd;QAEnBmP,YAAY,EAAEpP,SAAS,CAACiR,SAAVjR,CAAoB,CAChCA,SAAS,CAACG,KAAVH,CAAgB;UACdqP,UAAU,EAAErP,SAAS,CAACC;QADR,CAAhBD,CADgC,EAIhCA,SAAS,CAACC,IAJsB,CAApBD,CAFK;QAQnBuR,8BAA8B,EAAEvR,SAAS,CAACwR;MARvB,CAAhBxR,CADmB;MAWxBsO,WAAW,EAAEtO,SAAS,CAACwB;IAXC,CAAhBxB;EADY,CAAhBA,EAcLE,UAtCuB;EAuC1B4N,MAAM,EAAE9N,SAAS,CAACG,KAAVH,CAAgB;IACtB/D,MAAM,EAAE+D,SAAS,CAACI,MADI;IAEtBlE,KAAK,EAAE8D,SAAS,CAACI,MAFK;IAGtBiK,aAAa,EAAErK,SAAS,CAACC,IAHH;IAItB+N,QAAQ,EAAEhO,SAAS,CAACwB,IAJE;IAKtBuM,MAAM,EAAE/N,SAAS,CAACG,KAAVH,CAAgB;MACtBkP,IAAI,EAAElP,SAAS,CAACC,IADM;MAEtBqC,KAAK,EAAEtC,SAAS,CAACC,IAFK;MAGtBkP,OAAO,EAAEnP,SAAS,CAACC;IAHG,CAAhBD;EALc,CAAhBA,EAULE;AAjDuB,CAA5BoN;AAoDAA,eAAe,CAAC7L,YAAhB6L,GAA+B;EAC7BzP,SAAS,EAAE,EADkB;EAE7B8P,qBAAqB,EAAE,IAFM;EAG7BM,OAAO,EAAE,EAHoB;EAI7B7I,kBAAkB,EAAE,KAJS;EAK7BC,iBAAiB,EAAE,IALU;EAM7BqI,oBAAoB,EAAE,IANO;EAO7BH,YAAY,EAAE,wBAAM,CAPS;EAQ7BE,iBAAiB,EAAE,6BAAM;AARI,CAA/BH;AAWA,wBAAepD,mBAAmB,CAACoD,eAAD,CAAlC","names":["EditDetails","props","onSubmit","onCancel","channel","userId","theme","inputRef","useRef","formRef","hiddenInputRef","useState","currentImg","setCurrentImg","newFile","setNewFile","useContext","LocalizationContext","stringSet","title","name","React","Modal","titleText","MODAL__CHANNEL_INFORMATION__TITLE","submitText","BUTTON__SAVE","current","value","reportValidity","type","ButtonType","PRIMARY","className","ref","e","preventDefault","InputLabel","MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE","Avatar","height","width","src","ChannelAvatar","accept","style","display","onChange","URL","createObjectURL","target","files","TextButton","onClick","click","notUnderline","Label","LabelTypography","BUTTON_1","color","LabelColors","MODAL__CHANNEL_INFORMATION__UPLOAD","MODAL__CHANNEL_INFORMATION__CHANNEL_NAME","Input","required","placeHolder","MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER","propTypes","PropTypes","func","isRequired","shape","string","ChannelProfile","disabled","onChannelInfoChange","showModal","setShowModal","getChannelName","members","map","member","nickname","NO_NAME","join","NO_TITLE","SUBTITLE_2","ONBACKGROUND_1","ONBACKGROUND_2","CHANNEL_SETTING__PROFILE__EDIT","EditDetailsModal","arrayOf","bool","defaultProps","MembersModal","_a","hideModal","currentUser","setMembers","memberQuery","setMemberQuery","useEffect","memberListQuery","createMemberListQuery","limit","next","error","hideFooter","noop","onScroll","fetchMore","clientHeight","scrollTop","scrollHeight","hasNext","o","UserListItem","user","key","action","parentRef","actionRef","myRole","ContextMenu","menuTrigger","toggleDropdown","IconButton","Icon","IconTypes","MORE","fillColor","IconColors","CONTENT_INVERSE","menuItems","closeDropdown","MenuItems","parentContainRef","openLeft","MenuItem","role","addOperators","m","removeOperators","isBroadcast","isMuted","unmuteUser","muteUser","banUser","filter","SHOWN_MEMBER_MAX","avatarRef","UserProfileContext","disableUserProfile","renderUserProfile","profileUrl","paddingTop","paddingBottom","currentUserId","close","UserProfile","onSuccess","CHANNEL_SETTING__MEMBERS__YOU","MembersAccordion","userQueryCreator","onInviteMembers","swapParams","showMoreModal","setShowMoreModal","showAddUserModal","setShowAddUserModal","slice","length","Button","ButtonTypes","SECONDARY","size","ButtonSizes","SMALL","CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS","CHANNEL_SETTING__MEMBERS__INVITE_MEMBER","InviteMembers","MODAL__INVITE_MEMBER__TITLE","BUTTON__INVITE","closeModal","idsToFilter","COMPONENT_NAME","injectingClassNames","Array","isArray","__spreadArray","MutedAvatarOverlay","SUBTITLE_1","CAPTION_3","OperatorsModal","operators","setOperators","operatorQuery","setOperatorQuery","operatorListQuery","createOperatorListQuery","response","AddOperatorsModal","selectedMembers","setSelectedMembers","selectedCount","Object","keys","ONBACKGROUND_3","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","checkBox","checked","event","modifiedSelectedMembers","id","OperatorList","sdk","showMore","setShowMore","showAdd","setShowAdd","setHasNext","refershList","useCallback","operator","CHANNEL_SETTING__OPERATORS__TITLE_ALL","CHANNEL_SETTING__OPERATORS__TITLE_ADD","mapStoreToProps","store","getSdk","withSendbirdContext","userQuery","setUserQuery","userListQuery","MemberList","showAllMembers","setShowAllMembers","showInviteMembers","setShowInviteMembers","memberUserListQuery","inviteWithUserIds","BannedMembersModal","bannedUserListQuery","createBannedUserListQuery","users","unbanUser","BannedMemberList","refreshList","MutedMembersModal","mutedMemberFilter","MutedMemberList","kFormatter","num","Math","abs","toFixed","AdminPannel","frozen","setFrozen","isFrozen","AccordionGroup","Accordion","renderTitle","OPERATOR","CHANNEL_SETTING__OPERATORS__TITLE","renderContent","MEMBERS","CHANNEL_SETTING__MEMBERS__TITLE","Badge","count","memberCount","MUTE","CHANNEL_SETTING__MUTED_MEMBERS__TITLE","BAN","CHANNEL_SETTING__BANNED_MEMBERS__TITLE","FREEZE","CHANNEL_SETTING__FREEZE_CHANNEL","unfreeze","TOGGLE_ON","freeze","TOGGLE_OFF","COMPONENT_CLASS_NAME","ChannelSettings","onCloseClick","channelUrl","onChannelModified","renderChannelProfile","onBeforeUpdateChannel","sdkStore","stores","config","logger","isOnline","queries","userDefinedDisableUserProfile","userDefinedRenderProfile","userFilledApplicationUserListQuery","applicationUserListQuery","initialized","uuidv4","channelUpdateId","setChannelUpdateId","setChannel","invalidChannel","setInvalidChannel","showAccordion","setShowAccordion","showLeaveChannelModal","setShowLeaveChannelModal","componentClassNames","info","warning","GroupChannel","getChannel","groupChannel","H_2","CHANNEL_SETTING__HEADER__TITLE","CLOSE","PlaceHolder","PlaceHolderTypes","WRONG","UserProfileProvider","currentTitle","getErrorFirstCallback","params","data","updateChannel","AdminPanel","createDefaultUserListQuery","onKeyDown","tabIndex","CHEVRON_RIGHT","then","res","LEAVE","ERROR","CHANNEL_SETTING__LEAVE_CHANNEL__TITLE","LeaveChannelModal","onCloseModal","onLeaveChannel","leave","oneOfType","element","number","userIdsFilter","metaDataKeyFilter","metaDataValuesFilter","createApplicationUserListQuery","any"],"sources":["C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\EditDetails.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\ChannelProfile.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MembersModal.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\MembersAccordion.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\UserListItem.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\OperatorsModal.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\AddOperatorsModal.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\OperatorList.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\InviteMembersModal.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MemberList.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\BannedMembersModal.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\BannedMemberList.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MutedMembersModal.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\MutedMemberList.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\components\\AdminPanel\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\ChannelSettings\\index.jsx"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Modal from '../../../ui/Modal';\nimport Input, { InputLabel } from '../../../ui/Input';\nimport Avatar from '../../../ui/Avatar/index';\nimport { Type as ButtonType } from '../../../ui/Button/type';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst EditDetails = (props) => {\n  const {\n    onSubmit,\n    onCancel,\n    channel,\n    userId,\n    theme,\n  } = props;\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const hiddenInputRef = useRef(null);\n  const [currentImg, setCurrentImg] = useState(null);\n  const [newFile, setNewFile] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const title = channel.name;\n  return (\n    <Modal\n      titleText={stringSet.MODAL__CHANNEL_INFORMATION__TITLE}\n      submitText={stringSet.BUTTON__SAVE}\n      onCancel={onCancel}\n      onSubmit={() => {\n        if (title !== '' && !inputRef.current.value) {\n          if (formRef.current.reportValidity) { // might not work in explorer\n            formRef.current.reportValidity();\n          }\n          return;\n        }\n        onSubmit(newFile, inputRef.current.value);\n        onCancel();\n      }}\n      type={ButtonType.PRIMARY}\n    >\n      <form\n        className=\"channel-profile-form\"\n        ref={formRef}\n        onSubmit={(e) => { e.preventDefault(); }}\n      >\n        <div className=\"channel-profile-form__img-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_IMAGE}\n          </InputLabel>\n          <div className=\"channel-profile-form__avatar\">\n            {\n              currentImg\n                ? (\n                  <Avatar\n                    height=\"80px\"\n                    width=\"80px\"\n                    src={currentImg}\n                  />\n                ) : (\n                  <ChannelAvatar\n                    height={80}\n                    width={80}\n                    channel={channel}\n                    userId={userId}\n                    theme={theme}\n                  />\n                )\n              }\n          </div>\n          <input\n            ref={hiddenInputRef}\n            type=\"file\"\n            accept=\"image/gif, image/jpeg, image/png\"\n            style={{ display: 'none' }}\n            onChange={(e) => {\n              setCurrentImg(URL.createObjectURL(e.target.files[0]));\n              setNewFile(e.target.files[0]);\n              hiddenInputRef.current.value = '';\n            }}\n          />\n          <TextButton\n            className=\"channel-profile-form__avatar-button\"\n            onClick={() => hiddenInputRef.current.click()}\n            notUnderline\n          >\n            <Label type={LabelTypography.BUTTON_1} color={LabelColors.PRIMARY}>\n              {stringSet.MODAL__CHANNEL_INFORMATION__UPLOAD}\n            </Label>\n          </TextButton>\n        </div>\n        <div className=\"channel-profile-form__name-section\">\n          <InputLabel>\n            {stringSet.MODAL__CHANNEL_INFORMATION__CHANNEL_NAME}\n          </InputLabel>\n          <Input\n            required={title !== ''}\n            name=\"channel-profile-form__name\"\n            ref={inputRef}\n            value={title}\n            placeHolder={stringSet.MODAL__CHANNEL_INFORMATION__INPUT__PLACE_HOLDER}\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nEditDetails.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string.isRequired,\n};\n\nexport default EditDetails;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './channel-profile.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelColors, LabelTypography } from '../../../ui/Label';\nimport EditDetailsModal from './EditDetails';\nimport TextButton from '../../../ui/TextButton';\nimport ChannelAvatar from '../../../ui/ChannelAvatar/index';\n\nconst ChannelProfile = (props) => {\n  const {\n    disabled,\n    channel,\n    userId,\n    theme,\n    onChannelInfoChange,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  const getChannelName = () => {\n    if (channel && channel.name && channel.name !== 'Group Channel') {\n      return channel.name;\n    }\n    if (channel && (channel.name === 'Group Channel' || !channel.name)) {\n      return channel.members.map((member) => member.nickname || stringSet.NO_NAME).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n\n  return (\n    <div className=\"sendbird-channel-profile\">\n      <div className=\"sendbird-channel-profile--inner\">\n        <div className=\"sendbird-channel-profile__avatar\">\n          <ChannelAvatar\n            channel={channel}\n            userId={userId}\n            theme={theme}\n            width={80}\n            height={80}\n          />\n        </div>\n        <Label\n          className=\"sendbird-channel-profile__title\"\n          type={LabelTypography.SUBTITLE_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {getChannelName()}\n        </Label>\n        <TextButton\n          disabled={disabled}\n          className=\"sendbird-channel-profile__edit\"\n          onClick={() => {\n            if (disabled) { return; }\n            setShowModal(true);\n          }}\n          notUnderline\n        >\n          <Label\n            type={LabelTypography.BUTTON_1}\n            color={disabled ? LabelColors.ONBACKGROUND_2 : LabelColors.PRIMARY}\n          >\n            {stringSet.CHANNEL_SETTING__PROFILE__EDIT}\n          </Label>\n        </TextButton>\n        {\n          showModal && (\n            <EditDetailsModal\n              onCancel={() => setShowModal(false)}\n              onSubmit={onChannelInfoChange}\n              channel={channel}\n              userId={userId}\n              theme={theme}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nChannelProfile.propTypes = {\n  channel: PropTypes.shape({\n    name: PropTypes.string,\n    members: PropTypes.arrayOf(\n      PropTypes.shape({\n        nickname: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n  userId: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChannelInfoChange: PropTypes.func,\n};\n\nChannelProfile.defaultProps = {\n  theme: 'light',\n  disabled: false,\n  onChannelInfoChange: () => { },\n};\n\nexport default ChannelProfile;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  currentUser?: string;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function MembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All Members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              currentUser={currentUser}\n              action={({ parentRef, actionRef }) => (\n                <>\n                  {channel.myRole === 'operator' && (\n                    <ContextMenu\n                      menuTrigger={(toggleDropdown) => (\n                        <IconButton\n                          className=\"sendbird-user-message__more__menu\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            width=\"24px\"\n                            height=\"24px\"\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                          />\n                        </IconButton>\n                      )}\n                      menuItems={(closeDropdown) => (\n                        <MenuItems\n                          parentContainRef={parentRef}\n                          parentRef={actionRef} // for catching location(x, y) of MenuItems\n                          closeDropdown={closeDropdown}\n                          openLeft\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              if ((member.role !== 'operator')) {\n                                channel.addOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: 'operator',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              } else {\n                                channel.removeOperators([member.userId], () => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: '',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              }\n                            }}\n                          >\n                            { member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                          </MenuItem>\n                          {\n                            // No muted members in broadcast channel\n                            !channel.isBroadcast && (\n                              <MenuItem\n                                onClick={() => {\n                                  if (member.isMuted) {\n                                    channel.unmuteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: false,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    })\n                                  } else {\n                                    channel.muteUser(member, () => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: true,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                { member.isMuted ? 'Unmute' : 'Mute' }\n                              </MenuItem>\n                            )\n                          }\n                          <MenuItem\n                            onClick={() => {\n                              channel.banUser(member, -1, '', () => {\n                                setMembers(members.filter(({ userId }) => {\n                                  return userId !== member.userId;\n                                }));\n                              });\n                            }}\n                          >\n                            Ban\n                          </MenuItem>\n                        </MenuItems>\n                      )}\n                    />\n                  )}\n                </>\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './members-accordion.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../ui/Button';\nimport Avatar from '../../../ui/Avatar/index';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport InviteMembers from '../../InviteMembers';\nimport MembersModal from './AdminPanel/MembersModal';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nconst SHOWN_MEMBER_MAX = 10;\n\nconst UserListItem = ({ member = {}, currentUser = '' }) => {\n  const avatarRef = useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion__member\">\n      <div className=\"sendbird-members-accordion__member-avatar\">\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            <Avatar\n              onClick={() => {\n                if (!disableUserProfile) {\n                  toggleDropdown();\n                }\n              }}\n              ref={avatarRef}\n              src={member.profileUrl}\n              width={24}\n              height={24}\n            />\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              openLeft\n              parentRef={avatarRef}\n              // for catching location(x, y) of MenuItems\n              parentContainRef={avatarRef}\n              // for toggling more options(menus & reactions)\n              closeDropdown={closeDropdown}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              {\n                renderUserProfile\n                  ? renderUserProfile({\n                    user: member,\n                    currentUserId: currentUser,\n                    close: closeDropdown,\n                  })\n                  : (\n                    <UserProfile\n                      user={member}\n                      currentUserId={currentUser}\n                      onSuccess={closeDropdown}\n                    />\n                  )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n      <Label type={LabelTypography.SUBTITLE_2} color={LabelColors.ONBACKGROUND_1}>\n        {member.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === member.userId) && (\n            stringSet.CHANNEL_SETTING__MEMBERS__YOU\n          )\n        }\n      </Label>\n    </div>\n  );\n};\n\nUserListItem.propTypes = {\n  member: PropTypes.shape({\n    userId: PropTypes.string,\n    profileUrl: PropTypes.string,\n    nickname: PropTypes.string,\n  }).isRequired,\n  currentUser: PropTypes.string.isRequired,\n};\n\nconst MembersAccordion = ({\n  channel,\n  disabled,\n  currentUser,\n  userQueryCreator,\n  onInviteMembers,\n  swapParams,\n}) => {\n  const members = channel.members || [];\n  const [showMoreModal, setShowMoreModal] = useState(false);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-members-accordion\">\n      <div className=\"sendbird-members-accordion__list\">\n        {\n          members.slice(0, SHOWN_MEMBER_MAX).map((member) => (\n            <UserListItem\n              member={member}\n              currentUser={currentUser}\n              key={member.userId}\n            />\n          ))\n        }\n      </div>\n      <div className=\"sendbird-members-accordion__footer\">\n        {\n          members.length >= SHOWN_MEMBER_MAX && (\n            <Button\n              className=\"sendbird-members-accordion__footer__all-members\"\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowMoreModal(true)}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__SEE_ALL_MEMBERS}\n            </Button>\n          )\n        }\n        {\n          members.length >= SHOWN_MEMBER_MAX && showMoreModal && (\n            <MembersModal\n              currentUser={currentUser}\n              hideModal={() => {\n                setShowMoreModal(false);\n              }}\n              channel={channel}\n            />\n          )\n        }\n        <Button\n          className=\"sendbird-members-accordion__footer__invite-users\"\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          disabled={disabled}\n          onClick={() => {\n            if (disabled) { return; }\n            setShowAddUserModal(true);\n          }}\n        >\n          {stringSet.CHANNEL_SETTING__MEMBERS__INVITE_MEMBER}\n        </Button>\n        {\n          showAddUserModal && (\n            <InviteMembers\n              swapParams={swapParams}\n              titleText={stringSet.MODAL__INVITE_MEMBER__TITLE}\n              submitText={stringSet.BUTTON__INVITE}\n              closeModal={() => setShowAddUserModal(false)}\n              idsToFilter={members.map((member) => (member.userId))}\n              userQueryCreator={userQueryCreator}\n              onSubmit={onInviteMembers}\n            />\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nMembersAccordion.propTypes = {\n  swapParams: PropTypes.bool,\n  disabled: PropTypes.bool,\n  channel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  currentUser: PropTypes.string,\n  userQueryCreator: PropTypes.func.isRequired,\n  onInviteMembers: PropTypes.func.isRequired,\n};\n\nMembersAccordion.defaultProps = {\n  swapParams: false,\n  currentUser: '',\n  disabled: false,\n  channel: {},\n};\n\nexport default MembersAccordion;\n","// might move to reusable/UI\n\nimport React, { ReactElement, useRef, useContext } from 'react';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { UserProfileContext } from '../../../lib/UserProfileContext';\nimport Avatar from '../../../ui/Avatar/index';\nimport MutedAvatarOverlay from '../../../ui/Avatar/MutedAvatarOverlay';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport UserProfile from '../../../ui/UserProfile';\nimport ContextMenu, { MenuItems } from '../../../ui/ContextMenu';\n\nimport './user-list-item.scss';\nimport { SendbirdTypes } from '../../../types';\n\nconst COMPONENT_NAME = 'sendbird-user-list-item--small';\n\ninterface ActionProps {\n  actionRef: React.RefObject<HTMLInputElement>;\n  parentRef: React.RefObject<HTMLInputElement>;\n}\n\ntype CustomUser = SendbirdTypes['User'] & {\n  isMuted: boolean;\n  role: string;\n};\n\ninterface Props {\n  user: CustomUser;\n  currentUser?: string;\n  className?: string;\n  action?(props: ActionProps): ReactElement;\n}\n\nconst UserListItem = ({\n  user,\n  className,\n  currentUser,\n  action,\n}: Props): ReactElement => {\n  const actionRef = useRef(null);\n  const parentRef = useRef(null);\n  const avatarRef = useRef(null);\n  const { stringSet } = useContext(LocalizationContext);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const injectingClassNames = Array.isArray(className) ? className : [className];\n  return (\n    <div\n      ref={parentRef}\n      className={[\n        COMPONENT_NAME, ...injectingClassNames,\n      ].join(' ')}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n            ref={avatarRef}\n            className={`${COMPONENT_NAME}__avatar`}\n            src={user.profileUrl}\n            width={24}\n            height={24}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className={`${COMPONENT_NAME}__title`}\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            \" (You)\"\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className={`${COMPONENT_NAME}__subtitle`}\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className={`${COMPONENT_NAME}__operator`}\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div ref={actionRef} className={`${COMPONENT_NAME}__action`}>\n            { action({ actionRef, parentRef }) }\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default UserListItem;\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function OperatorsModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [operators, setOperators] = useState([]);\n  const [operatorQuery, setOperatorQuery] = useState(null);\n\n  useEffect(() => {\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 20;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"All operators\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = operatorQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              operatorQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setOperators([\n                  ...operators,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { operators.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([member.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== member.userId;\n                            }));\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function AddOperatorsModal({\n  hideModal,\n  channel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [memberQuery, setMemberQuery] = useState(null);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    const memberListQuery = channel.createMemberListQuery();\n    memberListQuery.limit = 20;\n    memberListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n\n  const selectedCount = Object.keys(selectedMembers).filter((m) => selectedMembers[m]).length;\n  return (\n    <div>\n      <Modal\n        type={ButtonType.PRIMARY}\n        submitText=\"Add\"\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n  useContext,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport OperatorsModal from './OperatorsModal';\nimport AddOperatorsModal from './AddOperatorsModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const OperatorList = ({ sdk, channel }: Props): ReactElement => {\n  const [operators, setOperators] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [hasNext, setHasNext] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  useEffect(() => {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n\n    const operatorListQuery = channel.createOperatorListQuery();\n    operatorListQuery.limit = 10;\n    operatorListQuery.next((operators, error) => {\n      if (error) {\n        return;\n      }\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setOperators([]);\n        return;\n      }\n      const operatorListQuery = channel.createOperatorListQuery();\n      operatorListQuery.limit = 10;\n      operatorListQuery.next((operators, error) => {\n        if (error) {\n          return;\n        }\n        setOperators(operators);\n        setHasNext(operatorListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        operators.map((operator) => (\n          <UserListItem\n            key={operator.userId}\n            user={operator}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.removeOperators([operator.userId], (response, error) => {\n                            if (error) {\n                              return;\n                            }\n                            setOperators(operators.filter(({ userId }) => {\n                              return userId !== operator.userId;\n                            }))\n                          });\n                          closeDropdown();\n                        }}\n                      >\n                        Dismiss operator\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }}\n          />\n        ))\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowMore(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL}\n            </Button>\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowAdd(true);\n              }}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD}\n            </Button>\n          </div>\n        )\n      }\n      {\n        showMore && (\n          <OperatorsModal\n            currentUser={sdk.currentUser.userId}\n            hideModal={() => {\n              setShowMore(false);\n              refershList();\n            }}\n            channel={channel}\n          />\n        )\n      }\n      {\n        showAdd && (\n          <AddOperatorsModal\n            hideModal={() => setShowAdd(false)}\n            channel={channel}\n            onSubmit={(members) => {\n              setShowAdd(false);\n              channel.addOperators(members, () => {\n                refershList();\n              });\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(OperatorList, mapStoreToProps);\n","import React, { ReactElement, useEffect, useState } from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\n\ninterface Props {\n  hideModal(): void;\n  onSubmit(members: Array<string>): void;\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n}\n\nexport default function InviteMembers({\n  hideModal,\n  userQueryCreator,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  useEffect(() => {\n    const userListQuery = userQueryCreator();\n    userListQuery.limit = 20;\n    userListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText=\"Invite\"\n        type={ButtonType.PRIMARY}\n        onCancel={() => hideModal()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          onSubmit(members);\n        }}\n        titleText=\"Select members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              userQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              checkBox\n              checked={selectedMembers[member.userId]}\n              onChange={\n                (event) => {\n                  const modifiedSelectedMembers = {\n                    ...selectedMembers,\n                    [event.target.id]: event.target.checked,\n                  };\n                  if (!event.target.checked) {\n                    delete modifiedSelectedMembers[event.target.id];\n                  }\n                  setSelectedMembers(modifiedSelectedMembers);\n                }\n              }\n              user={member}\n              key={member.userId}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteMembers from './InviteMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes['SendBirdInstance'];\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport const MemberList = ({\n  sdk,\n  channel,\n  userQueryCreator,\n  userId,\n}: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteMembers, setShowInviteMembers] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setMembers([]);\n        return;\n      }\n      const memberUserListQuery = channel.createMemberListQuery();\n      memberUserListQuery.limit = 10;\n      memberUserListQuery.next((members, error) => {\n        if (error) {\n          return;\n        }\n        setMembers(members);\n        setHasNext(memberUserListQuery.hasNext);\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel.addOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel.removeOperators([member.userId], () => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          {member.role !== 'operator' ? 'Promote to operator' : 'Demote operator'}\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel.unmuteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  })\n                                } else {\n                                  channel.muteUser(member, () => {\n                                    refershList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              { member.isMuted ? 'Unmute' : 'Mute'}\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel.banUser(member, -1, '', () => {\n                              refershList();\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          Ban\n                    </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              All members\n            </Button>\n          )\n        }\n        <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteMembers(true)}\n        >\n          Invite members\n        </Button>\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowAllMembers(false);\n              refershList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteMembers && (\n          <InviteMembers\n            userQueryCreator={userQueryCreator}\n            onSubmit={(selectedMembers: Array<string>) => {\n              channel.inviteWithUserIds(selectedMembers, () => {\n                setShowInviteMembers(false);\n                refershList();\n              });\n            }}\n            channel={channel}\n            hideModal={() => setShowInviteMembers(false)}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport default function BannedMembersModal({\n  hideModal,\n  channel,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n    });\n    setMemberQuery(bannedUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              action={({ parentRef, actionRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n              }\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport BannedMembersModal from './BannedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const BannedMemberList = ({ channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next((users, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const bannedUserListQuery = channel.createBannedUserListQuery();\n    bannedUserListQuery.next(function(users, error) {\n      if (error) {\n        return;\n      }\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unbanUser(member, () => {\n                            closeDropdown();\n                            refreshList();\n                          })\n                        }}\n                      >\n                        Unban\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )\n            }}\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No banned members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All banned members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <BannedMembersModal\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(BannedMemberList, mapStoreToProps);\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\ninterface Props {\n  hideModal(): void;\n  channel: SendbirdTypes[\"GroupChannel\"];\n  currentUser?: string;\n}\n\nexport default function MutedMembersModal({\n  hideModal,\n  channel,\n  currentUser,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  useEffect(() => {\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery);\n  }, []);\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => hideModal()}\n        onSubmit={noop}\n        titleText=\"Muted members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next((o, error) => {\n                if (error) {\n                  return;\n                }\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              currentUser={currentUser}\n              user={member}\n              key={member.userId}\n              action={({ actionRef, parentRef }) => (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            closeDropdown();\n                            setMembers(members.filter(m => {\n                              return (m.userId !== member.userId);\n                            }));\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport { SendbirdTypes } from '../../../../types';\n\nimport withSendbirdContext from '../../../../lib/SendbirdSdkContext';\nimport { getSdk } from '../../../../lib/selectors';\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport UserListItem from '../UserListItem';\nimport MutedMembersModal from './MutedMembersModal';\n\ninterface Props {\n  sdk: SendbirdTypes[\"SendBirdInstance\"];\n  channel: SendbirdTypes[\"GroupChannel\"];\n}\n\nexport const MutedMemberList = ({ sdk, channel }: Props): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refreshList = useCallback(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel.createMemberListQuery();\n    memberUserListQuery.limit = 10;\n    memberUserListQuery.mutedMemberFilter = 'muted';\n    memberUserListQuery.next((members, error) => {\n      if (error) {\n        return;\n      }\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={({ actionRef, parentRef }) => {\n              return (\n                <ContextMenu\n                  menuTrigger={(toggleDropdown) => (\n                    <IconButton\n                      className=\"sendbird-user-message__more__menu\"\n                      width=\"32px\"\n                      height=\"32px\"\n                      onClick={toggleDropdown}\n                    >\n                      <Icon\n                        width=\"24px\"\n                        height=\"24px\"\n                        type={IconTypes.MORE}\n                        fillColor={IconColors.CONTENT_INVERSE}\n                      />\n                    </IconButton>\n                  )}\n                  menuItems={(closeDropdown) => (\n                    <MenuItems\n                      closeDropdown={closeDropdown}\n                      openLeft\n                      parentContainRef={parentRef}\n                      parentRef={actionRef} // for catching location(x, y) of MenuItems\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          channel.unmuteUser(member, () => {\n                            refreshList();\n                            closeDropdown();\n                          })\n                        }}\n                      >\n                        Unmute\n                      </MenuItem>\n                    </MenuItems>\n                  )}\n                />\n              );\n            }\n            }\n          />\n        ))\n      }\n      {\n        members && members.length === 0 && (\n          <Label\n            className=\"sendbird-channel-settings__empty-list\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_3}\n          >\n            No muted members yet\n          </Label>\n        )\n      }\n      {\n        hasNext && (\n          <div\n            className=\"sendbird-channel-settings-accordion__footer\"\n          >\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => {\n                setShowModal(true);\n              }}\n            >\n              All muted members\n            </Button>\n          </div>\n        )\n      }\n      {\n        showModal && (\n          <MutedMembersModal\n            currentUser={sdk.currentUser.userId}\n            channel={channel}\n            hideModal={() => {\n              setShowModal(false);\n              refreshList();\n            }}\n          />\n        )\n      }\n    </>\n  );\n}\n\nconst mapStoreToProps = (store) => ({\n  sdk: getSdk(store),\n});\n\nexport default withSendbirdContext(MutedMemberList, mapStoreToProps);\n","import './index.scss';\nimport React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useContext,\n} from 'react';\nimport { SendbirdTypes } from '../../../../types';\n\nimport Accordion, { AccordionGroup } from '../../../../ui/Accordion';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport\n  Label, {\n  LabelTypography,\n  LabelColors,\n} from '../../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport Badge from '../../../../ui/Badge';\n\nimport OperatorList from './OperatorList';\nimport MemberList from './MemberList';\nimport BannedMemberList from './BannedMemberList';\nimport MutedMemberList from './MutedMemberList';\n\nconst kFormatter = (num: number): string|number => {\n  return Math.abs(num) > 999\n    ? `${(Math.abs(num)/1000).toFixed(1)}K`\n    : num;\n}\n\ninterface Props {\n  channel: SendbirdTypes['GroupChannel'];\n  userQueryCreator(): SendbirdTypes['UserListQuery'];\n  userId: string;\n}\n\nexport default function AdminPannel({\n  userQueryCreator,\n  channel,\n  userId,\n}: Props): ReactElement {\n  const [frozen, setFrozen] = useState(false);\n\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(() => {\n    setFrozen(channel.isFrozen);\n  }, [channel]);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <AccordionGroup className=\"sendbird-channel-settings__operator\">\n      <Accordion\n        className=\"sendbird-channel-settings__operators-list\"\n        id=\"operators\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.OPERATOR}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__OPERATORS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <OperatorList channel={channel} />\n          </>\n        )}\n      />\n      <Accordion\n        className=\"sendbird-channel-settings__members-list\"\n        id=\"members\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.MEMBERS}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n            </Label>\n            <Badge count={kFormatter(channel.memberCount)} />\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <MemberList\n              userQueryCreator={userQueryCreator}\n              channel={channel}\n              userId={userId}\n            />\n          </>\n        )}\n      />\n      {\n        // No muted members in broadcast channel\n        !channel.isBroadcast && (\n          <Accordion\n            id=\"mutedMembers\"\n            className=\"sendbird-channel-settings__muted-members-list\"\n            renderTitle={() => (\n              <>\n                <Icon\n                  type={IconTypes.MUTE}\n                  fillColor={IconColors.PRIMARY}\n                  width={24}\n                  height={24}\n                  className=\"sendbird-channel-settings__accordion-icon\"\n                />\n                <Label\n                  type={LabelTypography.SUBTITLE_1}\n                  color={LabelColors.ONBACKGROUND_1}\n                >\n                  {stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE}\n                </Label>\n              </>\n            )}\n            renderContent={() => (\n              <>\n                <MutedMemberList channel={channel} />\n              </>\n            )}\n          />\n        )\n      }\n      <Accordion\n        className=\"sendbird-channel-settings__banned-members-list\"\n        id=\"bannedMembers\"\n        renderTitle={() => (\n          <>\n            <Icon\n              type={IconTypes.BAN}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE}\n            </Label>\n          </>\n        )}\n        renderContent={() => (\n          <>\n            <BannedMemberList channel={channel} />\n          </>\n        )}\n      />\n      {\n        // cannot frozen broadcast channel\n        !channel.isBroadcast && (\n          <div className=\"sendbird-channel-settings__freeze\">\n            <Icon\n              type={IconTypes.FREEZE}\n              fillColor={IconColors.PRIMARY}\n              width={24}\n              height={24}\n              className=\"sendbird-channel-settings__accordion-icon\"\n            />\n            <Label\n              type={LabelTypography.SUBTITLE_1}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {stringSet.CHANNEL_SETTING__FREEZE_CHANNEL}\n            </Label>\n            <div className=\"sendbird-channel-settings__frozen-icon\">\n              {\n                frozen\n                  ? (\n                    <Icon\n                      onClick={() => {\n                        channel.unfreeze(() => {\n                          setFrozen(false);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_ON}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n                  : (\n                    <Icon\n                      onClick={() => {\n                        channel.freeze(() => {\n                          setFrozen(true);\n                        });\n                      }}\n                      type={IconTypes.TOGGLE_OFF}\n                      fillColor={IconColors.PRIMARY}\n                      width={44}\n                      height={24}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        )\n      }\n    </AccordionGroup>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\nimport Badge from '../../ui/Badge';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\n\nimport ChannelProfile from './components/ChannelProfile';\nimport MembersAccordion from './components/MembersAccordion';\nimport LeaveChannelModal from './components/LeaveChannel';\nimport AdminPanel from './components/AdminPanel';\nimport PlaceHolder from '../../ui/PlaceHolder';\nimport PlaceHolderTypes from '../../ui/PlaceHolder/type';\nimport { uuidv4 } from '../../utils/uuid';\nimport { createDefaultUserListQuery } from '../ChannelList/components/utils';\n\nconst COMPONENT_CLASS_NAME = 'sendbird-channel-settings';\n\nconst kFormatter = (num) => (\n  Math.abs(num) > 999\n    ? `${(Math.abs(num) / 1000).toFixed(1)}K`\n    : num\n);\n\nfunction ChannelSettings(props) {\n  const {\n    className,\n    onCloseClick,\n    channelUrl,\n    disableUserProfile,\n    renderUserProfile,\n    onChannelModified,\n    renderChannelProfile,\n    onBeforeUpdateChannel,\n  } = props;\n\n  const {\n    stores: { sdkStore },\n    config: {\n      userListQuery,\n      theme,\n      userId,\n      logger,\n      isOnline,\n    },\n    queries = {},\n  } = props;\n\n  const { config = {} } = props;\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n\n  const userFilledApplicationUserListQuery = queries.applicationUserListQuery;\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { sdk, initialized } = sdkStore;\n\n  // hack to kepp track of channel updates by triggering useEffect\n  const [channelUpdateId, setChannelUpdateId] = useState(uuidv4());\n  const [channel, setChannel] = useState(null);\n  const [invalidChannel, setInvalidChannel] = useState(false);\n  const [showAccordion, setShowAccordion] = useState(false);\n  const [showLeaveChannelModal, setShowLeaveChannelModal] = useState(false);\n\n  const componentClassNames = (\n    Array.isArray(className)\n      ? [COMPONENT_CLASS_NAME, ...className]\n      : [COMPONENT_CLASS_NAME, className]\n  ).join(' ');\n\n  useEffect(() => {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.GroupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.GroupChannel.getChannel(channelUrl, (groupChannel) => {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  if (!channel || invalidChannel) {\n    return (\n      <div className={componentClassNames}>\n        <div className=\"sendbird-channel-settings__header\">\n          <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n            {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n          </Label>\n          <Icon\n            className=\"sendbird-channel-settings__close-icon\"\n            type={IconTypes.CLOSE}\n            height=\"24px\"\n            width=\"24px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          />\n        </div>\n        <div>\n          <PlaceHolder type={PlaceHolderTypes.WRONG} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <UserProfileProvider\n      className={componentClassNames}\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      <div className=\"sendbird-channel-settings__header\">\n        <Label type={LabelTypography.H_2} color={LabelColors.ONBACKGROUND_1}>\n          {stringSet.CHANNEL_SETTING__HEADER__TITLE}\n        </Label>\n        <div className=\"sendbird-channel-settings__header-icon\">\n          <IconButton\n            width=\"32px\"\n            height=\"32px\"\n            onClick={() => {\n              logger.info('ChannelSettings: Click close');\n              onCloseClick();\n            }}\n          >\n            <Icon\n              className=\"sendbird-channel-settings__close-icon\"\n              type={IconTypes.CLOSE}\n              height=\"22px\"\n              width=\"22px\"\n            />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sendbird-channel-settings__scroll-area\">\n        {\n          renderChannelProfile\n            ? renderChannelProfile({ channel })\n            : (\n              <ChannelProfile\n                disabled={!isOnline}\n                channel={channel}\n                userId={userId}\n                theme={theme}\n                onChannelInfoChange={(currentImg, currentTitle) => {\n                  logger.info('ChannelSettings: Channel information being updated');\n                  const swapParams = sdk.getErrorFirstCallback();\n                  if (onBeforeUpdateChannel) {\n                    const params = onBeforeUpdateChannel(currentTitle, currentImg, channel.data);\n                    // swapParams\n                    channel.updateChannel(params, (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    });\n                    return;\n                  }\n                  channel.updateChannel(\n                    currentTitle,\n                    currentImg,\n                    channel.data,\n                    (response, error) => {\n                      let groupChannel = response;\n                      if (swapParams) {\n                        groupChannel = error;\n                      }\n                      logger.info('ChannelSettings: Channel information updated', groupChannel);\n                      onChannelModified(groupChannel);\n                      setChannelUpdateId(uuidv4());\n                    },\n                  );\n                }}\n              />\n            )\n        }\n        {\n          channel.myRole === 'operator'\n            ? (\n              <AdminPanel\n                channel={channel}\n                userId={userId}\n                onChannelModified={(groupChannel) => {\n                  // setChannelUpdateId(uuidv4());\n                  onChannelModified(groupChannel);\n                }}\n                userQueryCreator={\n                  () => ((userListQuery && typeof userListQuery === 'function')\n                    ? userListQuery()\n                    : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                  )\n                }\n              />\n            )\n            : (\n              <>\n                {/* Move to different file */}\n                <div\n                  className={[\n                    'sendbird-channel-settings__panel-item',\n                    'sendbird-channel-settings__members',\n                  ].join(' ')}\n                  role=\"switch\"\n                  aria-checked={showAccordion}\n                  onKeyDown={() => setShowAccordion(!showAccordion)}\n                  onClick={() => setShowAccordion(!showAccordion)}\n                  tabIndex={0}\n                >\n                  <Icon\n                    className=\"sendbird-channel-settings__panel-icon-left\"\n                    type={IconTypes.MEMBERS}\n                    fillColor={IconColors.PRIMARY}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                  <Label\n                    type={LabelTypography.SUBTITLE_1}\n                    color={LabelColors.ONBACKGROUND_1}\n                  >\n                    {stringSet.CHANNEL_SETTING__MEMBERS__TITLE}\n                    <Badge count={kFormatter(channel.memberCount)} />\n                  </Label>\n                  <Icon\n                    className={[\n                      'sendbird-channel-settings__panel-icon-right',\n                      'sendbird-channel-settings__panel-icon--chevron',\n                      (showAccordion ? 'sendbird-channel-settings__panel-icon--open' : ''),\n                    ].join(' ')}\n                    type={IconTypes.CHEVRON_RIGHT}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                </div>\n                {\n                  showAccordion && (\n                    <MembersAccordion\n                      currentUser={userId}\n                      disabled={!isOnline}\n                      // eslint-disable-next-line\n                      userQueryCreator={\n                        () => ((userListQuery && typeof userListQuery === 'function')\n                          ? userListQuery()\n                          : createDefaultUserListQuery({ sdk, userFilledApplicationUserListQuery })\n                        )\n                      }\n                      swapParams={\n                        sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n                      }\n                      channel={channel}\n                      members={channel.members}\n                      onInviteMembers={(selectedMembers) => {\n                        logger.info('ChannelSettings: Inviting new users');\n                        channel.inviteWithUserIds(selectedMembers)\n                          .then((res) => {\n                            onChannelModified(res);\n                            setChannelUpdateId(uuidv4());\n                            logger.info('ChannelSettings: Inviting new users success!', res);\n                          });\n                      }}\n                    />\n                  )\n                }\n              </>\n            )\n        }\n\n        <div\n          className={[\n            'sendbird-channel-settings__panel-item',\n            'sendbird-channel-settings__leave-channel',\n            !isOnline ? 'sendbird-channel-settings__panel-item__disabled' : '',\n          ].join(' ')}\n          role=\"button\"\n          disabled\n          onKeyDown={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          onClick={() => {\n            if (!isOnline) { return; }\n            setShowLeaveChannelModal(true);\n          }}\n          tabIndex={0}\n        >\n          <Icon\n            className={[\n              'sendbird-channel-settings__panel-icon-left',\n              'sendbird-channel-settings__panel-icon__leave',\n            ].join(' ')}\n            type={IconTypes.LEAVE}\n            fillColor={IconColors.ERROR}\n            height=\"24px\"\n            width=\"24px\"\n          />\n          <Label\n            type={LabelTypography.SUBTITLE_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE}\n          </Label>\n        </div>\n        {\n          showLeaveChannelModal && (\n            <LeaveChannelModal\n              onCloseModal={() => setShowLeaveChannelModal(false)}\n              onLeaveChannel={() => {\n                logger.info('ChannelSettings: Leaving channel', channel);\n                channel.leave()\n                  .then(() => {\n                    logger.info('ChannelSettings: Leaving channel successful!', channel);\n                    onCloseClick();\n                  });\n              }}\n            />\n          )\n        }\n      </div>\n    </UserProfileProvider>\n  );\n}\n\nChannelSettings.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  onCloseClick: PropTypes.func,\n  onChannelModified: PropTypes.func,\n  onBeforeUpdateChannel: PropTypes.func,\n  renderChannelProfile: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  channelUrl: PropTypes.string.isRequired,\n  queries: PropTypes.shape({\n    applicationUserListQuery: PropTypes.shape({\n      limit: PropTypes.number,\n      userIdsFilter: PropTypes.arrayOf(PropTypes.string),\n      metaDataKeyFilter: PropTypes.string,\n      metaDataValuesFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  // from withSendbirdContext\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        GroupChannel: PropTypes.oneOfType([\n          PropTypes.shape({\n            getChannel: PropTypes.func,\n          }),\n          PropTypes.func,\n        ]),\n        createApplicationUserListQuery: PropTypes.any,\n      }),\n      initialized: PropTypes.bool,\n    }),\n  }).isRequired,\n  config: PropTypes.shape({\n    userId: PropTypes.string,\n    theme: PropTypes.string,\n    userListQuery: PropTypes.func,\n    isOnline: PropTypes.bool,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n  }).isRequired,\n};\n\nChannelSettings.defaultProps = {\n  className: '',\n  onBeforeUpdateChannel: null,\n  queries: {},\n  disableUserProfile: false,\n  renderUserProfile: null,\n  renderChannelProfile: null,\n  onCloseClick: () => { },\n  onChannelModified: () => { },\n};\n\nexport default withSendbirdContext(ChannelSettings);\n"]},"metadata":{},"sourceType":"module"}