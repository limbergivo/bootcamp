{"ast":null,"code":"import { e as _toConsumableArray, a as _objectSpread2, u as uuidv4, b as _slicedToArray, c as LocalizationContext, f as _defineProperty, h as _inherits, i as _createSuper, j as _createClass, k as _classCallCheck, l as _assertThisInitialized, w as withSendbirdContext } from './LocalizationContext-963dc1a0.js';\nimport React__default, { useEffect, useCallback, useRef, useMemo, useContext, useState, useLayoutEffect, Component, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { f as format, i as isSameDay } from './index-53ae4315.js';\nimport { k as SEND_USER_MESSAGE, S as SEND_MESSAGE_START, l as SEND_FILE_MESSAGE, j as UPDATE_USER_MESSAGE, D as DELETE_MESSAGE, E as EmojiListItems, C as ContextMenu, I as IconButton, b as MenuItems, c as MenuItem, a as TextButton, U as UserProfileContext, f as ConnectedUserProfile, M as Modal, d as ButtonTypes, h as UserProfileProvider } from './index-f66438bd.js';\nimport { a as getOutgoingMessageStates, b as getSendingMessageStatus, c as filterMessageListParams, d as getOutgoingMessageState, e as isSentStatus, h as isUserMessage, j as isFailedMessage, k as isPendingMessage, l as isSentMessage, m as getClassName, n as copyToClipboard, o as getEmojiListAll, p as getEmojiMapAll, q as isReactedBy, r as getEmojiTooltipString, s as isEditedMessage, u as getUIKitFileType, t as truncateString, v as isVideoMessage, w as isGifMessage, x as isUrl, y as getUIKitFileTypes, z as isThumbnailMessage, A as isVideo, B as isGif, C as isFileMessage, D as isSupportedFileView, E as getUIKitMessageTypes, F as getSenderName, G as isTextMessage, H as isOGMessage, I as getUIKitMessageType, J as isImageMessage, K as isAudioMessage } from './index-a1512a62.js';\nimport { c as compareIds, L as LinkLabel, D as DateSeparator, M as MessageInput, F as FileViewer } from './index-1de8106c.js';\nimport { h as ImageRenderer, I as Icon, c as IconTypes, d as IconColors, e as Loader, L as Label, a as LabelTypography, b as LabelColors, A as Avatar, P as PlaceHolder, i as PlaceHolderTypes, g as LabelStringSet } from './index-6ff1fa1b.js';\nimport { C as ChannelAvatar } from './index-7c2502c4.js';\nimport 'react-dom';\nimport './utils-fa79caf2.js';\nvar RESET_MESSAGES = 'RESET_MESSAGES';\nvar RESET_STATE = 'RESET_STATE';\nvar CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nvar GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nvar GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nvar GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nvar GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\nvar SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nvar SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nvar SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\nvar RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\nvar ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nvar UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nvar ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nvar ON_MESSAGE_THREAD_INFO_UPDATED = 'ON_MESSAGE_THREAD_INFO_UPDATED';\nvar ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nvar ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\nvar SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nvar SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nvar MARK_AS_READ = 'MARK_AS_READ';\nvar ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nvar SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\nvar MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\ngetOutgoingMessageStates();\nvar UNDEFINED = 'undefined';\n\nvar _getSendingMessageSta$1 = getSendingMessageStatus(),\n    SUCCEEDED$1 = _getSendingMessageSta$1.SUCCEEDED;\n\n_getSendingMessageSta$1.FAILED;\nvar PENDING$1 = _getSendingMessageSta$1.PENDING;\n\nvar scrollIntoLast = function scrollIntoLast() {\n  var intialTry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var MAX_TRIES = 10;\n  var currentTry = intialTry;\n\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n\n  try {\n    var scrollDOM = document.querySelector('.sendbird-conversation__messages-padding'); // eslint-disable-next-line no-multi-assign\n\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(function () {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nvar pubSubHandleRemover = function pubSubHandleRemover(subscriber) {\n  subscriber.forEach(function (s) {\n    try {\n      s.remove();\n    } catch (_unused) {//\n    }\n  });\n};\n\nvar pubSubHandler = function pubSubHandler(channelUrl, pubSub, dispatcher) {\n  var subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(SEND_USER_MESSAGE, pubSub.subscribe(SEND_USER_MESSAGE, function (msg) {\n    var channel = msg.channel,\n        message = msg.message;\n    scrollIntoLast();\n\n    if (channel && channelUrl === channel.url) {\n      dispatcher({\n        type: SEND_MESSAGEGE_SUCESS,\n        payload: message\n      });\n    }\n  }));\n  subscriber.set(SEND_MESSAGE_START, pubSub.subscribe(SEND_MESSAGE_START, function (msg) {\n    var channel = msg.channel,\n        message = msg.message;\n\n    if (channel && channelUrl === channel.url) {\n      dispatcher({\n        type: SEND_MESSAGEGE_START,\n        payload: message\n      });\n    }\n  }));\n  subscriber.set(SEND_FILE_MESSAGE, pubSub.subscribe(SEND_FILE_MESSAGE, function (msg) {\n    var channel = msg.channel,\n        message = msg.message;\n    scrollIntoLast();\n\n    if (channel && channelUrl === channel.url) {\n      dispatcher({\n        type: SEND_MESSAGEGE_SUCESS,\n        payload: message\n      });\n    }\n  }));\n  subscriber.set(UPDATE_USER_MESSAGE, pubSub.subscribe(UPDATE_USER_MESSAGE, function (msg) {\n    var channel = msg.channel,\n        message = msg.message,\n        fromSelector = msg.fromSelector;\n\n    if (fromSelector && channel && channelUrl === channel.url) {\n      dispatcher({\n        type: ON_MESSAGE_UPDATED,\n        payload: {\n          channel: channel,\n          message: message\n        }\n      });\n    }\n  }));\n  subscriber.set(DELETE_MESSAGE, pubSub.subscribe(DELETE_MESSAGE, function (msg) {\n    var channel = msg.channel,\n        messageId = msg.messageId;\n\n    if (channel && channelUrl === channel.url) {\n      dispatcher({\n        type: ON_MESSAGE_DELETED,\n        payload: messageId\n      });\n    }\n  }));\n  return subscriber;\n};\n\nvar isOperator = function isOperator() {\n  var groupChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var myRole = groupChannel.myRole;\n  return myRole === 'operator';\n};\n\nvar isDisabledBecauseFrozen = function isDisabledBecauseFrozen() {\n  var groupChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isFrozen = groupChannel.isFrozen;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nvar isDisabledBecauseMuted = function isDisabledBecauseMuted() {\n  var groupChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var myMutedState = groupChannel.myMutedState;\n  return myMutedState === 'muted';\n};\n\nvar getEmojiCategoriesFromEmojiContainer$1 = function getEmojiCategoriesFromEmojiContainer() {\n  var emojiContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return emojiContainer.emojiCategories ? emojiContainer.emojiCategories : [];\n};\n\nvar getAllEmojisFromEmojiContainer$1 = function getAllEmojisFromEmojiContainer() {\n  var emojiContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _emojiContainer$emoji = emojiContainer.emojiCategories,\n      emojiCategories = _emojiContainer$emoji === void 0 ? [] : _emojiContainer$emoji;\n  var allEmojis = [];\n\n  for (var categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    var emojis = emojiCategories[categoryIndex].emojis;\n\n    for (var emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n\n  return allEmojis;\n};\n\nvar getEmojisFromEmojiContainer$1 = function getEmojisFromEmojiContainer() {\n  var emojiContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var emojiCategoryId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return emojiContainer.emojiCategories ? emojiContainer.emojiCategories.filter(function (emojiCategory) {\n    return emojiCategory.id === emojiCategoryId;\n  })[0].emojis : [];\n};\n\nvar getAllEmojisMapFromEmojiContainer = function getAllEmojisMapFromEmojiContainer() {\n  var emojiContainer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _emojiContainer$emoji2 = emojiContainer.emojiCategories,\n      emojiCategories = _emojiContainer$emoji2 === void 0 ? [] : _emojiContainer$emoji2;\n  var allEmojisMap = new Map();\n\n  for (var categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    var emojis = emojiCategories[categoryIndex].emojis;\n\n    for (var emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      var _emojis$emojiIndex = emojis[emojiIndex],\n          key = _emojis$emojiIndex.key,\n          url = _emojis$emojiIndex.url;\n      allEmojisMap.set(key, url);\n    }\n  }\n\n  return allEmojisMap;\n};\n\nvar getNicknamesMapFromMembers = function getNicknamesMapFromMembers() {\n  var members = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var nicknamesMap = new Map();\n\n  for (var memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    var _members$memberIndex = members[memberIndex],\n        userId = _members$memberIndex.userId,\n        nickname = _members$memberIndex.nickname;\n    nicknamesMap.set(userId, nickname);\n  }\n\n  return nicknamesMap;\n};\n\nvar getMessageCreatedAt = function getMessageCreatedAt(message) {\n  return format(message.createdAt, 'p');\n};\n\nvar isSameGroup = function isSameGroup(message, comparingMessage) {\n  var _message$sender, _comparingMessage$sen, _message$sender2, _comparingMessage$sen2;\n\n  if (!(message && comparingMessage && (message === null || message === void 0 ? void 0 : message.messageType) !== 'admin' && (comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.messageType) !== 'admin' && message !== null && message !== void 0 && message.sender && comparingMessage !== null && comparingMessage !== void 0 && comparingMessage.sender && message !== null && message !== void 0 && message.createdAt && comparingMessage !== null && comparingMessage !== void 0 && comparingMessage.createdAt && message !== null && message !== void 0 && (_message$sender = message.sender) !== null && _message$sender !== void 0 && _message$sender.userId && comparingMessage !== null && comparingMessage !== void 0 && (_comparingMessage$sen = comparingMessage.sender) !== null && _comparingMessage$sen !== void 0 && _comparingMessage$sen.userId)) {\n    return false;\n  }\n\n  return (message === null || message === void 0 ? void 0 : message.sendingStatus) === (comparingMessage === null || comparingMessage === void 0 ? void 0 : comparingMessage.sendingStatus) && (message === null || message === void 0 ? void 0 : (_message$sender2 = message.sender) === null || _message$sender2 === void 0 ? void 0 : _message$sender2.userId) === (comparingMessage === null || comparingMessage === void 0 ? void 0 : (_comparingMessage$sen2 = comparingMessage.sender) === null || _comparingMessage$sen2 === void 0 ? void 0 : _comparingMessage$sen2.userId) && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage);\n};\n\nvar compareMessagesForGrouping = function compareMessagesForGrouping(prevMessage, currMessage, nextMessage) {\n  var sendingStatus = (currMessage === null || currMessage === void 0 ? void 0 : currMessage.sendingStatus) || '';\n  var isAcceptable = sendingStatus !== 'pending' && sendingStatus !== 'failed';\n  return [isSameGroup(prevMessage, currMessage) && isAcceptable, isSameGroup(currMessage, nextMessage) && isAcceptable];\n};\n\nvar hasOwnProperty = function hasOwnProperty(property) {\n  return function (payload) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n      return true;\n    }\n\n    return false;\n  };\n};\n\nvar passUnsuccessfullMessages = function passUnsuccessfullMessages(allMessages, newMessage) {\n  var _newMessage$sendingSt = newMessage.sendingStatus,\n      sendingStatus = _newMessage$sendingSt === void 0 ? UNDEFINED : _newMessage$sendingSt;\n\n  if (sendingStatus === SUCCEEDED$1 || sendingStatus === PENDING$1) {\n    var lastIndexOfSucceededMessage = allMessages.map(function (message) {\n      return message.sendingStatus || (message.isAdminMessage && message.isAdminMessage() ? SUCCEEDED$1 : UNDEFINED);\n    }).lastIndexOf(SUCCEEDED$1);\n\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      var messages = _toConsumableArray(allMessages);\n\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n\n  return [].concat(_toConsumableArray(allMessages), [newMessage]);\n};\n\nvar pxToNumber = function pxToNumber(px) {\n  if (typeof px === 'number') {\n    return px;\n  }\n\n  if (typeof px === 'string') {\n    var parsed = Number.parseFloat(px);\n\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n\n  return null;\n};\n\nvar messagesInitialState = {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: {\n    members: []\n  },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null\n};\n\nvar _getSendingMessageSta = getSendingMessageStatus(),\n    SUCCEEDED = _getSendingMessageSta.SUCCEEDED,\n    FAILED = _getSendingMessageSta.FAILED,\n    PENDING = _getSendingMessageSta.PENDING;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case RESET_STATE:\n      return messagesInitialState;\n\n    case RESET_MESSAGES:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: []\n      });\n\n    case GET_PREV_MESSAGES_START:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        loading: true\n      });\n\n    case CLEAR_SENT_MESSAGES:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: _toConsumableArray(state.allMessages.filter(function (m) {\n          return m.sendingStatus !== SUCCEEDED;\n        }))\n      });\n\n    case GET_PREV_MESSAGES_SUCESS:\n      {\n        var receivedMessages = action.payload.messages || [];\n        var _action$payload$curre = action.payload.currentGroupChannel,\n            currentGroupChannel = _action$payload$curre === void 0 ? {} : _action$payload$curre;\n        var stateChannel = state.currentGroupChannel || {};\n        var stateChannelUrl = stateChannel.url;\n        var actionChannelUrl = currentGroupChannel.url;\n\n        if (actionChannelUrl !== stateChannelUrl) {\n          return state;\n        } // remove duplicate messages\n\n\n        var duplicatedMessageIds = [];\n        var updatedAllMessages = state.allMessages.map(function (msg) {\n          var duplicatedMessage = receivedMessages.find(function (_ref) {\n            var messageId = _ref.messageId;\n            return compareIds(messageId, msg.messageId);\n          });\n\n          if (!duplicatedMessage) {\n            return msg;\n          }\n\n          duplicatedMessageIds.push(duplicatedMessage.messageId);\n          return duplicatedMessage.updatedAt > msg.updatedAt ? duplicatedMessage : msg;\n        });\n        var filteredNewMessages = duplicatedMessageIds.length > 0 ? receivedMessages.filter(function (msg) {\n          return !duplicatedMessageIds.find(function (messageId) {\n            return compareIds(messageId, msg.messageId);\n          });\n        }) : receivedMessages;\n        var hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n        var hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n        return _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, state), {}, {\n          loading: false,\n          initialized: true,\n          hasMore: action.payload.hasMore,\n          lastMessageTimeStamp: action.payload.lastMessageTimeStamp\n        }, hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom\n        }), hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp\n        }), {}, {\n          allMessages: [].concat(_toConsumableArray(filteredNewMessages), _toConsumableArray(updatedAllMessages))\n        });\n      }\n\n    case GET_NEXT_MESSAGES_SUCESS:\n      {\n        var _receivedMessages = action.payload.messages || [];\n\n        var _action$payload$curre2 = action.payload.currentGroupChannel,\n            _currentGroupChannel = _action$payload$curre2 === void 0 ? {} : _action$payload$curre2;\n\n        var _stateChannel = state.currentGroupChannel || {};\n\n        var _stateChannelUrl = _stateChannel.url;\n        var _actionChannelUrl = _currentGroupChannel.url;\n\n        if (_actionChannelUrl !== _stateChannelUrl) {\n          return state;\n        } // remove duplicate messages\n\n\n        var _duplicatedMessageIds = [];\n\n        var _updatedAllMessages = state.allMessages.map(function (msg) {\n          var duplicatedMessage = _receivedMessages.find(function (_ref2) {\n            var messageId = _ref2.messageId;\n            return compareIds(messageId, msg.messageId);\n          });\n\n          if (!duplicatedMessage) {\n            return msg;\n          }\n\n          _duplicatedMessageIds.push(duplicatedMessage.messageId);\n\n          return duplicatedMessage.updatedAt > msg.updatedAt ? duplicatedMessage : msg;\n        });\n\n        var _filteredNewMessages = _duplicatedMessageIds.length > 0 ? _receivedMessages.filter(function (msg) {\n          return !_duplicatedMessageIds.find(function (messageId) {\n            return compareIds(messageId, msg.messageId);\n          });\n        }) : _receivedMessages;\n\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          loading: false,\n          initialized: true,\n          hasMore: action.payload.hasMore,\n          lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n          allMessages: [].concat(_toConsumableArray(_updatedAllMessages), _toConsumableArray(_filteredNewMessages))\n        });\n      }\n\n    case GET_NEXT_MESSAGES_FAILURE:\n      {\n        return _objectSpread2({}, state);\n      }\n\n    case SEND_MESSAGEGE_START:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: [].concat(_toConsumableArray(state.allMessages), [_objectSpread2({}, action.payload)])\n      });\n\n    case SEND_MESSAGEGE_SUCESS:\n      {\n        var newMessages = state.allMessages.map(function (m) {\n          return compareIds(m.reqId, action.payload.reqId) ? action.payload : m;\n        });\n\n        _toConsumableArray(newMessages).sort(function (a, b) {\n          return a.sendingStatus && b.sendingStatus && a.sendingStatus === SUCCEEDED && (b.sendingStatus === PENDING || b.sendingStatus === FAILED) ? -1 : 1;\n        });\n\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: newMessages\n        });\n      }\n\n    case SEND_MESSAGEGE_FAILURE:\n      {\n        // eslint-disable-next-line no-param-reassign\n        action.payload.failed = true;\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: state.allMessages.map(function (m) {\n            return compareIds(m.reqId, action.payload.reqId) ? action.payload : m;\n          })\n        });\n      }\n\n    case SET_CURRENT_CHANNEL:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          currentGroupChannel: action.payload,\n          isInvalid: false\n        });\n      }\n\n    case SET_CHANNEL_INVALID:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          isInvalid: true\n        });\n      }\n\n    case UPDATE_UNREAD_COUNT:\n      {\n        var channel = action.payload.channel;\n\n        var _state$currentGroupCh = state.currentGroupChannel,\n            _currentGroupChannel2 = _state$currentGroupCh === void 0 ? {} : _state$currentGroupCh,\n            unreadCount = state.unreadCount;\n\n        var currentGroupChannelUrl = _currentGroupChannel2.url;\n\n        if (!compareIds(channel.url, currentGroupChannelUrl)) {\n          return state;\n        }\n\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          unreadSince: unreadCount + 1\n        });\n      }\n\n    case ON_MESSAGE_RECEIVED:\n      {\n        var _action$payload = action.payload,\n            _channel = _action$payload.channel,\n            message = _action$payload.message,\n            scrollToEnd = _action$payload.scrollToEnd;\n        var _unreadCount = 0;\n\n        var _state$currentGroupCh2 = state.currentGroupChannel,\n            _currentGroupChannel3 = _state$currentGroupCh2 === void 0 ? {} : _state$currentGroupCh2,\n            unreadSince = state.unreadSince;\n\n        var _currentGroupChannelUrl = _currentGroupChannel3.url;\n\n        if (!compareIds(_channel.url, _currentGroupChannelUrl)) {\n          return state;\n        } // Excluded overlapping messages\n\n\n        if (state.allMessages.some(function (msg) {\n          return msg.messageId === message.messageId;\n        })) {\n          return state;\n        } // Filter by userFilledQuery\n\n\n        if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n          return state;\n        }\n\n        _unreadCount = state.unreadCount + 1; // reset unreadCount if have to scrollToEnd\n\n        if (scrollToEnd) {\n          _unreadCount = 0;\n        }\n\n        if (message.isAdminMessage && message.isAdminMessage()) {\n          return _objectSpread2(_objectSpread2({}, state), {}, {\n            allMessages: passUnsuccessfullMessages(state.allMessages, message)\n          });\n        }\n\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          unreadCount: _unreadCount,\n          unreadSince: _unreadCount === 1 ? format(new Date(), 'p MMM dd') : unreadSince,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message)\n        });\n      }\n\n    case ON_MESSAGE_UPDATED:\n      {\n        var _action$payload2 = action.payload,\n            _channel2 = _action$payload2.channel,\n            _message = _action$payload2.message;\n\n        var _currentGroupChannelUrl2 = state.currentGroupChannel && state.currentGroupChannel.url || '';\n\n        if (!compareIds(_channel2.url, _currentGroupChannelUrl2)) {\n          return state; // Ignore event when it is not for the current channel\n        }\n\n        if (state.messageListParams && !filterMessageListParams(state.messageListParams, _message)) {\n          // Delete the message if it doesn't match to the params anymore\n          return _objectSpread2(_objectSpread2({}, state), {}, {\n            allMessages: state.allMessages.filter(function (m) {\n              return !compareIds(m.messageId, _message === null || _message === void 0 ? void 0 : _message.messageId);\n            })\n          });\n        }\n\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: state.allMessages.map(function (m) {\n            return compareIds(m.messageId, action.payload.message.messageId) ? action.payload.message : m;\n          })\n        });\n      }\n\n    case ON_MESSAGE_THREAD_INFO_UPDATED:\n      {\n        var _action$payload3 = action.payload,\n            _channel3 = _action$payload3.channel,\n            event = _action$payload3.event;\n        var channelUrl = event.channelUrl,\n            threadInfo = event.threadInfo,\n            targetMessageId = event.targetMessageId;\n\n        var _currentGroupChannelUrl3 = state.currentGroupChannel && state.currentGroupChannel.url || '';\n\n        if (!compareIds(_channel3.url, _currentGroupChannelUrl3) || !compareIds(_channel3.url, channelUrl)) {\n          return state; // Ignore event when it is not for the current channel\n        }\n\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: state.allMessages.map(function (m) {\n            if (compareIds(m.messageId, targetMessageId)) {\n              // eslint-disable-next-line no-param-reassign\n              m.threadInfo = threadInfo; // Upsert threadInfo to the target message\n            }\n\n            return m;\n          })\n        });\n      }\n\n    case RESEND_MESSAGEGE_START:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: state.allMessages.map(function (m) {\n          return compareIds(m.reqId, action.payload.reqId) ? action.payload : m;\n        })\n      });\n\n    case MARK_AS_READ:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        unreadCount: 0,\n        unreadSince: null\n      });\n\n    case ON_MESSAGE_DELETED:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: state.allMessages.filter(function (m) {\n          return !compareIds(m.messageId, action.payload);\n        })\n      });\n\n    case ON_MESSAGE_DELETED_BY_REQ_ID:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        allMessages: state.allMessages.filter(function (m) {\n          return !compareIds(m.reqId, action.payload);\n        })\n      });\n\n    case SET_EMOJI_CONTAINER:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          emojiContainer: action.payload\n        });\n      }\n\n    case ON_REACTION_UPDATED:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          allMessages: state.allMessages.map(function (m) {\n            if (compareIds(m.messageId, action.payload.messageId)) {\n              if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n                m.applyReactionEvent(action.payload);\n              }\n\n              return m;\n            }\n\n            return m;\n          })\n        });\n      }\n\n    case MESSAGE_LIST_PARAMS_CHANGED:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          messageListParams: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\n\n\nfunction useHandleChannelEvents(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n      sdkInit = _ref.sdkInit,\n      hasMoreToBottom = _ref.hasMoreToBottom;\n  var messagesDispatcher = _ref2.messagesDispatcher,\n      sdk = _ref2.sdk,\n      logger = _ref2.logger,\n      scrollRef = _ref2.scrollRef,\n      setQuoteMessage = _ref2.setQuoteMessage;\n  var channelUrl = currentGroupChannel && (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url);\n  useEffect(function () {\n    var messageReceiverId = uuidv4();\n\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      var ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n\n      ChannelHandler.onMessageReceived = function (channel, message) {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, channelUrl) && !hasMoreToBottom) {\n          var scrollToEnd = false;\n\n          try {\n            var current = scrollRef.current;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {//\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: ON_MESSAGE_RECEIVED,\n            payload: {\n              channel: channel,\n              message: message,\n              scrollToEnd: scrollToEnd\n            }\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(function () {\n                try {\n                  currentGroupChannel.markAsRead();\n                } catch (_unused) {//\n                }\n\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n\n        if (compareIds(channel.url, channelUrl) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: UPDATE_UNREAD_COUNT,\n            payload: {\n              channel: channel\n            }\n          });\n        }\n      };\n      /**\n       * We need to update current channel with the channel,\n       * when onReadReceiptUpdated or onDeliveryReceiptUpdated are called,\n       * because cachedReadReceiptStatus and cachedDeliveryReceiptStatus properties were changed\n       */\n\n\n      ChannelHandler.onReadReceiptUpdated = function (channel) {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onReadReceiptUpdated', channel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: channel\n          });\n        }\n      };\n\n      ChannelHandler.onDeliveryReceiptUpdated = function (channel) {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onDeliveryReceiptUpdated', channel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: channel\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = function (channel, message) {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: ON_MESSAGE_UPDATED,\n          payload: {\n            channel: channel,\n            message: message\n          }\n        });\n      };\n\n      ChannelHandler.onThreadInfoUpdated = function (channel, event) {\n        logger.info('Channel | useHandleChannelEvents: onThreadInfoUpdated', event);\n        messagesDispatcher({\n          type: ON_MESSAGE_THREAD_INFO_UPDATED,\n          payload: {\n            channel: channel,\n            event: event\n          }\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = function (_, messageId) {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        setQuoteMessage(null);\n        messagesDispatcher({\n          type: ON_MESSAGE_DELETED,\n          payload: messageId\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = function (_, reactionEvent) {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: ON_REACTION_UPDATED,\n          payload: reactionEvent\n        });\n      };\n\n      ChannelHandler.onChannelChanged = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = function (groupChannel) {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: SET_CURRENT_CHANNEL,\n            payload: groupChannel\n          });\n        }\n      }; // Add this channel event handler to the SendBird object.\n\n\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n\n    return function () {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nfunction useSetChannel(_ref, _ref2) {\n  var channelUrl = _ref.channelUrl,\n      sdkInit = _ref.sdkInit;\n  var messagesDispatcher = _ref2.messagesDispatcher,\n      sdk = _ref2.sdk,\n      logger = _ref2.logger;\n  useEffect(function () {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl).then(function (groupChannel) {\n        logger.info('Channel | useSetChannel fetched channel', groupChannel);\n        messagesDispatcher({\n          type: SET_CURRENT_CHANNEL,\n          payload: groupChannel\n        });\n        logger.info('Channel: Mark as read', groupChannel); // this order is important - this mark as read should update the event handler up above\n\n        try {\n          groupChannel.markAsRead();\n        } catch (_unused) {//\n        }\n      }).catch(function (e) {\n        logger.warning('Channel | useSetChannel fetch channel failed', {\n          channelUrl: channelUrl,\n          e: e\n        });\n        messagesDispatcher({\n          type: SET_CHANNEL_INVALID\n        });\n      });\n      sdk.getAllEmoji(function (emojiContainer_, err) {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: SET_EMOJI_CONTAINER,\n          payload: emojiContainer_\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nvar PREV_RESULT_SIZE = 30;\nvar NEXT_RESULT_SIZE = 10;\n\nvar getLatestMessageTimeStamp = function getLatestMessageTimeStamp() {\n  var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var latestMessage = messages[messages.length - 1];\n  return latestMessage && latestMessage.createdAt || null;\n};\n\nfunction useInitialMessagesFetch(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n      userFilledMessageListQuery = _ref.userFilledMessageListQuery,\n      intialTimeStamp = _ref.intialTimeStamp,\n      replyType = _ref.replyType;\n  var sdk = _ref2.sdk,\n      logger = _ref2.logger,\n      messagesDispatcher = _ref2.messagesDispatcher;\n  var channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(function () {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: RESET_MESSAGES\n    });\n\n    if (sdk && sdk.MessageListParams && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      var messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n\n      if (replyType && replyType === 'QUOTE_REPLY') {\n        messageListParams.includeThreadInfo = true;\n        messageListParams.includeParentMessageInfo = true;\n        messageListParams.replyType = 'only_reply_to_channel';\n      }\n\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach(function (key) {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n\n      if (replyType && replyType === 'QUOTE_REPLY' || userFilledMessageListQuery) {\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams\n        });\n      }\n\n      logger.info('Channel: Fetching messages', {\n        currentGroupChannel: currentGroupChannel,\n        userFilledMessageListQuery: userFilledMessageListQuery\n      });\n      messagesDispatcher({\n        type: GET_PREV_MESSAGES_START\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(intialTimeStamp, messageListParams).then(function (messages) {\n          var hasMore = messages && messages.length > 0;\n          var lastMessageTimeStamp = hasMore ? messages[0].createdAt : null;\n          var latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages); // to make sure there are no more messages below\n\n          var nextMessageListParams = new sdk.MessageListParams();\n          nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n          nextMessageListParams.isInclusive = true;\n          nextMessageListParams.includeReplies = false;\n          nextMessageListParams.includeReaction = true;\n\n          if (replyType && replyType === 'QUOTE_REPLY') {\n            nextMessageListParams.includeThreadInfo = true;\n            nextMessageListParams.includeParentMessageInfo = true;\n            nextMessageListParams.replyType = 'only_reply_to_channel';\n          }\n\n          if (userFilledMessageListQuery) {\n            Object.keys(userFilledMessageListQuery).forEach(function (key) {\n              nextMessageListParams[key] = userFilledMessageListQuery[key];\n            });\n          }\n\n          currentGroupChannel.getMessagesByTimestamp(latestFetchedMessageTimeStamp || new Date().getTime(), nextMessageListParams).then(function (nextMessages) {\n            messagesDispatcher({\n              type: GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: messages,\n                hasMore: hasMore,\n                lastMessageTimeStamp: lastMessageTimeStamp,\n                currentGroupChannel: currentGroupChannel,\n                latestFetchedMessageTimeStamp: latestFetchedMessageTimeStamp,\n                hasMoreToBottom: nextMessages && nextMessages.length > 0\n              }\n            });\n          });\n        }).catch(function (error) {\n          logger.error('Channel: Fetching messages failed', error);\n          messagesDispatcher({\n            type: GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages: [],\n              hasMore: false,\n              lastMessageTimeStamp: 0,\n              currentGroupChannel: currentGroupChannel\n            }\n          });\n        }).finally(function () {\n          if (!intialTimeStamp) {\n            setTimeout(function () {\n              return scrollIntoLast();\n            });\n          }\n\n          try {\n            currentGroupChannel.markAsRead();\n          } catch (_unused) {//\n          }\n        });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(new Date().getTime(), messageListParams).then(function (messages) {\n          var hasMore = messages && messages.length > 0;\n          var lastMessageTimeStamp = hasMore ? messages[0].createdAt : null;\n          var latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n          messagesDispatcher({\n            type: GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages: messages,\n              hasMore: hasMore,\n              lastMessageTimeStamp: lastMessageTimeStamp,\n              currentGroupChannel: currentGroupChannel,\n              latestFetchedMessageTimeStamp: latestFetchedMessageTimeStamp,\n              hasMoreToBottom: false\n            }\n          });\n        }).catch(function (error) {\n          logger.error('Channel: Fetching messages failed', error);\n          messagesDispatcher({\n            type: GET_PREV_MESSAGES_SUCESS,\n            payload: {\n              messages: [],\n              hasMore: false,\n              lastMessageTimeStamp: 0,\n              currentGroupChannel: currentGroupChannel\n            }\n          });\n        }).finally(function () {\n          if (!intialTimeStamp) {\n            setTimeout(function () {\n              return scrollIntoLast();\n            });\n          }\n\n          try {\n            currentGroupChannel.markAsRead();\n          } catch (_unused2) {//\n          }\n        });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nfunction useHandleReconnect(_a, _b) {\n  var isOnline = _a.isOnline,\n      replyType = _a.replyType;\n  var logger = _b.logger,\n      sdk = _b.sdk,\n      currentGroupChannel = _b.currentGroupChannel,\n      messagesDispatcher = _b.messagesDispatcher,\n      userFilledMessageListQuery = _b.userFilledMessageListQuery;\n  useEffect(function () {\n    var wasOffline = !isOnline;\n    return function () {\n      var _a; // state changed from offline to online\n\n\n      if (wasOffline && (currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.url)) {\n        logger.info('Refreshing conversation state');\n        var useReaction = ((_a = sdk === null || sdk === void 0 ? void 0 : sdk.appInfo) === null || _a === void 0 ? void 0 : _a.isUsingReaction) || false;\n        var messageListParams_1 = new sdk.MessageListParams();\n        messageListParams_1.prevResultSize = 30;\n        messageListParams_1.isInclusive = true;\n        messageListParams_1.includeReplies = false;\n        messageListParams_1.includeReaction = useReaction;\n\n        if (replyType && replyType === 'QUOTE_REPLY') {\n          messageListParams_1.includeThreadInfo = true;\n          messageListParams_1.includeParentMessageInfo = true;\n          messageListParams_1.replyType = 'only_reply_to_channel';\n        }\n\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach(function (key) {\n            messageListParams_1[key] = userFilledMessageListQuery[key];\n          });\n        }\n\n        logger.info('Channel: Fetching messages', {\n          currentGroupChannel: currentGroupChannel,\n          userFilledMessageListQuery: userFilledMessageListQuery\n        });\n        messagesDispatcher({\n          type: GET_PREV_MESSAGES_START,\n          payload: null\n        });\n        sdk.GroupChannel.getChannel(currentGroupChannel.url).then(function (groupChannel) {\n          var lastMessageTime = new Date().getTime();\n          groupChannel.getMessagesByTimestamp(lastMessageTime, messageListParams_1).then(function (messages) {\n            messagesDispatcher({\n              type: CLEAR_SENT_MESSAGES,\n              payload: null\n            });\n            var hasMore = (messages === null || messages === void 0 ? void 0 : messages.length) > 0;\n            var lastMessageTimeStamp = hasMore ? messages[0].createdAt : null;\n            messagesDispatcher({\n              type: GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: messages,\n                hasMore: hasMore,\n                lastMessageTimeStamp: lastMessageTimeStamp,\n                currentGroupChannel: currentGroupChannel\n              }\n            });\n            setTimeout(function () {\n              return scrollIntoLast();\n            });\n          }).catch(function (error) {\n            logger.error('Channel: Fetching messages failed', error);\n          }).finally(function () {\n            var _a;\n\n            try {\n              (_a = currentGroupChannel.markAsRead) === null || _a === void 0 ? void 0 : _a.call(currentGroupChannel);\n            } catch (_b) {//\n            }\n          });\n        });\n      }\n    };\n  }, [isOnline, replyType]);\n}\n\nfunction useScrollCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n      lastMessageTimeStamp = _ref.lastMessageTimeStamp,\n      userFilledMessageListQuery = _ref.userFilledMessageListQuery,\n      replyType = _ref.replyType;\n  var hasMore = _ref2.hasMore,\n      logger = _ref2.logger,\n      messagesDispatcher = _ref2.messagesDispatcher,\n      sdk = _ref2.sdk;\n  return useCallback(function (cb) {\n    if (!hasMore) {\n      return;\n    }\n\n    var _sdk$appInfo = sdk.appInfo,\n        appInfo = _sdk$appInfo === void 0 ? {} : _sdk$appInfo;\n    var useReaction = appInfo.isUsingReaction || false;\n    var messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach(function (key) {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n\n    logger.info('Channel: Fetching messages', {\n      currentGroupChannel: currentGroupChannel,\n      userFilledMessageListQuery: userFilledMessageListQuery\n    });\n    currentGroupChannel.getMessagesByTimestamp(lastMessageTimeStamp || new Date().getTime(), messageListParams).then(function (messages) {\n      var hasMoreMessages = messages && messages.length > 0;\n      var lastMessageTs = hasMoreMessages ? messages[0].createdAt : null;\n      messagesDispatcher({\n        type: GET_PREV_MESSAGES_SUCESS,\n        payload: {\n          messages: messages,\n          hasMore: hasMoreMessages,\n          lastMessageTimeStamp: lastMessageTs,\n          currentGroupChannel: currentGroupChannel\n        }\n      });\n      cb([messages, null]);\n    }).catch(function (error) {\n      logger.error('Channel: Fetching messages failed', error);\n      messagesDispatcher({\n        type: GET_PREV_MESSAGES_SUCESS,\n        payload: {\n          messages: [],\n          hasMore: false,\n          lastMessageTimeStamp: 0,\n          currentGroupChannel: currentGroupChannel\n        }\n      });\n      cb([null, error]);\n    }).finally(function () {\n      try {\n        currentGroupChannel.markAsRead();\n      } catch (_unused) {//\n      }\n    });\n  }, [currentGroupChannel, lastMessageTimeStamp, replyType]);\n}\n\nvar RESULT_SIZE = 30;\n\nfunction useScrollDownCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n      latestFetchedMessageTimeStamp = _ref.latestFetchedMessageTimeStamp,\n      userFilledMessageListQuery = _ref.userFilledMessageListQuery,\n      hasMoreToBottom = _ref.hasMoreToBottom,\n      replyType = _ref.replyType;\n  var logger = _ref2.logger,\n      messagesDispatcher = _ref2.messagesDispatcher,\n      sdk = _ref2.sdk;\n  return useCallback(function (cb) {\n    if (!hasMoreToBottom) {\n      return;\n    }\n\n    var _sdk$appInfo = sdk.appInfo,\n        appInfo = _sdk$appInfo === void 0 ? {} : _sdk$appInfo;\n    var useReaction = appInfo.isUsingReaction || false;\n    var messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach(function (key) {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n\n    logger.info('Channel: Fetching later messages', {\n      currentGroupChannel: currentGroupChannel,\n      userFilledMessageListQuery: userFilledMessageListQuery\n    });\n    currentGroupChannel.getMessagesByTimestamp(latestFetchedMessageTimeStamp || new Date().getTime(), messageListParams).then(function (messages) {\n      var messagesLength = messages && messages.length || 0;\n      var hasMoreMessages = messagesLength > 0 && messageListParams.nextResultSize === messagesLength;\n      var lastMessageTs = hasMoreMessages ? messages[messages.length - 1].createdAt : null;\n      messagesDispatcher({\n        type: GET_NEXT_MESSAGES_SUCESS,\n        payload: {\n          messages: messages,\n          hasMoreToBottom: hasMoreMessages,\n          latestFetchedMessageTimeStamp: lastMessageTs,\n          currentGroupChannel: currentGroupChannel\n        }\n      });\n      cb([messages, null]);\n    }).catch(function (error) {\n      logger.error('Channel: Fetching later messages failed', error);\n      messagesDispatcher({\n        type: GET_NEXT_MESSAGES_FAILURE,\n        payload: {\n          messages: [],\n          hasMoreToBottom: false,\n          latestFetchedMessageTimeStamp: 0,\n          currentGroupChannel: currentGroupChannel\n        }\n      });\n      cb([null, error]);\n    }).finally(function () {\n      try {\n        currentGroupChannel.markAsRead();\n      } catch (_unused) {//\n      }\n    });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom, replyType]);\n}\n\nfunction useDeleteMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n      messagesDispatcher = _ref.messagesDispatcher;\n  var logger = _ref2.logger;\n  return useCallback(function (message, cb) {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    var requestState = message.requestState;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState); // Message is only on local\n\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId\n      });\n\n      if (cb) {\n        cb();\n      }\n\n      return;\n    } // Message is on server\n\n\n    currentGroupChannel.deleteMessage(message, function (err) {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n\n      if (cb) {\n        cb(err);\n      }\n\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: ON_MESSAGE_DELETED,\n          payload: message.messageId\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nfunction useUpdateMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n      messagesDispatcher = _ref.messagesDispatcher,\n      onBeforeUpdateUserMessage = _ref.onBeforeUpdateUserMessage;\n  var logger = _ref2.logger,\n      pubSub = _ref2.pubSub,\n      sdk = _ref2.sdk;\n  return useCallback(function (messageId, text, cb) {\n    var createParamsDefault = function createParamsDefault(txt) {\n      var params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    var createCustomPrams = onBeforeUpdateUserMessage && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    var params = onBeforeUpdateUserMessage ? onBeforeUpdateUserMessage(text) : createParamsDefault(text);\n    currentGroupChannel.updateUserMessage(messageId, params, function (r, e) {\n      logger.info('Channel: Updating message!', params);\n      var swapParams = sdk.getErrorFirstCallback();\n      var message = r;\n      var err = e;\n\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n\n      if (cb) {\n        cb(err, message);\n      }\n\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message: message\n          }\n        });\n        pubSub.publish(UPDATE_USER_MESSAGE, {\n          message: message,\n          channel: currentGroupChannel\n        });\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nfunction useResendMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n      messagesDispatcher = _ref.messagesDispatcher;\n  var logger = _ref2.logger;\n  return useCallback(function (failedMessage) {\n    logger.info('Channel: Resending message has started', failedMessage);\n    var messageType = failedMessage.messageType,\n        file = failedMessage.file;\n\n    if (failedMessage && typeof failedMessage.isResendable === 'function' && failedMessage.isResendable()) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: RESEND_MESSAGEGE_START,\n        payload: failedMessage\n      }); // userMessage\n\n      if (messageType === 'user') {\n        currentGroupChannel.resendUserMessage(failedMessage).then(function (message) {\n          logger.info('Channel: Resending message success!', {\n            message: message\n          });\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_SUCESS,\n            payload: message\n          });\n        }).catch(function (e) {\n          logger.warning('Channel: Resending message failed!', {\n            e: e\n          }); // eslint-disable-next-line no-param-reassign\n\n          failedMessage.requestState = 'failed';\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_FAILURE,\n            payload: failedMessage\n          });\n        }); // eslint-disable-next-line no-param-reassign\n\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: RESEND_MESSAGEGE_START,\n          payload: failedMessage\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel.resendFileMessage(failedMessage, file).then(function (message) {\n          logger.info('Channel: Resending file message success!', {\n            message: message\n          });\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_SUCESS,\n            payload: message\n          });\n        }).catch(function (e) {\n          logger.warning('Channel: Resending file message failed!', {\n            e: e\n          }); // eslint-disable-next-line no-param-reassign\n\n          failedMessage.requestState = 'failed';\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_FAILURE,\n            payload: failedMessage\n          });\n        }); // eslint-disable-next-line no-param-reassign\n\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: RESEND_MESSAGEGE_START,\n          payload: failedMessage\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nfunction useSendMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n      onBeforeSendUserMessage = _ref.onBeforeSendUserMessage;\n  var sdk = _ref2.sdk,\n      logger = _ref2.logger,\n      pubSub = _ref2.pubSub,\n      messagesDispatcher = _ref2.messagesDispatcher;\n  var messageInputRef = useRef(null);\n  var sendMessage = useCallback(function () {\n    var quoteMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var text = messageInputRef.current.value;\n\n    var createParamsDefault = function createParamsDefault(txt) {\n      var message = typeof txt === 'string' ? txt.trim() : txt;\n      var params = new sdk.UserMessageParams();\n      params.message = message;\n\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n\n      return params;\n    };\n\n    var createCustomPrams = onBeforeSendUserMessage && typeof onBeforeSendUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n    }\n\n    var params = onBeforeSendUserMessage ? onBeforeSendUserMessage(text, quoteMessage) : createParamsDefault(text);\n    logger.info('Channel: Sending message has started', params);\n    var pendingMsg = currentGroupChannel.sendUserMessage(params, function (res, err) {\n      var swapParams = sdk.getErrorFirstCallback();\n      var message = res;\n      var error = err;\n\n      if (swapParams) {\n        message = err;\n        error = res;\n      } // sending params instead of pending message\n      // to make sure that we can resend the message once it fails\n\n\n      if (error) {\n        logger.warning('Channel: Sending message failed!', {\n          message: message\n        });\n        messagesDispatcher({\n          type: SEND_MESSAGEGE_FAILURE,\n          payload: message\n        });\n        return;\n      }\n\n      logger.info('Channel: Sending message success!', message);\n      messagesDispatcher({\n        type: SEND_MESSAGEGE_SUCESS,\n        payload: message\n      });\n    });\n    pubSub.publish(SEND_MESSAGE_START, {\n      /* pubSub is used instead of messagesDispatcher\n        to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n      message: pendingMsg,\n      channel: currentGroupChannel\n    });\n    setTimeout(function () {\n      return scrollIntoLast();\n    });\n  }, [currentGroupChannel, onBeforeSendUserMessage]);\n  return [messageInputRef, sendMessage];\n}\n\nfunction useSendFileMessageCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel,\n      onBeforeSendFileMessage = _ref.onBeforeSendFileMessage,\n      _ref$imageCompression = _ref.imageCompression,\n      imageCompression = _ref$imageCompression === void 0 ? {} : _ref$imageCompression;\n  var sdk = _ref2.sdk,\n      logger = _ref2.logger,\n      pubSub = _ref2.pubSub,\n      messagesDispatcher = _ref2.messagesDispatcher;\n  var sendMessage = useCallback(function (file) {\n    var quoteMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var compressionRate = imageCompression.compressionRate,\n        resizingWidth = imageCompression.resizingWidth,\n        resizingHeight = imageCompression.resizingHeight;\n    var createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n    var compressibleFileType = file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg';\n    var compressibleRatio = compressionRate > 0 && compressionRate < 1; // pxToNumber returns null if values are invalid\n\n    var compressibleDiamensions = pxToNumber(resizingWidth) || pxToNumber(resizingHeight);\n    var canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    var createParamsDefault = function createParamsDefault(file_) {\n      var params = new sdk.FileMessageParams();\n      params.file = file_;\n\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n\n      return params;\n    };\n\n    if (canCompressImage) {\n      // Using image compression\n      try {\n        var image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n\n        image.onload = function () {\n          URL.revokeObjectURL(image.src);\n          var canvas = document.createElement('canvas');\n          var imageWdith = image.naturalWidth || image.width;\n          var imageHeight = image.naturalHeight || image.height;\n          var targetWidth = pxToNumber(resizingWidth) || imageWdith;\n          var targetHeight = pxToNumber(resizingHeight) || imageHeight; // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          var context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(function (newImageBlob) {\n            var compressedFile = new File([newImageBlob], file.name, {\n              type: file.type\n            });\n\n            if (createCustomParams) {\n              logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n            }\n\n            var params = createCustomParams ? onBeforeSendFileMessage(compressedFile, quoteMessage) : createParamsDefault(compressedFile);\n            logger.info('Channel: Uploading file message start!', params);\n            var pendingMessage = currentGroupChannel.sendFileMessage(params, function (response, err) {\n              var swapParams = sdk.getErrorFirstCallback();\n\n              var _ref3 = swapParams ? [err, response] : [response, err],\n                  _ref4 = _slicedToArray(_ref3, 2),\n                  message = _ref4[0],\n                  error = _ref4[1];\n\n              if (error) {\n                // sending params instead of pending message\n                // to make sure that we can resend the message once it fails\n                logger.error('Channel: Sending file message failed!', {\n                  message: message,\n                  error: error\n                });\n                message.localUrl = URL.createObjectURL(compressedFile);\n                message.file = compressedFile;\n                messagesDispatcher({\n                  type: SEND_MESSAGEGE_FAILURE,\n                  payload: message\n                });\n                return;\n              }\n\n              logger.info('Channel: Sending file message success!', message);\n              messagesDispatcher({\n                type: SEND_MESSAGEGE_SUCESS,\n                payload: message\n              });\n            });\n            pubSub.publish(SEND_MESSAGE_START, {\n              /* pubSub is used instead of messagesDispatcher\n                to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n              message: _objectSpread2(_objectSpread2({}, pendingMessage), {}, {\n                url: URL.createObjectURL(compressedFile),\n                // pending thumbnail message seems to be failed\n                requestState: 'pending'\n              }),\n              channel: currentGroupChannel\n            });\n            setTimeout(function () {\n              return scrollIntoLast();\n            }, 1000);\n          }, file.type, compressionRate);\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else {\n      // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n\n      var params = onBeforeSendFileMessage ? onBeforeSendFileMessage(file, quoteMessage) : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n      var pendingMsg = currentGroupChannel.sendFileMessage(params, function (response, err) {\n        var swapParams = sdk.getErrorFirstCallback();\n\n        var _ref5 = swapParams ? [err, response] : [response, err],\n            _ref6 = _slicedToArray(_ref5, 2),\n            message = _ref6[0],\n            error = _ref6[1];\n\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', {\n            message: message,\n            error: error\n          });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: SEND_MESSAGEGE_FAILURE,\n            payload: message\n          });\n          return;\n        }\n\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: SEND_MESSAGEGE_SUCESS,\n          payload: message\n        });\n      });\n      pubSub.publish(SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: _objectSpread2(_objectSpread2({}, pendingMsg), {}, {\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending'\n        }),\n        channel: currentGroupChannel\n      });\n      setTimeout(function () {\n        return scrollIntoLast();\n      }, 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n\nvar ReactionButton = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var className = props.className,\n      width = props.width,\n      height = props.height,\n      selected = props.selected,\n      _onClick = props.onClick,\n      children = props.children;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), [\"sendbird-reaction-button\".concat(selected ? '--selected' : '')]).join(' '),\n    ref: ref,\n    role: \"button\",\n    style: {\n      width: typeof width === 'string' ? \"\".concat(width.slice(0, -2) - 2, \"px\") : \"\".concat(width - 2, \"px\"),\n      height: typeof height === 'string' ? \"\".concat(height.slice(0, -2) - 2, \"px\") : \"\".concat(height - 2, \"px\")\n    },\n    onClick: function onClick(e) {\n      return _onClick(e);\n    },\n    onKeyDown: function onKeyDown(e) {\n      return _onClick(e);\n    },\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-reaction-button__inner\"\n  }, children));\n});\nReactionButton.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  selected: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.element.isRequired\n};\nReactionButton.defaultProps = {\n  className: '',\n  width: '36px',\n  height: '36px',\n  selected: false,\n  onClick: function onClick() {}\n};\n\nfunction useMemoizedEmojiListItems(_ref, _ref2) {\n  var emojiContainer = _ref.emojiContainer,\n      toggleReaction = _ref.toggleReaction;\n  var useReaction = _ref2.useReaction,\n      logger = _ref2.logger,\n      userId = _ref2.userId,\n      emojiAllList = _ref2.emojiAllList;\n  /* eslint-disable react/prop-types */\n\n  return useMemo(function () {\n    return function (_ref3) {\n      var parentRef = _ref3.parentRef,\n          parentContainRef = _ref3.parentContainRef,\n          message = _ref3.message,\n          closeDropdown = _ref3.closeDropdown,\n          _ref3$spaceFromTrigge = _ref3.spaceFromTrigger,\n          spaceFromTrigger = _ref3$spaceFromTrigge === void 0 ? {} : _ref3$spaceFromTrigge;\n\n      if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n        logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n        return null;\n      }\n\n      return /*#__PURE__*/React__default.createElement(EmojiListItems, {\n        parentRef: parentRef,\n        parentContainRef: parentContainRef,\n        closeDropdown: closeDropdown,\n        spaceFromTrigger: spaceFromTrigger\n      }, emojiAllList.map(function (emoji) {\n        var reactedReaction = message.reactions.filter(function (reaction) {\n          return reaction.key === emoji.key;\n        })[0];\n        var isReacted = reactedReaction ? !(reactedReaction.userIds.indexOf(userId) < 0) : false;\n        return /*#__PURE__*/React__default.createElement(ReactionButton, {\n          key: emoji.key,\n          width: \"36px\",\n          height: \"36px\",\n          selected: isReacted,\n          onClick: function onClick() {\n            closeDropdown();\n            toggleReaction(message, emoji.key, isReacted);\n          }\n        }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n          url: emoji.url,\n          width: \"28px\",\n          height: \"28px\",\n          defaultComponent: /*#__PURE__*/React__default.createElement(Icon, {\n            width: \"28px\",\n            height: \"28px\",\n            type: IconTypes.QUESTION\n          })\n        }));\n      }));\n    };\n  }, [emojiContainer, toggleReaction]);\n}\n\nfunction useToggleReactionCallback(_ref, _ref2) {\n  var currentGroupChannel = _ref.currentGroupChannel;\n  var logger = _ref2.logger;\n  return useCallback(function (message, key, isReacted) {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key).then(function (res) {\n        logger.info('Delete reaction success', res);\n      }).catch(function (err) {\n        logger.warning('Delete reaction failed', err);\n      });\n      return;\n    }\n\n    currentGroupChannel.addReaction(message, key).then(function (res) {\n      logger.info('Add reaction success', res);\n    }).catch(function (err) {\n      logger.warning('Add reaction failed', err);\n    });\n  }, [currentGroupChannel]);\n}\n\nfunction useScrollToMessage(_a, _b) {\n  var setIntialTimeStamp = _a.setIntialTimeStamp,\n      setAnimatedMessageId = _a.setAnimatedMessageId,\n      allMessages = _a.allMessages;\n  var logger = _b.logger;\n  return useCallback(function (createdAt, messageId) {\n    var isPresent = allMessages.find(function (m) {\n      return m.messageId === messageId;\n    });\n    setAnimatedMessageId(null);\n    setTimeout(function () {\n      if (isPresent) {\n        logger.info('Channel: scroll to message - message is present');\n        setAnimatedMessageId(messageId);\n      } else {\n        logger.info('Channel: scroll to message - fetching older messages');\n        setIntialTimeStamp(null);\n        setIntialTimeStamp(createdAt);\n        setAnimatedMessageId(messageId);\n      }\n    });\n  }, [setIntialTimeStamp, setAnimatedMessageId, allMessages]);\n}\n\nvar MessageStatusTypes = getOutgoingMessageStates();\n\nfunction MessageStatus(_ref) {\n  var _iconType, _iconColor, _channel$getUnreadMem, _channel$getUndeliver;\n\n  var className = _ref.className,\n      message = _ref.message,\n      channel = _ref.channel;\n\n  var _useContext = useContext(LocalizationContext),\n      dateLocale = _useContext.dateLocale;\n\n  var showMessageStatusIcon = (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && !(channel !== null && channel !== void 0 && channel.isSuper) && !(channel !== null && channel !== void 0 && channel.isPublic) && !(channel !== null && channel !== void 0 && channel.isBroadcast);\n  var iconType = (_iconType = {}, _defineProperty(_iconType, MessageStatusTypes.SENT, IconTypes.DONE), _defineProperty(_iconType, MessageStatusTypes.DELIVERED, IconTypes.DONE_ALL), _defineProperty(_iconType, MessageStatusTypes.READ, IconTypes.DONE_ALL), _defineProperty(_iconType, MessageStatusTypes.FAILED, IconTypes.ERROR), _iconType);\n  var iconColor = (_iconColor = {}, _defineProperty(_iconColor, MessageStatusTypes.SENT, IconColors.SENT), _defineProperty(_iconColor, MessageStatusTypes.DELIVERED, IconColors.SENT), _defineProperty(_iconColor, MessageStatusTypes.READ, IconColors.READ), _defineProperty(_iconColor, MessageStatusTypes.FAILED, IconColors.ERROR), _iconColor);\n  var messageStatus = useMemo(function () {\n    return getOutgoingMessageState(channel, message);\n  }, [channel === null || channel === void 0 ? void 0 : (_channel$getUnreadMem = channel.getUnreadMemberCount) === null || _channel$getUnreadMem === void 0 ? void 0 : _channel$getUnreadMem.call(channel, message), channel === null || channel === void 0 ? void 0 : (_channel$getUndeliver = channel.getUndeliveredMemberCount) === null || _channel$getUndeliver === void 0 ? void 0 : _channel$getUndeliver.call(channel, message)]);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-message-status']).join(' ')\n  }, showMessageStatusIcon && (messageStatus === MessageStatusTypes.PENDING ? /*#__PURE__*/React__default.createElement(Loader, {\n    className: \"sendbird-message-status__icon\",\n    width: \"16px\",\n    height: \"16px\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SPINNER,\n    fillColor: IconColors.PRIMARY,\n    width: \"16px\",\n    height: \"16px\"\n  })) : /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-message-status__icon\",\n    type: iconType[messageStatus] || IconTypes.ERROR,\n    fillColor: iconColor[messageStatus],\n    width: \"16px\",\n    height: \"16px\"\n  })), isSentStatus(messageStatus) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-message-status__text\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, format(message === null || message === void 0 ? void 0 : message.createdAt, 'p', {\n    locale: dateLocale\n  })));\n}\n\nMessageStatus.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  message: PropTypes.shape({\n    createdAt: PropTypes.number,\n    sender: PropTypes.shape({\n      friendName: PropTypes.string,\n      nickname: PropTypes.string,\n      userId: PropTypes.string,\n      profileUrl: PropTypes.string\n    }),\n    sendingStatus: PropTypes.string\n  }),\n  channel: PropTypes.shape({\n    isGroupChannel: PropTypes.func,\n    isSuper: PropTypes.bool,\n    isBroadcast: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    getUnreadMemberCount: PropTypes.func,\n    getUndeliveredMemberCount: PropTypes.func\n  })\n};\nMessageStatus.defaultProps = {\n  className: '',\n  message: null,\n  channel: null\n};\n\nfunction MessageItemMenu(_a) {\n  var _b;\n\n  var className = _a.className,\n      message = _a.message,\n      channel = _a.channel,\n      _c = _a.isByMe,\n      isByMe = _c === void 0 ? false : _c,\n      _d = _a.disabled,\n      disabled = _d === void 0 ? false : _d,\n      replyType = _a.replyType,\n      showEdit = _a.showEdit,\n      showRemove = _a.showRemove,\n      resendMessage = _a.resendMessage,\n      setQuoteMessage = _a.setQuoteMessage,\n      setSupposedHover = _a.setSupposedHover;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var triggerRef = useRef(null);\n  var containerRef = useRef(null);\n  var showMenuItemCopy = isUserMessage(message);\n  var showMenuItemReply = replyType === 'QUOTE_REPLY' && !isFailedMessage(channel, message) && !isPendingMessage(channel, message);\n  var showMenuItemEdit = isUserMessage(message) && isSentMessage(channel, message) && isByMe;\n  var showMenuItemResend = isFailedMessage(channel, message) && ((_b = message === null || message === void 0 ? void 0 : message.isResendable) === null || _b === void 0 ? void 0 : _b.call(message)) && isByMe;\n  var showMenuItemDelete = !isPendingMessage(channel, message) && isByMe;\n\n  if (!(showMenuItemCopy || showMenuItemReply || showMenuItemEdit || showMenuItemResend || showMenuItemDelete)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-message-item-menu']),\n    ref: containerRef\n  }, /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(IconButton, {\n        className: \"sendbird-message-item-menu__trigger\",\n        ref: triggerRef,\n        width: \"32px\",\n        height: \"32px\",\n        onClick: function onClick() {\n          toggleDropdown();\n          setSupposedHover(true);\n        },\n        onBlur: function onBlur() {\n          setSupposedHover(false);\n        }\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        className: \"sendbird-message-item-menu__trigger__icon\",\n        type: IconTypes.MORE,\n        fillColor: IconColors.CONTENT_INVERSE,\n        width: \"24px\",\n        height: \"24px\"\n      }));\n    },\n    menuItems: function menuItems(close) {\n      var _a;\n\n      var closeDropdown = function closeDropdown() {\n        close();\n        setSupposedHover(false);\n      };\n\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        className: \"sendbird-message-item-menu__list\",\n        parentRef: triggerRef,\n        parentContainRef: containerRef,\n        closeDropdown: closeDropdown,\n        openLeft: isByMe\n      }, showMenuItemCopy && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-copy\",\n        onClick: function onClick() {\n          var _a;\n\n          copyToClipboard((_a = message) === null || _a === void 0 ? void 0 : _a.message);\n          closeDropdown();\n        }\n      }, stringSet.MESSAGE_MENU__COPY), showMenuItemReply && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-reply\",\n        onClick: function onClick() {\n          setQuoteMessage(message);\n          closeDropdown();\n        },\n        disable: (message === null || message === void 0 ? void 0 : message.parentMessageId) > 0\n      }, stringSet.MESSAGE_MENU__REPLY), showMenuItemEdit && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-edit\",\n        onClick: function onClick() {\n          if (!disabled) {\n            showEdit(true);\n            closeDropdown();\n          }\n        }\n      }, stringSet.MESSAGE_MENU__EDIT), showMenuItemResend && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-resend\",\n        onClick: function onClick() {\n          if (!disabled) {\n            resendMessage(message);\n            closeDropdown();\n          }\n        }\n      }, stringSet.MESSAGE_MENU__RESEND), showMenuItemDelete && /*#__PURE__*/React__default.createElement(MenuItem, {\n        className: \"sendbird-message-item-menu__list__menu-item menu-item-delete\",\n        onClick: function onClick() {\n          if (!disabled) {\n            showRemove(true);\n            closeDropdown();\n          }\n        },\n        disable: ((_a = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _a === void 0 ? void 0 : _a.replyCount) > 0\n      }, stringSet.MESSAGE_MENU__DELETE));\n    }\n  }));\n}\n\nfunction MessageItemReactionMenu(_a) {\n  var className = _a.className,\n      message = _a.message,\n      channel = _a.channel,\n      userId = _a.userId,\n      _b = _a.spaceFromTrigger,\n      spaceFromTrigger = _b === void 0 ? {} : _b,\n      emojiContainer = _a.emojiContainer,\n      toggleReaction = _a.toggleReaction,\n      setSupposedHover = _a.setSupposedHover;\n  var triggerRef = useRef(null);\n  var containerRef = useRef(null);\n\n  if (isPendingMessage(channel, message) || isFailedMessage(channel, message)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-message-item-reaction-menu']),\n    ref: containerRef\n  }, /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(IconButton, {\n        className: \"sendbird-message-item-reaction-menu__trigger\",\n        ref: triggerRef,\n        width: \"32px\",\n        height: \"32px\",\n        onClick: function onClick() {\n          toggleDropdown();\n          setSupposedHover(true);\n        },\n        onBlur: function onBlur() {\n          setSupposedHover(false);\n        }\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        className: \"sendbird-message-item-reaction-menu__trigger__icon\",\n        type: IconTypes.EMOJI_MORE,\n        fillColor: IconColors.CONTENT_INVERSE,\n        width: \"24px\",\n        height: \"24px\"\n      }));\n    },\n    menuItems: function menuItems(close) {\n      var closeDropdown = function closeDropdown() {\n        close();\n        setSupposedHover(false);\n      };\n\n      return /*#__PURE__*/React__default.createElement(EmojiListItems, {\n        parentRef: triggerRef,\n        parentContainRef: containerRef,\n        closeDropdown: closeDropdown,\n        spaceFromTrigger: spaceFromTrigger\n      }, getEmojiListAll(emojiContainer).map(function (emoji) {\n        var _a, _b, _c;\n\n        var isReacted = (_c = (_b = (_a = message === null || message === void 0 ? void 0 : message.reactions) === null || _a === void 0 ? void 0 : _a.filter(function (reaction) {\n          return reaction.key === emoji.key;\n        })[0]) === null || _b === void 0 ? void 0 : _b.userIds) === null || _c === void 0 ? void 0 : _c.some(function (reactorId) {\n          return reactorId === userId;\n        });\n        return /*#__PURE__*/React__default.createElement(ReactionButton, {\n          key: emoji.key,\n          width: \"36px\",\n          height: \"36px\",\n          selected: isReacted,\n          onClick: function onClick() {\n            closeDropdown();\n            toggleReaction(message, emoji.key, isReacted);\n          }\n        }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n          url: emoji.url,\n          width: \"28px\",\n          height: \"28px\",\n          placeHolder: function placeHolder(style) {\n            return /*#__PURE__*/React__default.createElement(\"div\", {\n              style: style\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              type: IconTypes.QUESTION,\n              fillColor: IconColors.ON_BACKGROUND_3,\n              width: \"28px\",\n              height: \"28px\"\n            }));\n          }\n        }));\n      }));\n    }\n  }));\n}\n\nfunction Tooltip(_ref) {\n  var className = _ref.className,\n      children = _ref.children;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-tooltip']).join(' ')\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-tooltip__text\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONCONTENT_1\n  }, children));\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n};\nTooltip.defaultProps = {\n  className: '',\n  children: ''\n};\nvar SPACE_FROM_TRIGGER = 8;\n\nfunction TooltipWrapper(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      hoverTooltip = _ref.hoverTooltip;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showHoverTooltip = _useState2[0],\n      setShowHoverTooltip = _useState2[1];\n\n  var childrenRef = useRef(null);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-tooltip-wrapper']).join(' '),\n    onMouseOver: function onMouseOver() {\n      setShowHoverTooltip(true);\n    },\n    onFocus: function onFocus() {\n      setShowHoverTooltip(true);\n    },\n    onMouseOut: function onMouseOut() {\n      setShowHoverTooltip(false);\n    },\n    onBlur: function onBlur() {\n      setShowHoverTooltip(false);\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-tooltip-wrapper__children\",\n    ref: childrenRef\n  }, children), showHoverTooltip && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-tooltip-wrapper__hover-tooltip\",\n    style: {\n      bottom: \"calc(100% + \".concat(SPACE_FROM_TRIGGER, \"px)\")\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-tooltip-wrapper__hover-tooltip__inner\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container\",\n    style: {\n      left: childrenRef.current && \"calc(\".concat(childrenRef.current.offsetWidth / 2, \"px - 50%)\")\n    }\n  }, hoverTooltip))));\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nTooltipWrapper.defaultProps = {\n  className: ''\n};\nvar ReactionBadge = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var className = props.className,\n      children = props.children,\n      count = props.count,\n      selected = props.selected,\n      isAdd = props.isAdd,\n      onClick = props.onClick;\n\n  var getClassNameTail = function getClassNameTail() {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n\n    if (isAdd) {\n      return '--is-add';\n    }\n\n    return '';\n  };\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), [\"sendbird-reaction-badge\".concat(getClassNameTail())]).join(' '),\n    role: \"button\",\n    ref: ref,\n    onClick: onClick,\n    onKeyDown: onClick,\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-reaction-badge__inner\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-reaction-badge__inner__icon\"\n  }, children), /*#__PURE__*/React__default.createElement(Label, {\n    className: children && count && 'sendbird-reaction-badge__inner__count',\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_1\n  }, count)));\n});\nReactionBadge.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  selected: PropTypes.bool,\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func\n};\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: function onClick() {}\n};\n\nfunction EmojiReactions2(_a) {\n  var _b, _c;\n\n  var className = _a.className,\n      userId = _a.userId,\n      message = _a.message,\n      emojiContainer = _a.emojiContainer,\n      memberNicknamesMap = _a.memberNicknamesMap,\n      _d = _a.spaceFromTrigger,\n      spaceFromTrigger = _d === void 0 ? {} : _d,\n      _e = _a.isByMe,\n      isByMe = _e === void 0 ? false : _e,\n      toggleReaction = _a.toggleReaction;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var emojisMap = getEmojiMapAll(emojiContainer);\n  var addReactionRef = useRef(null);\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-emoji-reactions', isByMe ? 'outgoing' : 'incoming'])\n  }, ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 && message.reactions.map(function (reaction) {\n    var _a, _b;\n\n    var reactedByMe = isReactedBy(userId, reaction);\n    return /*#__PURE__*/React__default.createElement(TooltipWrapper, {\n      className: \"sendbird-emoji-reactions__reaction-badge\",\n      key: reaction === null || reaction === void 0 ? void 0 : reaction.key,\n      hoverTooltip: ((_a = reaction === null || reaction === void 0 ? void 0 : reaction.userIds) === null || _a === void 0 ? void 0 : _a.length) > 0 && /*#__PURE__*/React__default.createElement(Tooltip, null, getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet))\n    }, /*#__PURE__*/React__default.createElement(ReactionBadge, {\n      count: reaction.userIds.length,\n      selected: reactedByMe,\n      onClick: function onClick() {\n        return toggleReaction(message, reaction.key, reactedByMe);\n      }\n    }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n      circle: true,\n      url: ((_b = emojisMap.get(reaction === null || reaction === void 0 ? void 0 : reaction.key)) === null || _b === void 0 ? void 0 : _b.url) || '',\n      width: \"20px\",\n      height: \"20px\",\n      defaultComponent: /*#__PURE__*/React__default.createElement(Icon, {\n        width: \"20px\",\n        height: \"20px\",\n        type: IconTypes.QUESTION\n      })\n    })));\n  }), ((_c = message === null || message === void 0 ? void 0 : message.reactions) === null || _c === void 0 ? void 0 : _c.length) < emojisMap.size && /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(ReactionBadge, {\n        className: \"sendbird-emoji-reactions__add-reaction-badge\",\n        ref: addReactionRef,\n        isAdd: true,\n        onClick: toggleDropdown\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        type: IconTypes.EMOJI_MORE,\n        fillColor: IconColors.ON_BACKGROUND_3,\n        width: \"20px\",\n        height: \"20px\"\n      }));\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(EmojiListItems, {\n        parentRef: addReactionRef,\n        parentContainRef: addReactionRef,\n        closeDropdown: closeDropdown,\n        spacefromTrigger: spaceFromTrigger\n      }, getEmojiListAll(emojiContainer).map(function (emoji) {\n        var _a, _b, _c;\n\n        var isReacted = (_c = (_b = (_a = message === null || message === void 0 ? void 0 : message.reactions) === null || _a === void 0 ? void 0 : _a.filter(function (reaction) {\n          return reaction.key === emoji.key;\n        })[0]) === null || _b === void 0 ? void 0 : _b.userIds) === null || _c === void 0 ? void 0 : _c.some(function (reactorId) {\n          return reactorId === userId;\n        });\n        return /*#__PURE__*/React__default.createElement(ReactionButton, {\n          key: emoji.key,\n          width: \"36px\",\n          height: \"36px\",\n          selected: isReacted,\n          onClick: function onClick() {\n            closeDropdown();\n            toggleReaction(message, emoji.key, isReacted);\n          }\n        }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n          url: (emoji === null || emoji === void 0 ? void 0 : emoji.url) || '',\n          width: \"28px\",\n          height: \"28px\",\n          placeHolder: function placeHolder(style) {\n            return /*#__PURE__*/React__default.createElement(\"div\", {\n              style: style\n            }, /*#__PURE__*/React__default.createElement(Icon, {\n              type: IconTypes.QUESTION,\n              fillColor: IconColors.ON_BACKGROUND_3,\n              width: \"28px\",\n              height: \"28px\"\n            }));\n          }\n        }));\n      }));\n    }\n  }));\n}\n\nfunction AdminMessage(_ref) {\n  var className = _ref.className,\n      message = _ref.message;\n\n  if (!(message.isAdminMessage || message.messageType) || !message.isAdminMessage() || message.messageType !== 'admin') {\n    return null;\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-admin-message']).join(' ')\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-admin-message__text\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, message.message));\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    messageType: PropTypes.string,\n    isAdminMessage: PropTypes.func\n  }),\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n};\nAdminMessage.defaultProps = {\n  message: {},\n  className: ''\n};\n\nfunction TextMessageItemBody(_a) {\n  var _b;\n\n  var className = _a.className,\n      message = _a.message,\n      _c = _a.isByMe,\n      isByMe = _c === void 0 ? false : _c,\n      _d = _a.mouseHover,\n      mouseHover = _d === void 0 ? false : _d;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: getClassName([className, 'sendbird-text-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 ? 'reactions' : ''])\n  }, message === null || message === void 0 ? void 0 : message.message, isEditedMessage(message) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-text-message-item-body__message edited\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2\n  }, \" \" + stringSet.MESSAGE_EDITED + \" \")));\n}\n\nfunction FileMessageItemBody(_a) {\n  var _b;\n\n  var className = _a.className,\n      message = _a.message,\n      _c = _a.isByMe,\n      isByMe = _c === void 0 ? false : _c,\n      _d = _a.mouseHover,\n      mouseHover = _d === void 0 ? false : _d;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-file-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 ? 'reactions' : ''])\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-file-message-item-body__file-icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: 'sendbird-file-message-item-body__file-icon__icon',\n    type: {\n      IMAGE: IconTypes.PHOTO,\n      VIDEO: IconTypes.PLAY,\n      AUDIO: IconTypes.FILE_AUDIO,\n      GIF: IconTypes.GIF,\n      OTHERS: IconTypes.FILE_DOCUMENT\n    }[getUIKitFileType(message === null || message === void 0 ? void 0 : message.type)],\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  })), /*#__PURE__*/React__default.createElement(TextButton, {\n    className: \"sendbird-file-message-item-body__file-name\",\n    onClick: function onClick() {\n      window.open(message === null || message === void 0 ? void 0 : message.url);\n    },\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-file-message-item-body__file-name__text\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, truncateString((message === null || message === void 0 ? void 0 : message.name) || (message === null || message === void 0 ? void 0 : message.url)))));\n}\n\nfunction ThumbnailMessageItemBody(_a) {\n  var _b, _c;\n\n  var className = _a.className,\n      message = _a.message,\n      _d = _a.isByMe,\n      isByMe = _d === void 0 ? false : _d,\n      _e = _a.mouseHover,\n      mouseHover = _e === void 0 ? false : _e,\n      showFileViewer = _a.showFileViewer;\n  var _f = message.thumbnails,\n      thumbnails = _f === void 0 ? [] : _f;\n  var thumbnailUrl = thumbnails.length > 0 ? (_b = thumbnails[0]) === null || _b === void 0 ? void 0 : _b.url : '';\n\n  var _g = useState(false),\n      imageRendered = _g[0],\n      setImageRendered = _g[1];\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-thumbnail-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_c = message === null || message === void 0 ? void 0 : message.reactions) === null || _c === void 0 ? void 0 : _c.length) > 0 ? 'reactions' : '']),\n    onClick: function onClick() {\n      if ((message === null || message === void 0 ? void 0 : message.sendingStatus) === 'succeeded') {\n        showFileViewer(true);\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n    className: \"sendbird-thumbnail-message-item-body__thumbnail\",\n    url: thumbnailUrl || (message === null || message === void 0 ? void 0 : message.url),\n    alt: message === null || message === void 0 ? void 0 : message.type,\n    width: \"360px\",\n    height: \"270px\",\n    onLoad: function onLoad() {\n      setImageRendered(true);\n    },\n    placeHolder: function placeHolder(style) {\n      return /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-thumbnail-message-item-body__placeholder\",\n        style: style\n      }, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-thumbnail-message-item-body__placeholder__icon\"\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO,\n        fillColor: IconColors.ON_BACKGROUND_2,\n        width: \"34px\",\n        height: \"34px\"\n      })));\n    }\n  }), isVideoMessage(message) && !thumbnailUrl && !imageRendered && /*#__PURE__*/React__default.createElement(\"video\", {\n    className: \"sendbird-thumbnail-message-item-body__video\"\n  }, /*#__PURE__*/React__default.createElement(\"source\", {\n    src: message === null || message === void 0 ? void 0 : message.url,\n    type: message === null || message === void 0 ? void 0 : message.type\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-thumbnail-message-item-body__image-cover\"\n  }), (isVideoMessage(message) || isGifMessage(message)) && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-thumbnail-message-item-body__icon-wrapper\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-thumbnail-message-item-body__icon-wrapper__icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF,\n    fillColor: IconColors.GRAY,\n    width: \"34px\",\n    height: \"34px\"\n  }))));\n}\n\nfunction OGMessageItemBody(_a) {\n  var _b, _c, _d, _e, _f, _g, _h, _j;\n\n  var className = _a.className,\n      message = _a.message,\n      _k = _a.isByMe,\n      isByMe = _k === void 0 ? false : _k,\n      _l = _a.mouseHover,\n      mouseHover = _l === void 0 ? false : _l;\n  var stringSet = useContext(LocalizationContext).stringSet;\n\n  var openOGUrl = function openOGUrl() {\n    var _a, _b;\n\n    if ((_a = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _a === void 0 ? void 0 : _a.url) window.open((_b = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _b === void 0 ? void 0 : _b.url);\n  };\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-og-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 ? 'reactions' : ''])\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    key: uuidv4(),\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, /*#__PURE__*/React__default.createElement(\"p\", {\n    className: \"sendbird-og-message-item-body__text-bubble\"\n  }, message === null || message === void 0 ? void 0 : message.message.split(' ').map(function (word) {\n    return isUrl(word) ? /*#__PURE__*/React__default.createElement(LinkLabel, {\n      className: \"sendbird-og-message-item-body__text-bubble__message\",\n      key: uuidv4(),\n      src: word,\n      type: LabelTypography.BODY_1,\n      color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n    }, word) : word + \" \";\n  }), isEditedMessage(message) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__text-bubble__message\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2\n  }, \" \" + stringSet.MESSAGE_EDITED + \" \"))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-og-message-item-body__og-thumbnail\",\n    onClick: openOGUrl\n  }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n    className: \"sendbird-og-message-item-body__og-thumbnail__image\",\n    url: ((_d = (_c = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _c === void 0 ? void 0 : _c.defaultImage) === null || _d === void 0 ? void 0 : _d.url) || '',\n    alt: (_f = (_e = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _e === void 0 ? void 0 : _e.defaultImage) === null || _f === void 0 ? void 0 : _f.alt // TODO: Change fixing width and height lengths\n    ,\n    width: \"320px\",\n    height: \"180px\",\n    defaultComponent: /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-og-message-item-body__og-thumbnail__place-holder\"\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      className: \"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\",\n      type: IconTypes.THUMBNAIL_NONE,\n      width: \"56px\",\n      height: \"56px\"\n    }))\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-og-message-item-body__description\",\n    onClick: openOGUrl\n  }, ((_g = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _g === void 0 ? void 0 : _g.title) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__description__title\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, message.ogMetaData.title), ((_h = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _h === void 0 ? void 0 : _h.description) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__description__description\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, message.ogMetaData.description), ((_j = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _j === void 0 ? void 0 : _j.url) && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__description__url\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, message.ogMetaData.url)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-og-message-item-body__cover\"\n  }));\n}\n\nfunction UnknownMessageItemBody(_a) {\n  var _b;\n\n  var className = _a.className,\n      message = _a.message,\n      _c = _a.isByMe,\n      isByMe = _c === void 0 ? false : _c,\n      _d = _a.mouseHover,\n      mouseHover = _d === void 0 ? false : _d;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-unknown-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 ? 'reactions' : ''])\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-unknown-message-item-body__header\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-unknown-message-item-body__description\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2\n  }, stringSet.UNKNOWN__CANNOT_READ_MESSAGE));\n}\n\nfunction QuoteMessage(_a) {\n  var _b;\n\n  var _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n\n  var message = _a.message,\n      _p = _a.userId,\n      userId = _p === void 0 ? '' : _p,\n      _q = _a.isByMe,\n      isByMe = _q === void 0 ? false : _q,\n      className = _a.className,\n      _onClick = _a.onClick;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var parentMessage = message.parentMessage;\n  var parentMessageSender = (_c = parentMessage) === null || _c === void 0 ? void 0 : _c.sender;\n  var parentMessageSenderNickname = userId === (parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.nickname;\n  var parentMessageUrl = ((_d = parentMessage) === null || _d === void 0 ? void 0 : _d.url) || '';\n  var parentMessageType = (_e = parentMessage) === null || _e === void 0 ? void 0 : _e.type;\n  var currentMessageSenderNickname = userId === ((_f = message === null || message === void 0 ? void 0 : message.sender) === null || _f === void 0 ? void 0 : _f.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : (_g = message === null || message === void 0 ? void 0 : message.sender) === null || _g === void 0 ? void 0 : _g.nickname;\n\n  var _r = useState(false),\n      isThumbnailLoaded = _r[0],\n      setThumbnailLoaded = _r[1];\n\n  var uikitFileTypes = getUIKitFileTypes();\n  var splitFileName = ((_h = parentMessage) === null || _h === void 0 ? void 0 : _h.name) ? parentMessage.name.split('/') : parentMessageUrl.split('/');\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming']),\n    key: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId,\n    onClick: function onClick() {\n      if (_onClick) _onClick();\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-to\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-quote-message__replied-to__icon\",\n    type: IconTypes.REPLY,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"12px\",\n    height: \"12px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-to__text\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, currentMessageSenderNickname + \" \" + stringSet.QUOTED_MESSAGE__REPLIED_TO + \" \" + parentMessageSenderNickname)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message\"\n  }, isUserMessage(parentMessage) && ((_k = (_j = parentMessage) === null || _j === void 0 ? void 0 : _j.message) === null || _k === void 0 ? void 0 : _k.length) > 0 && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__text-message\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__text-message__word\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, (_l = parentMessage) === null || _l === void 0 ? void 0 : _l.message)), isThumbnailMessage(parentMessage) && parentMessageUrl && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message\"\n  }, /*#__PURE__*/React__default.createElement(ImageRenderer, {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__image\",\n    url: parentMessageUrl,\n    alt: parentMessageType,\n    width: \"144px\",\n    height: \"108px\",\n    onLoad: function onLoad() {\n      return setThumbnailLoaded(true);\n    },\n    defaultComponent: /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder\"\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\"\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"22px\",\n      height: \"22px\"\n    })))\n  }), isVideo(parentMessageType) && !(((_o = (_m = parentMessage) === null || _m === void 0 ? void 0 : _m.thumbnails) === null || _o === void 0 ? void 0 : _o.length) > 0) && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"video\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__video\"\n  }, /*#__PURE__*/React__default.createElement(\"source\", {\n    src: parentMessageUrl,\n    type: parentMessageType\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.PLAY,\n    fillColor: IconColors.GRAY,\n    width: \"14px\",\n    height: \"14px\"\n  })))), isThumbnailLoaded && isGif(parentMessageType) && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.GIF,\n    fillColor: IconColors.GRAY,\n    width: \"14px\",\n    height: \"14px\"\n  })))), isFileMessage(parentMessage) && !isSupportedFileView(parentMessage.type) && parentMessageUrl && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__file-message\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-quote-message__replied-message__file-message__type-icon\",\n    type: (_b = {}, _b[uikitFileTypes.IMAGE] = IconTypes.PHOTO, _b[uikitFileTypes.VIDEO] = IconTypes.PLAY, _b[uikitFileTypes.AUDIO] = IconTypes.FILE_AUDIO, _b[uikitFileTypes.GIF] = IconTypes.GIF, _b[uikitFileTypes.OTHERS] = IconTypes.FILE_DOCUMENT, _b)[getUIKitFileType(parentMessageType)],\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"16px\",\n    height: \"16px\"\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__file-message__file-name\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, truncateString(splitFileName[splitFileName.length - 1])))));\n}\n\nfunction MessageContent(_a) {\n  var _b, _c, _d, _e;\n\n  var className = _a.className,\n      userId = _a.userId,\n      channel = _a.channel,\n      message = _a.message,\n      _f = _a.disabled,\n      disabled = _f === void 0 ? false : _f,\n      _g = _a.chainTop,\n      chainTop = _g === void 0 ? false : _g,\n      _h = _a.chainBottom,\n      chainBottom = _h === void 0 ? false : _h,\n      _j = _a.useReaction,\n      useReaction = _j === void 0 ? false : _j,\n      replyType = _a.replyType,\n      nicknamesMap = _a.nicknamesMap,\n      emojiContainer = _a.emojiContainer,\n      scrollToMessage = _a.scrollToMessage,\n      showEdit = _a.showEdit,\n      showRemove = _a.showRemove,\n      showFileViewer = _a.showFileViewer,\n      resendMessage = _a.resendMessage,\n      toggleReaction = _a.toggleReaction,\n      setQuoteMessage = _a.setQuoteMessage;\n  var messageTypes = getUIKitMessageTypes();\n\n  var _k = useContext(UserProfileContext),\n      disableUserProfile = _k.disableUserProfile,\n      renderUserProfile = _k.renderUserProfile;\n\n  var dateLocale = useContext(LocalizationContext).dateLocale;\n  var avatarRef = useRef(null);\n\n  var _l = useState(false),\n      mouseHover = _l[0],\n      setMouseHover = _l[1];\n\n  var _m = useState(false),\n      supposedHover = _m[0],\n      setSupposedHover = _m[1];\n\n  var isByMe = userId === ((_c = (_b = message) === null || _b === void 0 ? void 0 : _b.sender) === null || _c === void 0 ? void 0 : _c.userId) || message.sendingStatus === 'pending' || message.sendingStatus === 'failed';\n  var isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  var chainTopClassName = chainTop ? 'chain-top' : '';\n  var useReactionClassName = useReaction ? 'use-reactions' : '';\n  var supposedHoverClassName = supposedHover ? 'supposed-hover' : '';\n  var useReplying = !!(replyType === 'QUOTE_REPLY' && (message === null || message === void 0 ? void 0 : message.parentMessageId) && (message === null || message === void 0 ? void 0 : message.parentMessage));\n  var useReplyingClassName = useReplying ? 'use-quote' : '';\n\n  if (((_d = message === null || message === void 0 ? void 0 : message.isAdminMessage) === null || _d === void 0 ? void 0 : _d.call(message)) || (message === null || message === void 0 ? void 0 : message.messageType) === 'admin') {\n    return /*#__PURE__*/React__default.createElement(AdminMessage, {\n      message: message\n    });\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-message-content', isByMeClassName]),\n    onMouseOver: function onMouseOver() {\n      return setMouseHover(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setMouseHover(false);\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__left', useReactionClassName, isByMeClassName, useReplyingClassName])\n  }, !isByMe && !chainBottom &&\n  /*#__PURE__*/\n\n  /** user profile */\n  React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      var _a;\n\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        className: \"sendbird-message-content__left__avatar\",\n        src: ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.profileUrl) || '',\n        ref: avatarRef,\n        width: \"28px\",\n        height: \"28px\",\n        onClick: function onClick() {\n          if (!disableUserProfile) toggleDropdown();\n        }\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems\n      /**\n      * parentRef: For catching location(x, y) of MenuItems\n      * parentContainRef: For toggling more options(menus & reactions)\n      */\n      , {\n        parentRef: avatarRef,\n        parentContainRef: avatarRef,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: message === null || message === void 0 ? void 0 : message.sender,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        user: message.sender,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), isByMe && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content-menu', useReactionClassName, supposedHoverClassName, isByMeClassName])\n  }, /*#__PURE__*/React__default.createElement(MessageItemMenu, {\n    className: \"sendbird-message-content-menu__normal-menu\",\n    channel: channel,\n    message: message,\n    isByMe: isByMe,\n    replyType: replyType,\n    disabled: disabled,\n    showEdit: showEdit,\n    showRemove: showRemove,\n    resendMessage: resendMessage,\n    setQuoteMessage: setQuoteMessage,\n    setSupposedHover: setSupposedHover\n  }), useReaction && /*#__PURE__*/React__default.createElement(MessageItemReactionMenu, {\n    className: \"sendbird-message-content-menu__reaction-menu\",\n    message: message,\n    channel: channel,\n    userId: userId,\n    spaceFromTrigger: {},\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction,\n    setSupposedHover: setSupposedHover\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-content__middle\"\n  }, !isByMe && !chainTop && !useReplying && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-message-content__middle__sender-name\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, getSenderName(message)), useReplying ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])\n  }, /*#__PURE__*/React__default.createElement(QuoteMessage, {\n    message: message,\n    userId: userId,\n    isByMe: isByMe,\n    onClick: function onClick() {\n      var _a;\n\n      if (((_a = message === null || message === void 0 ? void 0 : message.parentMessage) === null || _a === void 0 ? void 0 : _a.createdAt) && (message === null || message === void 0 ? void 0 : message.parentMessageId)) {\n        scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n      }\n    }\n  })) : null, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__middle__body-container'])\n  }, isByMe && !chainBottom && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-content__middle__body-container__created-at__component-container\"\n  }, /*#__PURE__*/React__default.createElement(MessageStatus, {\n    message: message,\n    channel: channel\n  }))), isTextMessage(message) && /*#__PURE__*/React__default.createElement(TextMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover\n  }), isOGMessage(message) && /*#__PURE__*/React__default.createElement(OGMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover\n  }), getUIKitMessageType(message) === messageTypes.FILE && /*#__PURE__*/React__default.createElement(FileMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover\n  }), isThumbnailMessage(message) && /*#__PURE__*/React__default.createElement(ThumbnailMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover,\n    showFileViewer: showFileViewer\n  }), getUIKitMessageType(message) === messageTypes.UNKNOWN && /*#__PURE__*/React__default.createElement(UnknownMessageItemBody, {\n    className: \"sendbird-message-content__middle__message-item-body\",\n    message: message,\n    isByMe: isByMe,\n    mouseHover: mouseHover\n  }), useReaction && ((_e = message === null || message === void 0 ? void 0 : message.reactions) === null || _e === void 0 ? void 0 : _e.length) > 0 && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content-reactions', !isByMe || isThumbnailMessage(message) || isOGMessage(message) ? '' : 'primary', mouseHover ? 'mouse-hover' : ''])\n  }, /*#__PURE__*/React__default.createElement(EmojiReactions2, {\n    userId: userId,\n    message: message,\n    isByMe: isByMe,\n    emojiContainer: emojiContainer,\n    memberNicknamesMap: nicknamesMap,\n    toggleReaction: toggleReaction\n  })), !isByMe && !chainBottom && /*#__PURE__*/React__default.createElement(Label, {\n    className: getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName]),\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, format(message.createdAt, 'p', {\n    locale: dateLocale\n  })))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content__right', chainTopClassName, useReactionClassName, useReplyingClassName])\n  }, !isByMe && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])\n  }, useReaction && /*#__PURE__*/React__default.createElement(MessageItemReactionMenu, {\n    className: \"sendbird-message-content-menu__reaction-menu\",\n    message: message,\n    channel: channel,\n    userId: userId,\n    spaceFromTrigger: {},\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction,\n    setSupposedHover: setSupposedHover\n  }), /*#__PURE__*/React__default.createElement(MessageItemMenu, {\n    className: \"sendbird-message-content-menu__normal-menu\",\n    channel: channel,\n    message: message,\n    isByMe: isByMe,\n    replyType: replyType,\n    disabled: disabled,\n    showEdit: showEdit,\n    showRemove: showRemove,\n    resendMessage: resendMessage,\n    setQuoteMessage: setQuoteMessage,\n    setSupposedHover: setSupposedHover\n  }))));\n}\n\nvar RemoveMessage = function RemoveMessage(props) {\n  var _message$threadInfo;\n\n  var onCloseModal = props.onCloseModal,\n      onDeleteMessage = props.onDeleteMessage,\n      message = props.message;\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(Modal, {\n    type: ButtonTypes.DANGER,\n    disabled: (message === null || message === void 0 ? void 0 : (_message$threadInfo = message.threadInfo) === null || _message$threadInfo === void 0 ? void 0 : _message$threadInfo.replyCount) > 0,\n    onCancel: onCloseModal,\n    onSubmit: onDeleteMessage,\n    submitText: \"Delete\",\n    titleText: stringSet.MODAL__DELETE_MESSAGE__TITLE\n  });\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    threadInfo: PropTypes.shape({\n      replyCount: PropTypes.number\n    })\n  }).isRequired\n};\n\nfunction MessageHoc(_ref) {\n  var _message$reactions;\n\n  var message = _ref.message,\n      userId = _ref.userId,\n      disabled = _ref.disabled,\n      editDisabled = _ref.editDisabled,\n      hasSeparator = _ref.hasSeparator,\n      deleteMessage = _ref.deleteMessage,\n      updateMessage = _ref.updateMessage,\n      scrollToMessage = _ref.scrollToMessage,\n      resendMessage = _ref.resendMessage,\n      useReaction = _ref.useReaction,\n      replyType = _ref.replyType,\n      chainTop = _ref.chainTop,\n      chainBottom = _ref.chainBottom,\n      membersMap = _ref.membersMap,\n      emojiContainer = _ref.emojiContainer,\n      animatedMessageId = _ref.animatedMessageId,\n      highLightedMessageId = _ref.highLightedMessageId,\n      toggleReaction = _ref.toggleReaction,\n      quoteMessage = _ref.quoteMessage,\n      setQuoteMessage = _ref.setQuoteMessage,\n      renderCustomMessage = _ref.renderCustomMessage,\n      currentGroupChannel = _ref.currentGroupChannel,\n      handleScroll = _ref.handleScroll;\n  var _message$sender = message.sender,\n      sender = _message$sender === void 0 ? {} : _message$sender;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showEdit = _useState2[0],\n      setShowEdit = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showRemove = _useState4[0],\n      setShowRemove = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showFileViewer = _useState6[0],\n      setShowFileViewer = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isAnimated = _useState8[0],\n      setIsAnimated = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isHighlighted = _useState10[0],\n      setIsHighlighted = _useState10[1];\n\n  var editMessageInputRef = useRef(null);\n  var useMessageScrollRef = useRef(null);\n\n  var _useContext = useContext(LocalizationContext),\n      dateLocale = _useContext.dateLocale;\n\n  useLayoutEffect(function () {\n    handleScroll();\n  }, [showEdit, message === null || message === void 0 ? void 0 : (_message$reactions = message.reactions) === null || _message$reactions === void 0 ? void 0 : _message$reactions.length]);\n  useLayoutEffect(function () {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center'\n        });\n        setIsAnimated(false);\n        setTimeout(function () {\n          setIsHighlighted(true);\n        }, 500);\n      }\n    } else {\n      setIsHighlighted(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  useLayoutEffect(function () {\n    if (animatedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center'\n        });\n        setIsHighlighted(false);\n        setTimeout(function () {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [animatedMessageId, useMessageScrollRef.current, message.messageId]);\n  var RenderedMessage = useMemo(function () {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom); // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n  var isByMe = userId === (sender === null || sender === void 0 ? void 0 : sender.userId) || message.requestState === 'pending' || message.requestState === 'failed';\n\n  if (RenderedMessage) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      ref: useMessageScrollRef,\n      className: getClassName(['sendbird-msg-hoc sendbird-msg--scroll-ref', isAnimated ? 'sendbird-msg-hoc__animated' : '', isHighlighted ? 'sendbird-msg-hoc__highlighted' : ''])\n    }, hasSeparator && /*#__PURE__*/React__default.createElement(DateSeparator, null, /*#__PURE__*/React__default.createElement(Label, {\n      type: LabelTypography.CAPTION_2,\n      color: LabelColors.ONBACKGROUND_2\n    }, format(message === null || message === void 0 ? void 0 : message.createdAt, 'MMMM dd, yyyy', {\n      locale: dateLocale\n    }))), /*#__PURE__*/React__default.createElement(RenderedMessage, {\n      message: message\n    }));\n  }\n\n  if (showEdit) {\n    return /*#__PURE__*/React__default.createElement(MessageInput, {\n      isEdit: true,\n      disabled: editDisabled,\n      ref: editMessageInputRef,\n      name: message.messageId,\n      onSendMessage: updateMessage,\n      onCancelEdit: function onCancelEdit() {\n        setShowEdit(false);\n      },\n      value: message.message\n    });\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: useMessageScrollRef,\n    className: getClassName(['sendbird-msg-hoc sendbird-msg--scroll-ref', isAnimated ? 'sendbird-msg-hoc__animated' : '', isHighlighted ? 'sendbird-msg-hoc__highlighted' : '']),\n    style: {\n      marginBottom: '2px'\n    }\n  }, hasSeparator && /*#__PURE__*/React__default.createElement(DateSeparator, null, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, format(message === null || message === void 0 ? void 0 : message.createdAt, 'MMMM dd, yyyy', {\n    locale: dateLocale\n  }))), /*#__PURE__*/React__default.createElement(MessageContent, {\n    className: \"sendbird-message-hoc__message-content\",\n    userId: userId,\n    scrollToMessage: scrollToMessage,\n    channel: currentGroupChannel,\n    message: message,\n    disabled: disabled,\n    chainTop: chainTop,\n    chainBottom: chainBottom,\n    useReaction: useReaction,\n    replyType: replyType,\n    nicknamesMap: membersMap,\n    emojiContainer: emojiContainer,\n    showEdit: setShowEdit,\n    showRemove: setShowRemove,\n    showFileViewer: setShowFileViewer,\n    resendMessage: resendMessage,\n    toggleReaction: toggleReaction,\n    quoteMessage: quoteMessage,\n    setQuoteMessage: setQuoteMessage\n  }), showRemove && /*#__PURE__*/React__default.createElement(RemoveMessage, {\n    message: message,\n    onCloseModal: function onCloseModal() {\n      return setShowRemove(false);\n    },\n    onDeleteMessage: function onDeleteMessage() {\n      deleteMessage(message);\n\n      if ((message === null || message === void 0 ? void 0 : message.messageId) === (quoteMessage === null || quoteMessage === void 0 ? void 0 : quoteMessage.messageId)) {\n        setQuoteMessage(null);\n      }\n    }\n  }), showFileViewer && /*#__PURE__*/React__default.createElement(FileViewer, {\n    onClose: function onClose() {\n      return setShowFileViewer(false);\n    },\n    message: message,\n    onDelete: function onDelete() {\n      deleteMessage(message, function () {\n        setShowFileViewer(false);\n      });\n    },\n    isByMe: isByMe\n  }));\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({\n      userId: PropTypes.string\n    }),\n    ogMetaData: PropTypes.shape({}),\n    parentMessageId: PropTypes.number,\n    reactions: PropTypes.arrayOf(PropTypes.number)\n  }),\n  animatedMessageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  highLightedMessageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(PropTypes.shape({\n      emojis: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        url: PropTypes.string\n      }))\n    }))\n  }),\n  toggleReaction: PropTypes.func,\n  quoteMessage: PropTypes.shape({\n    messageId: PropTypes.string\n  }),\n  setQuoteMessage: PropTypes.func.isRequired,\n  handleScroll: PropTypes.func.isRequired\n};\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeparator: false,\n  disabled: false,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  toggleReaction: function toggleReaction() {},\n  scrollToMessage: function scrollToMessage() {},\n  emojiContainer: {},\n  quoteMessage: null\n};\nvar SCROLL_REF_CLASS_NAME = '.sendbird-msg--scroll-ref';\n\nvar ConversationScroll = /*#__PURE__*/function (_Component) {\n  _inherits(ConversationScroll, _Component);\n\n  var _super = _createSuper(ConversationScroll);\n\n  function ConversationScroll(props) {\n    var _this;\n\n    _classCallCheck(this, ConversationScroll);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function () {\n      var _assertThisInitialize2;\n\n      var _assertThisInitialize = (_assertThisInitialize2 = _assertThisInitialized(_this)) === null || _assertThisInitialize2 === void 0 ? void 0 : _assertThisInitialize2.props,\n          scrollRef = _assertThisInitialize.scrollRef;\n\n      var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;\n\n      if (current) {\n        var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n        var _this$state$scrollBot = _this.state.scrollBottom,\n            scrollBottom = _this$state$scrollBot === void 0 ? 0 : _this$state$scrollBot;\n\n        if (scrollBottom < bottom) {\n          current.scrollTop += bottom - scrollBottom;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onScroll\", function (e) {\n      var _this$props = _this.props,\n          scrollRef = _this$props.scrollRef,\n          hasMore = _this$props.hasMore,\n          messagesDispatcher = _this$props.messagesDispatcher,\n          onScroll = _this$props.onScroll,\n          onScrollDown = _this$props.onScrollDown,\n          currentGroupChannel = _this$props.currentGroupChannel;\n      var element = e.target;\n      var scrollTop = element.scrollTop,\n          clientHeight = element.clientHeight,\n          scrollHeight = element.scrollHeight;\n\n      if (scrollTop === 0) {\n        if (!hasMore) {\n          return;\n        }\n\n        var nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n        var first = nodes && nodes[0];\n        onScroll(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 1),\n              messages = _ref2[0];\n\n          if (messages) {\n            // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n            // Set block to nearest to prevent unexpected scrolling from outer components\n            try {\n              first.scrollIntoView({\n                block: 'nearest'\n              });\n            } catch (error) {//\n            }\n          }\n        });\n      }\n\n      if (clientHeight + scrollTop === scrollHeight) {\n        var _nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n\n        var last = _nodes && _nodes[_nodes.length - 1];\n        onScrollDown(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 1),\n              messages = _ref4[0];\n\n          if (messages) {\n            // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n            try {\n              last.scrollIntoView({\n                block: 'nearest'\n              });\n            } catch (error) {//\n            }\n          }\n        });\n      } // do this later\n\n\n      setTimeout(function () {\n        // mark as read if scroll is at end\n        if (clientHeight + scrollTop === scrollHeight) {\n          messagesDispatcher({\n            type: MARK_AS_READ\n          });\n          currentGroupChannel.markAsRead();\n        } // save the lastest scroll bottom value\n\n\n        if (scrollRef !== null && scrollRef !== void 0 && scrollRef.current) {\n          var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;\n\n          _this.setState(function (state) {\n            return _objectSpread2(_objectSpread2({}, state), {}, {\n              scrollBottom: current.scrollHeight - current.scrollTop - current.offsetHeight\n            });\n          }, function () {});\n        }\n      }, 500);\n    });\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ConversationScroll, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          userId = _this$props2.userId,\n          disabled = _this$props2.disabled,\n          scrollRef = _this$props2.scrollRef,\n          membersMap = _this$props2.membersMap,\n          allMessages = _this$props2.allMessages,\n          scrollToMessage = _this$props2.scrollToMessage,\n          useReaction = _this$props2.useReaction,\n          replyType = _this$props2.replyType,\n          emojiAllMap = _this$props2.emojiAllMap,\n          editDisabled = _this$props2.editDisabled,\n          deleteMessage = _this$props2.deleteMessage,\n          updateMessage = _this$props2.updateMessage,\n          resendMessage = _this$props2.resendMessage,\n          renderCustomMessage = _this$props2.renderCustomMessage,\n          renderChatItem = _this$props2.renderChatItem,\n          animatedMessageId = _this$props2.animatedMessageId,\n          highLightedMessageId = _this$props2.highLightedMessageId,\n          emojiContainer = _this$props2.emojiContainer,\n          toggleReaction = _this$props2.toggleReaction,\n          useMessageGrouping = _this$props2.useMessageGrouping,\n          currentGroupChannel = _this$props2.currentGroupChannel,\n          memoizedEmojiListItems = _this$props2.memoizedEmojiListItems,\n          showScrollBot = _this$props2.showScrollBot,\n          onClickScrollBot = _this$props2.onClickScrollBot,\n          quoteMessage = _this$props2.quoteMessage,\n          setQuoteMessage = _this$props2.setQuoteMessage;\n\n      if (allMessages.length < 1) {\n        return /*#__PURE__*/React__default.createElement(PlaceHolder, {\n          className: \"sendbird-conversation__no-messages\",\n          type: PlaceHolderTypes.NO_MESSAGES\n        });\n      }\n\n      return /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__messages\"\n      }, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__scroll-container\"\n      }, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__padding\"\n      }), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__messages-padding\",\n        ref: scrollRef,\n        onScroll: this.onScroll\n      }, allMessages.map(function (m, idx) {\n        var previousMessage = allMessages[idx - 1];\n        var nextMessage = allMessages[idx + 1];\n\n        var _ref5 = useMessageGrouping ? compareMessagesForGrouping(previousMessage, m, nextMessage) : [false, false],\n            _ref6 = _slicedToArray(_ref5, 2),\n            chainTop = _ref6[0],\n            chainBottom = _ref6[1];\n\n        var previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n        var currentCreatedAt = m.createdAt; // https://stackoverflow.com/a/41855608\n\n        var hasSeparator = !(previousMessageCreatedAt && isSameDay(currentCreatedAt, previousMessageCreatedAt));\n\n        if (renderChatItem) {\n          return /*#__PURE__*/React__default.createElement(\"div\", {\n            key: m.messageId || m.reqId,\n            className: \"sendbird-msg--scroll-ref\"\n          }, renderChatItem({\n            message: m,\n            animatedMessageId: animatedMessageId,\n            highLightedMessageId: highLightedMessageId,\n            channel: currentGroupChannel,\n            onDeleteMessage: deleteMessage,\n            onUpdateMessage: updateMessage,\n            onResendMessage: resendMessage,\n            onScrollToMessage: scrollToMessage,\n            onReplyMessage: setQuoteMessage,\n            emojiContainer: emojiContainer,\n            chainTop: chainTop,\n            chainBottom: chainBottom,\n            hasSeparator: hasSeparator,\n            menuDisabled: disabled\n          }));\n        }\n\n        return /*#__PURE__*/React__default.createElement(MessageHoc, {\n          animatedMessageId: animatedMessageId,\n          highLightedMessageId: highLightedMessageId,\n          renderCustomMessage: renderCustomMessage,\n          key: m.messageId || m.reqId,\n          userId: userId,\n          handleScroll: _this2.handleScroll,\n          message: m,\n          quoteMessage: quoteMessage,\n          scrollToMessage: scrollToMessage,\n          currentGroupChannel: currentGroupChannel,\n          disabled: disabled,\n          membersMap: membersMap,\n          chainTop: chainTop,\n          useReaction: useReaction,\n          replyType: replyType,\n          emojiAllMap: emojiAllMap,\n          emojiContainer: emojiContainer,\n          editDisabled: editDisabled,\n          hasSeparator: hasSeparator,\n          chainBottom: chainBottom,\n          updateMessage: updateMessage,\n          deleteMessage: deleteMessage,\n          resendMessage: resendMessage,\n          toggleReaction: toggleReaction,\n          setQuoteMessage: setQuoteMessage,\n          memoizedEmojiListItems: memoizedEmojiListItems\n        });\n      }))), showScrollBot && /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-conversation__scroll-bottom-button\",\n        onClick: onClickScrollBot,\n        onKeyDown: onClickScrollBot,\n        tabIndex: 0,\n        role: \"button\"\n      }, /*#__PURE__*/React__default.createElement(Icon, {\n        width: \"24px\",\n        height: \"24px\",\n        type: IconTypes.CHEVRON_DOWN,\n        fillColor: IconColors.PRIMARY\n      })));\n    }\n  }]);\n\n  return ConversationScroll;\n}(Component);\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([PropTypes.element, PropTypes.shape({})])\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({}))\n  }).isRequired,\n  animatedMessageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  highLightedMessageId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  renderChatItem: PropTypes.func,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  quoteMessage: PropTypes.shape({}),\n  setQuoteMessage: PropTypes.func.isRequired\n};\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  replyType: 'NONE',\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: function onClickScrollBot() {},\n  scrollToMessage: function scrollToMessage() {},\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: function toggleReaction() {},\n  memoizedEmojiListItems: function memoizedEmojiListItems() {\n    return '';\n  },\n  quoteMessage: null\n};\n\nfunction Notification(_ref) {\n  var count = _ref.count,\n      time = _ref.time,\n      onClick = _ref.onClick;\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line\n    React__default.createElement(\"div\", {\n      className: \"sendbird-notification\",\n      onClick: onClick\n    }, /*#__PURE__*/React__default.createElement(Label, {\n      className: \"sendbird-notification__text\",\n      color: LabelColors.ONCONTENT_1,\n      type: LabelTypography.CAPTION_2\n    }, \"\".concat(count, \" \"), stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE, \" \".concat(timeArray.join(' '))), /*#__PURE__*/React__default.createElement(Icon, {\n      width: \"24px\",\n      height: \"24px\",\n      type: IconTypes.CHEVRON_DOWN,\n      fillColor: IconColors.CONTENT\n    }))\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n};\nNotification.defaultProps = {\n  count: 0,\n  time: ''\n};\n\nvar FrozenNotification = function FrozenNotification() {\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-notification sendbird-notification--frozen\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-notification__text\",\n    type: LabelTypography.CAPTION_2\n  }, stringSet.CHANNEL_FROZEN));\n};\n\nvar TypingIndicatorText = function TypingIndicatorText(_ref) {\n  var members = _ref.members;\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return \"\".concat(members[0].nickname, \" \").concat(stringSet.TYPING_INDICATOR__IS_TYPING);\n  }\n\n  if (members && members.length === 2) {\n    return \"\".concat(members[0].nickname, \" \").concat(stringSet.TYPING_INDICATOR__AND, \" \").concat(members[1].nickname, \" \").concat(stringSet.TYPING_INDICATOR__ARE_TYPING);\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator(props) {\n  var className = props.className,\n      channelUrl = props.channelUrl,\n      sb = props.sb,\n      logger = props.logger;\n\n  var _useState = useState(uuidv4()),\n      _useState2 = _slicedToArray(_useState, 2),\n      handlerId = _useState2[0],\n      setHandlerId = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      typingMembers = _useState4[0],\n      setTypingMembers = _useState4[1];\n\n  useEffect(function () {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      var newHandlerId = uuidv4();\n      var handler = new sb.ChannelHandler(); // there is a possible warning in here - setState called after unmount\n\n      handler.onTypingStatusUpdated = function (groupChannel) {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        var members = groupChannel.getTypingMembers();\n\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return function () {\n      setTypingMembers([]);\n\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n  return /*#__PURE__*/React__default.createElement(Label, {\n    className: className,\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, /*#__PURE__*/React__default.createElement(TypingIndicatorText, {\n    members: typingMembers\n  }));\n}\n\nTypingIndicator.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func\n  }).isRequired\n};\nTypingIndicator.defaultProps = {\n  className: ''\n};\nvar componentClassname = 'sendbird-quote_message_input__avatar';\n\nfunction QuoteMessageThumbnail(_a) {\n  var message = _a.message;\n\n  if (!isFileMessage(message)) {\n    return null;\n  }\n\n  var thumbnailUrl = message.thumbnails && message.thumbnails.length > 0 && message.thumbnails[0].url || isImageMessage(message) && message.url;\n\n  if (isThumbnailMessage(message) && thumbnailUrl) {\n    return /*#__PURE__*/React__default.createElement(ImageRenderer, {\n      className: componentClassname,\n      url: thumbnailUrl,\n      alt: message.type,\n      width: \"44px\",\n      height: \"44px\",\n      fixedSize: true\n    });\n  } else if (isAudioMessage(message)) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: componentClassname\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.FILE_AUDIO,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"24px\",\n      height: \"24px\"\n    }));\n  } else {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: componentClassname\n    }, /*#__PURE__*/React__default.createElement(Icon, {\n      type: IconTypes.FILE_DOCUMENT,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"24px\",\n      height: \"24px\"\n    }));\n  }\n}\n\nfunction QuoteMessageInput(_a) {\n  var _b;\n\n  var className = _a.className,\n      replyingMessage = _a.replyingMessage,\n      onClose = _a.onClose;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var fileMessage = replyingMessage;\n  var sender = (_b = replyingMessage) === null || _b === void 0 ? void 0 : _b.sender;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-quote_message_input', className])\n  }, /*#__PURE__*/React__default.createElement(QuoteMessageThumbnail, {\n    message: fileMessage\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-quote_message_input__body\",\n    style: {\n      width: \"calc(100% - \" + (fileMessage.isFileMessage() ? '164px' : '120px') + \")\",\n      left: fileMessage.isFileMessage() ? '92px' : '40px'\n    }\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote_message_input__body__sender-name\",\n    type: LabelTypography.CAPTION_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO + \" \" + (sender && sender.nickname ? sender.nickname : stringSet.NO_NAME)), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-quote_message_input__body__message-content\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE, isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO, isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF, isUserMessage(replyingMessage) && replyingMessage.message, isFileMessage(fileMessage) && !isThumbnailMessage(fileMessage) && fileMessage.name)), /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-quote_message_input__close-button\",\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_2,\n    width: \"24px\",\n    height: \"24px\",\n    onClick: function onClick() {\n      return onClose(replyingMessage);\n    }\n  }));\n} // Logic required to handle message input rendering\n\n\nvar MessageInputWrapper = function MessageInputWrapper(_a, ref) {\n  var channel = _a.channel,\n      user = _a.user,\n      isOnline = _a.isOnline,\n      initialized = _a.initialized,\n      quoteMessage = _a.quoteMessage,\n      _onSendMessage = _a.onSendMessage,\n      _onFileUpload = _a.onFileUpload,\n      setQuoteMessage = _a.setQuoteMessage,\n      renderMessageInput = _a.renderMessageInput;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var disabled = !initialized || isDisabledBecauseFrozen(channel) || isDisabledBecauseMuted(channel) || !isOnline;\n  var isOperator$1 = isOperator(channel);\n  var isBroadcast = channel.isBroadcast; // custom message\n\n  if (renderMessageInput) {\n    return renderMessageInput({\n      channel: channel,\n      user: user,\n      disabled: disabled,\n      quoteMessage: quoteMessage\n    });\n  } // broadcast channel + not operator\n\n\n  if (isBroadcast && !isOperator$1) {\n    return null;\n  } // other conditions\n\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-input-wrapper\"\n  }, quoteMessage && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-input-wrapper__quote-message-input\"\n  }, /*#__PURE__*/React__default.createElement(QuoteMessageInput, {\n    replyingMessage: quoteMessage,\n    onClose: function onClose() {\n      return setQuoteMessage(null);\n    }\n  })), /*#__PURE__*/React__default.createElement(MessageInput, {\n    className: \"sendbird-message-input-wrapper__message-input\",\n    channelUrl: channel === null || channel === void 0 ? void 0 : channel.url,\n    placeholder: quoteMessage && stringSet.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER || isDisabledBecauseFrozen(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED || isDisabledBecauseMuted(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED,\n    ref: ref,\n    disabled: disabled,\n    onStartTyping: function onStartTyping() {\n      channel.startTyping();\n    },\n    onSendMessage: function onSendMessage() {\n      _onSendMessage(quoteMessage);\n\n      setQuoteMessage(null);\n    },\n    onFileUpload: function onFileUpload(file) {\n      _onFileUpload(file, quoteMessage);\n\n      setQuoteMessage(null);\n    }\n  }));\n};\n\nvar MessageInputWrapper$1 = /*#__PURE__*/React__default.forwardRef(MessageInputWrapper);\n\nfunction ConnectionStatus() {\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-connection-status\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, stringSet.TRYING_TO_CONNECT), /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.DISCONNECTED,\n    fillColor: IconColors.SENT,\n    width: \"14px\",\n    height: \"14px\"\n  }));\n}\n\nvar getChannelTitle = function getChannelTitle() {\n  var channel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var currentUserId = arguments.length > 1 ? arguments[1] : undefined;\n  var stringSet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : LabelStringSet;\n\n  if (!channel || !channel.name && !channel.members) {\n    return stringSet.NO_TITLE;\n  }\n\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members.filter(function (_ref) {\n    var userId = _ref.userId;\n    return userId !== currentUserId;\n  }).map(function (_ref2) {\n    var nickname = _ref2.nickname;\n    return nickname || stringSet.NO_NAME;\n  }).join(', ');\n};\n\nvar noop$1 = function noop() {};\n\nfunction ChatHeader(props) {\n  var currentGroupChannel = props.currentGroupChannel,\n      currentUser = props.currentUser,\n      title = props.title,\n      subTitle = props.subTitle,\n      isMuted = props.isMuted,\n      theme = props.theme,\n      showSearchIcon = props.showSearchIcon,\n      onSearchClick = props.onSearchClick,\n      onActionClick = props.onActionClick;\n  var userId = currentUser.userId;\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header__left\"\n  }, /*#__PURE__*/React__default.createElement(ChannelAvatar, {\n    theme: theme,\n    channel: currentGroupChannel,\n    userId: userId,\n    height: 32,\n    width: 32\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-chat-header__left__title\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, title || getChannelTitle(currentGroupChannel, userId, stringSet)), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-chat-header__left__subtitle\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_2\n  }, subTitle)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-chat-header__right\"\n  }, (typeof isMuted === 'string' && isMuted === 'true' || typeof isMuted === 'boolean' && isMuted) && /*#__PURE__*/React__default.createElement(Icon, {\n    className: \"sendbird-chat-header__right__mute\",\n    type: IconTypes.NOTIFICATIONS_OFF_FILLED,\n    width: \"24px\",\n    height: \"24px\"\n  }), showSearchIcon && /*#__PURE__*/React__default.createElement(IconButton, {\n    className: \"sendbird-chat-header__right__search\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onSearchClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SEARCH,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  })), /*#__PURE__*/React__default.createElement(IconButton, {\n    className: \"sendbird-chat-header__right__info\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onActionClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.INFO,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }))));\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  isMuted: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  theme: PropTypes.string,\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onActionClick: PropTypes.func\n};\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  currentUser: {},\n  title: '',\n  subTitle: '',\n  isMuted: false,\n  theme: 'light',\n  showSearchIcon: false,\n  onSearchClick: noop$1,\n  onActionClick: noop$1\n};\n\nvar noop = function noop() {};\n\nvar ConversationPanel = function ConversationPanel(props) {\n  var channelUrl = props.channelUrl,\n      _props$stores = props.stores,\n      sdkStore = _props$stores.sdkStore,\n      userStore = _props$stores.userStore,\n      _props$config = props.config,\n      userId = _props$config.userId,\n      logger = _props$config.logger,\n      pubSub = _props$config.pubSub,\n      isOnline = _props$config.isOnline,\n      theme = _props$config.theme,\n      imageCompression = _props$config.imageCompression,\n      reconnect = props.dispatchers.reconnect,\n      _props$queries = props.queries,\n      queries = _props$queries === void 0 ? {} : _props$queries,\n      startingPoint = props.startingPoint,\n      highlightedMessage = props.highlightedMessage,\n      useReaction = props.useReaction,\n      replyType = props.replyType,\n      showSearchIcon = props.showSearchIcon,\n      onSearchClick = props.onSearchClick,\n      renderChatItem = props.renderChatItem,\n      renderChatHeader = props.renderChatHeader,\n      renderCustomMessage = props.renderCustomMessage,\n      renderUserProfile = props.renderUserProfile,\n      disableUserProfile = props.disableUserProfile,\n      renderMessageInput = props.renderMessageInput,\n      useMessageGrouping = props.useMessageGrouping,\n      onChatHeaderActionClick = props.onChatHeaderActionClick,\n      onBeforeSendUserMessage = props.onBeforeSendUserMessage,\n      onBeforeSendFileMessage = props.onBeforeSendFileMessage,\n      onBeforeUpdateUserMessage = props.onBeforeUpdateUserMessage;\n  var sdk = sdkStore.sdk;\n  var config = props.config;\n  var sdkError = sdkStore.error;\n  var sdkInit = sdkStore.initialized;\n  var user = userStore.user;\n\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  useEffect(function () {\n    if (renderCustomMessage) {\n      // eslint-disable-next-line no-console\n      console.info('The parameter type of renderCustomMessage will be changed to the object in the next minor update.');\n    }\n  }, []);\n\n  var _useState = useState(startingPoint),\n      _useState2 = _slicedToArray(_useState, 2),\n      intialTimeStamp = _useState2[0],\n      setIntialTimeStamp = _useState2[1];\n\n  useEffect(function () {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animatedMessageId = _useState4[0],\n      setAnimatedMessageId = _useState4[1];\n\n  var _useState5 = useState(highlightedMessage),\n      _useState6 = _slicedToArray(_useState5, 2),\n      highLightedMessageId = _useState6[0],\n      setHighLightedMessageId = _useState6[1];\n\n  useEffect(function () {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  var userFilledMessageListQuery = queries.messageListParams;\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      quoteMessage = _useState8[0],\n      setQuoteMessage = _useState8[1];\n\n  var _useReducer = useReducer(reducer, messagesInitialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      messagesStore = _useReducer2[0],\n      messagesDispatcher = _useReducer2[1];\n\n  var scrollRef = useRef(null);\n  var allMessages = messagesStore.allMessages,\n      loading = messagesStore.loading,\n      initialized = messagesStore.initialized,\n      unreadCount = messagesStore.unreadCount,\n      unreadSince = messagesStore.unreadSince,\n      isInvalid = messagesStore.isInvalid,\n      _messagesStore$curren = messagesStore.currentGroupChannel,\n      currentGroupChannel = _messagesStore$curren === void 0 ? {} : _messagesStore$curren,\n      hasMore = messagesStore.hasMore,\n      lastMessageTimeStamp = messagesStore.lastMessageTimeStamp,\n      hasMoreToBottom = messagesStore.hasMoreToBottom,\n      latestFetchedMessageTimeStamp = messagesStore.latestFetchedMessageTimeStamp,\n      emojiContainer = messagesStore.emojiContainer,\n      readStatus = messagesStore.readStatus;\n  var isFrozen = currentGroupChannel.isFrozen,\n      isBroadcast = currentGroupChannel.isBroadcast,\n      isSuper = currentGroupChannel.isSuper;\n  var _sdk$appInfo = sdk.appInfo,\n      appInfo = _sdk$appInfo === void 0 ? {} : _sdk$appInfo;\n  var usingReaction = appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction // TODO: Make useReaction independent from appInfo.isUsingReaction\n  ;\n  var userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  var userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  var showScrollBot = hasMoreToBottom; // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n\n  var emojiAllMap = useMemo(function () {\n    return usingReaction ? getAllEmojisMapFromEmojiContainer(emojiContainer) : new Map();\n  }, [emojiContainer]);\n  var emojiAllList = useMemo(function () {\n    return usingReaction ? getAllEmojisFromEmojiContainer$1(emojiContainer) : [];\n  }, [emojiContainer]);\n  var nicknamesMap = useMemo(function () {\n    return usingReaction ? getNicknamesMapFromMembers(currentGroupChannel.members) : new Map();\n  }, [currentGroupChannel.members]); // Scrollup is default scroll for channel\n\n  var onScrollCallback = useScrollCallback({\n    currentGroupChannel: currentGroupChannel,\n    lastMessageTimeStamp: lastMessageTimeStamp,\n    userFilledMessageListQuery: userFilledMessageListQuery,\n    replyType: replyType\n  }, {\n    hasMore: hasMore,\n    logger: logger,\n    messagesDispatcher: messagesDispatcher,\n    sdk: sdk\n  });\n  var scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp: setIntialTimeStamp,\n    setAnimatedMessageId: setAnimatedMessageId,\n    allMessages: allMessages\n  }, {\n    logger: logger\n  }); // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n\n  var onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel: currentGroupChannel,\n    latestFetchedMessageTimeStamp: latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery: userFilledMessageListQuery,\n    hasMoreToBottom: hasMoreToBottom,\n    replyType: replyType\n  }, {\n    logger: logger,\n    messagesDispatcher: messagesDispatcher,\n    sdk: sdk\n  });\n  var toggleReaction = useToggleReactionCallback({\n    currentGroupChannel: currentGroupChannel\n  }, {\n    logger: logger\n  });\n  var memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction\n  }, {\n    useReaction: usingReaction,\n    logger: logger,\n    userId: userId,\n    emojiAllList: emojiAllList\n  }); // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n\n  useSetChannel({\n    channelUrl: channelUrl,\n    sdkInit: sdkInit\n  }, {\n    messagesDispatcher: messagesDispatcher,\n    sdk: sdk,\n    logger: logger\n  });\n  useEffect(function () {\n    setQuoteMessage(null);\n  }, [channelUrl]); // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n\n  useHandleChannelEvents({\n    currentGroupChannel: currentGroupChannel,\n    sdkInit: sdkInit,\n    hasMoreToBottom: hasMoreToBottom\n  }, {\n    messagesDispatcher: messagesDispatcher,\n    sdk: sdk,\n    logger: logger,\n    scrollRef: scrollRef,\n    setQuoteMessage: setQuoteMessage\n  }); // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n\n  useInitialMessagesFetch({\n    currentGroupChannel: currentGroupChannel,\n    userFilledMessageListQuery: userFilledMessageListQuery,\n    intialTimeStamp: intialTimeStamp,\n    replyType: replyType\n  }, {\n    sdk: sdk,\n    logger: logger,\n    messagesDispatcher: messagesDispatcher\n  }); // handles API calls from withSendbird\n\n  useEffect(function () {\n    var subScriber = pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return function () {\n      pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]); // handling connection breaks\n\n  useHandleReconnect({\n    isOnline: isOnline,\n    replyType: replyType\n  }, {\n    logger: logger,\n    sdk: sdk,\n    currentGroupChannel: currentGroupChannel,\n    messagesDispatcher: messagesDispatcher,\n    userFilledMessageListQuery: userFilledMessageListQuery\n  }); // callbacks for Message CURD actions\n\n  var deleteMessage = useDeleteMessageCallback({\n    currentGroupChannel: currentGroupChannel,\n    messagesDispatcher: messagesDispatcher\n  }, {\n    logger: logger\n  });\n  var updateMessage = useUpdateMessageCallback({\n    currentGroupChannel: currentGroupChannel,\n    messagesDispatcher: messagesDispatcher,\n    onBeforeUpdateUserMessage: onBeforeUpdateUserMessage\n  }, {\n    logger: logger,\n    sdk: sdk,\n    pubSub: pubSub\n  });\n  var resendMessage = useResendMessageCallback({\n    currentGroupChannel: currentGroupChannel,\n    messagesDispatcher: messagesDispatcher\n  }, {\n    logger: logger\n  });\n\n  var _useSendMessageCallba = useSendMessageCallback({\n    currentGroupChannel: currentGroupChannel,\n    onBeforeSendUserMessage: onBeforeSendUserMessage\n  }, {\n    sdk: sdk,\n    logger: logger,\n    pubSub: pubSub,\n    messagesDispatcher: messagesDispatcher\n  }),\n      _useSendMessageCallba2 = _slicedToArray(_useSendMessageCallba, 2),\n      messageInputRef = _useSendMessageCallba2[0],\n      onSendMessage = _useSendMessageCallba2[1];\n\n  var _useSendFileMessageCa = useSendFileMessageCallback({\n    currentGroupChannel: currentGroupChannel,\n    onBeforeSendFileMessage: onBeforeSendFileMessage,\n    imageCompression: imageCompression\n  }, {\n    sdk: sdk,\n    logger: logger,\n    pubSub: pubSub,\n    messagesDispatcher: messagesDispatcher\n  }),\n      _useSendFileMessageCa2 = _slicedToArray(_useSendFileMessageCa, 1),\n      onSendFileMessage = _useSendFileMessageCa2[0];\n\n  if (!channelUrl) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-conversation\"\n    }, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.NO_CHANNELS\n    }));\n  }\n\n  if (isInvalid) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-conversation\"\n    }, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.WRONG\n    }));\n  }\n\n  if (sdkError) {\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"sendbird-conversation\"\n    }, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.WRONG,\n      retryToConnect: function retryToConnect() {\n        logger.info('Channel: reconnecting');\n        reconnect();\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React__default.createElement(UserProfileProvider, {\n    className: \"sendbird-conversation\",\n    disableUserProfile: userDefinedDisableUserProfile,\n    renderUserProfile: userDefinedRenderProfile\n  }, renderChatHeader ? renderChatHeader({\n    channel: currentGroupChannel,\n    user: user\n  }) : /*#__PURE__*/React__default.createElement(ChatHeader, {\n    theme: theme,\n    currentGroupChannel: currentGroupChannel,\n    currentUser: user,\n    showSearchIcon: showSearchIcon,\n    onSearchClick: onSearchClick,\n    onActionClick: onChatHeaderActionClick,\n    subTitle: currentGroupChannel.members && currentGroupChannel.members.length !== 2,\n    isMuted: false\n  }), isFrozen && /*#__PURE__*/React__default.createElement(FrozenNotification, null), unreadCount > 0 && /*#__PURE__*/React__default.createElement(Notification, {\n    count: unreadCount,\n    onClick: function onClick() {\n      if (intialTimeStamp) {\n        setIntialTimeStamp(null);\n        setAnimatedMessageId(null);\n        setHighLightedMessageId(null);\n      } else {\n        scrollIntoLast(); // there is no scroll\n\n        if (scrollRef.current.scrollTop === 0) {\n          try {\n            currentGroupChannel.markAsRead();\n          } catch (_unused) {//\n          }\n\n          messagesDispatcher({\n            type: MARK_AS_READ\n          });\n        }\n      }\n    },\n    time: unreadSince\n  }), loading ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-conversation\"\n  }, /*#__PURE__*/React__default.createElement(PlaceHolder, {\n    type: PlaceHolderTypes.LOADING\n  })) : /*#__PURE__*/React__default.createElement(ConversationScroll, {\n    swapParams: sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback(),\n    animatedMessageId: animatedMessageId,\n    highLightedMessageId: highLightedMessageId,\n    userId: userId,\n    hasMore: hasMore,\n    disabled: !isOnline,\n    onScroll: onScrollCallback,\n    onScrollDown: onScrollDownCallback,\n    scrollRef: scrollRef,\n    readStatus: readStatus,\n    useReaction: usingReaction,\n    replyType: replyType,\n    allMessages: allMessages,\n    scrollToMessage: scrollToMessage,\n    emojiAllMap: emojiAllMap,\n    membersMap: nicknamesMap,\n    editDisabled: isDisabledBecauseFrozen(currentGroupChannel),\n    deleteMessage: deleteMessage,\n    updateMessage: updateMessage,\n    resendMessage: resendMessage,\n    toggleReaction: toggleReaction,\n    emojiContainer: emojiContainer,\n    renderChatItem: renderChatItem,\n    quoteMessage: quoteMessage,\n    setQuoteMessage: setQuoteMessage,\n    showScrollBot: showScrollBot,\n    onClickScrollBot: function onClickScrollBot() {\n      setIntialTimeStamp(null);\n      setAnimatedMessageId(null);\n      setHighLightedMessageId(null);\n    },\n    renderCustomMessage: renderCustomMessage,\n    useMessageGrouping: useMessageGrouping,\n    messagesDispatcher: messagesDispatcher,\n    currentGroupChannel: currentGroupChannel,\n    memoizedEmojiListItems: memoizedEmojiListItems\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-conversation__footer\"\n  }, /*#__PURE__*/React__default.createElement(MessageInputWrapper$1, {\n    channel: currentGroupChannel,\n    user: user,\n    ref: messageInputRef,\n    isOnline: isOnline,\n    initialized: initialized,\n    onSendMessage: onSendMessage,\n    onFileUpload: onSendFileMessage,\n    quoteMessage: quoteMessage,\n    setQuoteMessage: setQuoteMessage,\n    renderMessageInput: renderMessageInput\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-conversation__footer__typing-indicator\"\n  }, /*#__PURE__*/React__default.createElement(TypingIndicator, {\n    className: \"sendbird-conversation__footer__typing-indicator__text\",\n    channelUrl: channelUrl,\n    sb: sdk,\n    logger: logger\n  }), !isOnline && /*#__PURE__*/React__default.createElement(ConnectionStatus, {\n    sdkInit: sdkInit,\n    sb: sdk,\n    logger: logger\n  }))));\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({})\n      }),\n      error: PropTypes.bool\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({})\n    })\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      resizingHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    })\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string)\n    })\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onBeforeSendUserMessage: PropTypes.func,\n  // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func,\n  // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  renderChatHeader: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool\n};\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  replyType: 'NONE',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop\n};\nvar getEmojiCategoriesFromEmojiContainer = getEmojiCategoriesFromEmojiContainer$1,\n    getAllEmojisFromEmojiContainer = getAllEmojisFromEmojiContainer$1,\n    getEmojisFromEmojiContainer = getEmojisFromEmojiContainer$1;\nvar Conversation = withSendbirdContext(ConversationPanel);\nexport { ConversationPanel, Conversation as default, getAllEmojisFromEmojiContainer, getEmojiCategoriesFromEmojiContainer, getEmojisFromEmojiContainer };","map":{"version":3,"mappings":"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","names":["RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_THREAD_INFO_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","MESSAGE_LIST_PARAMS_CHANGED","getOutgoingMessageStates","UNDEFINED","getSendingMessageStatus","SUCCEEDED","_getSendingMessageSta$1","FAILED","PENDING","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","topics","msg","channel","message","url","type","channelActions","payload","fromSelector","messageId","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer","emojiContainer","emojiCategories","getAllEmojisFromEmojiContainer","allEmojis","categoryIndex","length","emojis","emojiIndex","push","getEmojisFromEmojiContainer","emojiCategoryId","filter","emojiCategory","id","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","messageType","sender","_message$sender","_comparingMessage$sen","sendingStatus","_comparingMessage$sen2","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","isAcceptable","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","isAdminMessage","lastIndexOf","messages","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","currentGroupChannel","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","unreadCount","unreadSince","isInvalid","messageListParams","reducer","state","action","actionTypes","initialState","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","duplicatedMessageIds","updatedAllMessages","duplicatedMessage","find","compareIds","updatedAt","filteredNewMessages","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","newMessages","reqId","_toConsumableArray","sort","a","b","failed","currentGroupChannelUrl","scrollToEnd","some","filterMessageListParams","Date","event","threadInfo","targetMessageId","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","setQuoteMessage","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","current","offsetHeight","messageActions","markAsRead","warning","onReadReceiptUpdated","onDeliveryReceiptUpdated","onMessageUpdated","onThreadInfoUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","catch","e","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","replyType","MessageListParams","getMessagesByTimestamp","prevResultSize","isInclusive","includeReplies","includeReaction","includeThreadInfo","includeParentMessageInfo","Object","keys","nextResultSize","nextMessageListParams","getTime","nextMessages","finally","utils","useHandleReconnect","_a","_b","isOnline","wasOffline","useReaction","appInfo","isUsingReaction","messageListParams_1","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","requestState","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","quoteMessage","value","trim","isReplyToChannel","parentMessageId","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","localUrl","ReactionButton","React","forwardRef","props","ref","className","selected","onClick","children","Array","isArray","join","role","style","slice","onKeyDown","tabIndex","propTypes","PropTypes","oneOfType","string","arrayOf","number","bool","func","element","isRequired","defaultProps","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","EmojiListItems","emoji","reactedReaction","reactions","reaction","isReacted","userIds","indexOf","ImageRenderer","defaultComponent","Icon","IconTypes","QUESTION","useToggleReactionCallback","deleteReaction","addReaction","useScrollToMessage","setIntialTimeStamp","setAnimatedMessageId","isPresent","MessageStatusTypes","MessageStatus","useContext","LocalizationContext","dateLocale","showMessageStatusIcon","isGroupChannel","isSuper","isPublic","isBroadcast","iconType","SENT","DONE","DELIVERED","DONE_ALL","READ","ERROR","iconColor","IconColors","messageStatus","getOutgoingMessageState","getUnreadMemberCount","_channel$getUnreadMem","getUndeliveredMemberCount","_channel$getUndeliver","Loader","SPINNER","fillColor","PRIMARY","isSentStatus","Label","LabelTypography","CAPTION_3","color","LabelColors","ONBACKGROUND_2","locale","shape","friendName","profileUrl","MessageItemMenu","_c","isByMe","_d","disabled","showEdit","showRemove","resendMessage","setSupposedHover","triggerRef","containerRef","showMenuItemCopy","isUserMessage","showMenuItemReply","isFailedMessage","isPendingMessage","showMenuItemEdit","isSentMessage","showMenuItemResend","showMenuItemDelete","getClassName","ContextMenu","menuTrigger","toggleDropdown","IconButton","onBlur","MORE","CONTENT_INVERSE","menuItems","close","MenuItems","openLeft","MenuItem","copyToClipboard","stringSet","MESSAGE_MENU__COPY","disable","MESSAGE_MENU__REPLY","MESSAGE_MENU__EDIT","MESSAGE_MENU__RESEND","replyCount","MESSAGE_MENU__DELETE","MessageItemReactionMenu","EMOJI_MORE","getEmojiListAll","reactorId","placeHolder","ON_BACKGROUND_3","Tooltip","CAPTION_2","ONCONTENT_1","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","useState","showHoverTooltip","setShowHoverTooltip","childrenRef","onMouseOver","onFocus","onMouseOut","bottom","left","offsetWidth","ReactionBadge","count","isAdd","getClassNameTail","ONBACKGROUND_1","EmojiReactions2","memberNicknamesMap","_e","emojisMap","getEmojiMapAll","addReactionRef","reactedByMe","isReactedBy","getEmojiTooltipString","circle","get","size","spacefromTrigger","AdminMessage","TextMessageItemBody","mouseHover","BODY_1","isEditedMessage","ONCONTENT_2","MESSAGE_EDITED","FileMessageItemBody","IMAGE","PHOTO","VIDEO","PLAY","AUDIO","FILE_AUDIO","GIF","OTHERS","FILE_DOCUMENT","getUIKitFileType","TextButton","window","open","truncateString","ThumbnailMessageItemBody","showFileViewer","_f","thumbnailUrl","thumbnails","imageRendered","setImageRendered","alt","onLoad","isVideoMessage","ON_BACKGROUND_2","isGifMessage","GRAY","OGMessageItemBody","_k","_l","openOGUrl","ogMetaData","split","word","isUrl","LinkLabel","defaultImage","THUMBNAIL_NONE","title","SUBTITLE_2","description","BODY_2","UnknownMessageItemBody","UNKNOWN__UNKNOWN_MESSAGE_TYPE","UNKNOWN__CANNOT_READ_MESSAGE","QuoteMessage","_p","_q","parentMessageSender","parentMessage","parentMessageSenderNickname","QUOTED_MESSAGE__CURRENT_USER","parentMessageUrl","parentMessageType","currentMessageSenderNickname","isThumbnailLoaded","setThumbnailLoaded","uikitFileTypes","getUIKitFileTypes","splitFileName","REPLY","ONBACKGROUND_3","QUOTED_MESSAGE__REPLIED_TO","isThumbnailMessage","isVideo","isGif","isFileMessage","isSupportedFileView","MessageContent","_g","chainTop","_h","chainBottom","_j","scrollToMessage","messageTypes","getUIKitMessageTypes","UserProfileContext","disableUserProfile","renderUserProfile","avatarRef","setMouseHover","supposedHover","isByMeClassName","chainTopClassName","useReactionClassName","supposedHoverClassName","useReplying","useReplyingClassName","ClientAdminMessage","onMouseLeave","React__default","Avatar","paddingTop","paddingBottom","user","UserProfile","onSuccess","getSenderName","isTextMessage","isOGMessage","getUIKitMessageType","FILE","UNKNOWN","EmojiReactions","RemoveMessage","onCloseModal","onDeleteMessage","Modal","ButtonTypes","DANGER","onCancel","onSubmit","submitText","titleText","MODAL__DELETE_MESSAGE__TITLE","MessageHoc","editDisabled","hasSeparator","updateMessage","membersMap","animatedMessageId","highLightedMessageId","renderCustomMessage","handleScroll","setShowEdit","setShowRemove","setShowFileViewer","isAnimated","setIsAnimated","isHighlighted","setIsHighlighted","editMessageInputRef","useMessageScrollRef","useLayoutEffect","_message$reactions","scrollIntoView","block","inline","RenderedMessage","DateSeparator","MessageInput","isEdit","onSendMessage","onCancelEdit","marginBottom","RemoveMessageModal","FileViewer","onClose","onDelete","isDateseparator","oneOf","instanceOf","SCROLL_REF_CLASS_NAME","ConversationScroll","_classCallCheck","_this","_defineProperty","_assertThisInitialize2","scrollBottom","onScroll","onScrollDown","target","clientHeight","nodes","querySelectorAll","first","last","setState","emojiAllMap","renderChatItem","useMessageGrouping","memoizedEmojiListItems","showScrollBot","onClickScrollBot","PlaceHolder","PlaceHolderTypes","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","onScrollToMessage","onReplyMessage","menuDisabled","MessageHOC","_this2","CHEVRON_DOWN","Component","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","handlerId","setHandlerId","typingMembers","setTypingMembers","newHandlerId","handler","onTypingStatusUpdated","getTypingMembers","componentClassname","QuoteMessageThumbnail","isImageMessage","fixedSize","isAudioMessage","QuoteMessageInput","replyingMessage","fileMessage","CAPTION_1","QUOTE_MESSAGE_INPUT__REPLY_TO","NO_NAME","QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE","QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO","QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF","CLOSE","MessageInputWrapper","onFileUpload","renderMessageInput","placeholder","MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER","MESSAGE_INPUT__PLACE_HOLDER__DISABLED","MESSAGE_INPUT__PLACE_HOLDER__MUTED","onStartTyping","startTyping","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","getChannelTitle","currentUserId","LabelStringSet","NO_TITLE","NO_MEMBERS","noop","ChatHeader","currentUser","subTitle","isMuted","theme","showSearchIcon","onSearchClick","onActionClick","ChannelAvatar","H_2","NOTIFICATIONS_OFF_FILLED","SEARCH","INFO","coverUrl","ConversationPanel","stores","sdkStore","userStore","config","reconnect","dispatchers","queries","startingPoint","highlightedMessage","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","setHighLightedMessageId","useReducer","messagesReducer","messagesInitialState","messagesStore","readStatus","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","WRONG","retryToConnect","UserProfileProvider","LOADING","any","includeMetaArray","includeParentMessageText","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"sources":["C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\dux\\actionTypes.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\utils.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\dux\\initialState.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\dux\\reducers.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useHandleChannelEvents.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useGetChannel.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useInitialMessagesFetch.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useHandleReconnect.ts","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useScrollCallback.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useScrollDownCallback.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useDeleteMessageCallback.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useUpdateMessageCallback.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useResendMessageCallback.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useSendMessageCallback.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useSendFileMessageCallback.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\ReactionButton\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useMemoizedEmojiListItems.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useToggleReactionCallback.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\hooks\\useScrollToMessage.ts","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\MessageStatus\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\MessageItemMenu\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\MessageItemReactionMenu\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\Tooltip\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\TooltipWrapper\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\ReactionBadge\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\EmojiReactions\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\AdminMessage\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\TextMessageItemBody\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\FileMessageItemBody\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\ThumbnailMessageItemBody\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\OGMessageItemBody\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\UnknownMessageItemBody\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\QuoteMessage\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\MessageContent\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\RemoveMessage.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\MessageHOC.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\ConversationScroll.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\Notification.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\FrozenNotification.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\TypingIndicator.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\QuoteMessageInput\\QuoteMessageThumbnail.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\QuoteMessageInput\\index.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\components\\MessageInputWrapper.tsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\ConnectionStatus\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\ChatHeader\\utils.js","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\ui\\ChatHeader\\index.jsx","C:\\Users\\Ivo\\OneDrive\\Bureaublad\\bootcamp\\realtimechat\\node_modules\\sendbird-uikit\\src\\smart-components\\Conversation\\index.jsx"],"sourcesContent":["export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_THREAD_INFO_UPDATED = 'ON_MESSAGE_THREAD_INFO_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\n\nexport const MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\n","import format from 'date-fns/format';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport {\n  getSendingMessageStatus,\n  getOutgoingMessageStates,\n} from '../../utils';\n\nconst MessageStatusType = getOutgoingMessageStates();\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = getSendingMessageStatus();\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__messages-padding');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (!(message\n    && comparingMessage\n    && message?.messageType !== 'admin'\n    && comparingMessage?.messageType !== 'admin'\n    && message?.sender\n    && comparingMessage?.sender\n    && message?.createdAt\n    && comparingMessage?.createdAt\n    && message?.sender?.userId\n    && comparingMessage?.sender?.userId\n  )) {\n    return false;\n  }\n\n  return (\n    message?.sendingStatus === comparingMessage?.sendingStatus\n    && message?.sender?.userId === comparingMessage?.sender?.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => {\n  const sendingStatus = currMessage?.sendingStatus || '';\n  const isAcceptable = sendingStatus !== 'pending' && sendingStatus !== 'failed';\n  return [\n    isSameGroup(prevMessage, currMessage) && isAcceptable,\n    isSameGroup(currMessage, nextMessage) && isAcceptable,\n  ];\n};\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { filterMessageListParams, getSendingMessageStatus } from '../../../utils';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = getSendingMessageStatus();\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...filteredNewMessages,\n          ...updatedAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...updatedAllMessages,\n          ...filteredNewMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (state.allMessages.some((msg) => msg.messageId === message.messageId)) {\n        return state;\n      }\n      // Filter by userFilledQuery\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const { channel, message } = action.payload;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        // Delete the message if it doesn't match to the params anymore\n        return {\n          ...state,\n          allMessages: state.allMessages.filter((m) => (\n            !compareIds(m.messageId, message?.messageId)\n          )),\n        };\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_THREAD_INFO_UPDATED: {\n      const { channel, event } = action.payload;\n      const { channelUrl, threadInfo, targetMessageId } = event;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (\n        !compareIds(channel.url, currentGroupChannelUrl)\n        || !compareIds(channel.url, channelUrl)\n      ) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, targetMessageId)) {\n            // eslint-disable-next-line no-param-reassign\n            m.threadInfo = threadInfo; // Upsert threadInfo to the target message\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.MESSAGE_LIST_PARAMS_CHANGED: {\n      return {\n        ...state,\n        messageListParams: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n  setQuoteMessage,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel?.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, channelUrl) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                try {\n                  currentGroupChannel.markAsRead();\n                } catch {\n                  //\n                }\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, channelUrl) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      /**\n       * We need to update current channel with the channel,\n       * when onReadReceiptUpdated or onDeliveryReceiptUpdated are called,\n       * because cachedReadReceiptStatus and cachedDeliveryReceiptStatus properties were changed\n       */\n      ChannelHandler.onReadReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onReadReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n      ChannelHandler.onDeliveryReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onDeliveryReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onThreadInfoUpdated = (channel, event) => {\n        logger.info('Channel | useHandleChannelEvents: onThreadInfoUpdated', event);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_THREAD_INFO_UPDATED,\n          payload: { channel, event },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        setQuoteMessage(null);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          try {\n            groupChannel.markAsRead();\n          } catch {\n            //\n          }\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n  replyType,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (replyType && replyType === 'QUOTE_REPLY') {\n        messageListParams.includeThreadInfo = true;\n        messageListParams.includeParentMessageInfo = true;\n        messageListParams.replyType = 'only_reply_to_channel';\n      }\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      if ((replyType && replyType === 'QUOTE_REPLY') || userFilledMessageListQuery) {\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: messageActionTypes.MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams,\n        });\n      }\n\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(\n          intialTimeStamp,\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            // to make sure there are no more messages below\n            const nextMessageListParams = new sdk.MessageListParams();\n            nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n            nextMessageListParams.isInclusive = true;\n            nextMessageListParams.includeReplies = false;\n            nextMessageListParams.includeReaction = true;\n            if (replyType && replyType === 'QUOTE_REPLY') {\n              nextMessageListParams.includeThreadInfo = true;\n              nextMessageListParams.includeParentMessageInfo = true;\n              nextMessageListParams.replyType = 'only_reply_to_channel';\n            }\n            if (userFilledMessageListQuery) {\n              Object.keys(userFilledMessageListQuery).forEach((key) => {\n                nextMessageListParams[key] = userFilledMessageListQuery[key];\n              });\n            }\n            currentGroupChannel.getMessagesByTimestamp(\n              latestFetchedMessageTimeStamp || new Date().getTime(),\n              nextMessageListParams,\n            ).then((nextMessages) => {\n              messagesDispatcher({\n                type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                payload: {\n                  messages,\n                  hasMore,\n                  lastMessageTimeStamp,\n                  currentGroupChannel,\n                  latestFetchedMessageTimeStamp,\n                  hasMoreToBottom: nextMessages && nextMessages.length > 0,\n                },\n              });\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(\n          new Date().getTime(),\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages,\n                hasMore,\n                lastMessageTimeStamp,\n                currentGroupChannel,\n                latestFetchedMessageTimeStamp,\n                hasMoreToBottom: false,\n              },\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { Logger, Sdk } from '../../..';\nimport { GroupChannel } from 'sendbird';\n\ninterface DynamicParams {\n  isOnline: boolean;\n  replyType?: string;\n}\n\ninterface StaticParams {\n  logger: Logger;\n  sdk: Sdk;\n  currentGroupChannel: GroupChannel;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n  userFilledMessageListQuery?: Record<string, any>;\n}\n\nfunction useHandleReconnect(\n  { isOnline, replyType }: DynamicParams,\n  {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  }: StaticParams,\n): void {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline && currentGroupChannel?.url) {\n        logger.info('Refreshing conversation state');\n        const useReaction = sdk?.appInfo?.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.isInclusive = true;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n        if (replyType && replyType === 'QUOTE_REPLY') {\n          messageListParams.includeThreadInfo = true;\n          messageListParams.includeParentMessageInfo = true;\n          messageListParams.replyType = 'only_reply_to_channel';\n        }\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n          payload: null,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                  payload: null,\n                });\n\n                const hasMore = messages?.length > 0;\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                try {\n                  currentGroupChannel.markAsRead?.();\n                } catch {\n                  //\n                }\n              });\n          });\n      }\n    };\n  }, [isOnline, replyType]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n  replyType,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp, replyType]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n  replyType,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom, replyType]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    (quoteMessage = null) => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        if (quoteMessage) {\n          params.isReplyToChannel = true;\n          params.parentMessageId = quoteMessage.messageId;\n        }\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text, quoteMessage)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file, quoteMessage = null) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile, quoteMessage)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', { message, error });\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file, quoteMessage)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', { message, error });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    className,\n    width,\n    height,\n    selected,\n    onClick,\n    children,\n  } = props;\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-button${selected ? '--selected' : ''}`,\n      ].join(' ')}\n      ref={ref}\n      role=\"button\"\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.element.isRequired,\n};\n\nReactionButton.defaultProps = {\n  className: '',\n  width: '36px',\n  height: '36px',\n  selected: false,\n  onClick: () => { },\n};\n\nexport default ReactionButton;\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  /* eslint-disable react/prop-types */\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import { useCallback } from 'react';\nimport { SendbirdTypes } from '../../../types';\nimport { Logger } from '../../../index';\n\ninterface DynamicParams {\n  setIntialTimeStamp(ts: number): null;\n  setAnimatedMessageId(id: number): null;\n  allMessages: SendbirdTypes['BaseMessageInstance'][];\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\nfunction useScrollToMessage({\n  setIntialTimeStamp,\n  setAnimatedMessageId,\n  allMessages,\n}: DynamicParams,\n  { logger }: StaticParams,\n): (createdAt: number, messageId: number) => void {\n  return useCallback(\n    (createdAt: number, messageId: number) => {\n      const isPresent = allMessages.find((m) => (\n        m.messageId === messageId\n      ));\n      setAnimatedMessageId(null);\n      setTimeout(() => {\n        if (isPresent) {\n          logger.info('Channel: scroll to message - message is present');\n          setAnimatedMessageId(messageId);\n        } else {\n          logger.info('Channel: scroll to message - fetching older messages');\n          setIntialTimeStamp(null);\n          setIntialTimeStamp(createdAt);\n          setAnimatedMessageId(messageId);\n        }\n      });\n    }, [\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  ],\n  );\n}\n\nexport default useScrollToMessage;\n","import React, { useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport format from 'date-fns/format';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\n\nimport {\n  getOutgoingMessageState,\n  getOutgoingMessageStates,\n  isSentStatus,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport const MessageStatusTypes = getOutgoingMessageStates();\nexport default function MessageStatus({\n  className,\n  message,\n  channel,\n}) {\n  const { dateLocale } = useContext(LocalizationContext);\n  const showMessageStatusIcon = channel?.isGroupChannel()\n    && !channel?.isSuper\n    && !channel?.isPublic\n    && !channel?.isBroadcast;\n  const iconType = {\n    [MessageStatusTypes.SENT]: IconTypes.DONE,\n    [MessageStatusTypes.DELIVERED]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.READ]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.FAILED]: IconTypes.ERROR,\n  };\n  const iconColor = {\n    [MessageStatusTypes.SENT]: IconColors.SENT,\n    [MessageStatusTypes.DELIVERED]: IconColors.SENT,\n    [MessageStatusTypes.READ]: IconColors.READ,\n    [MessageStatusTypes.FAILED]: IconColors.ERROR,\n  };\n\n  const messageStatus = useMemo(() => (\n    getOutgoingMessageState(channel, message)\n  ), [channel?.getUnreadMemberCount?.(message), channel?.getUndeliveredMemberCount?.(message)]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-status',\n      ].join(' ')}\n    >\n      {(showMessageStatusIcon) && (\n        (messageStatus === MessageStatusTypes.PENDING) ? (\n          <Loader\n            className=\"sendbird-message-status__icon\"\n            width=\"16px\"\n            height=\"16px\"\n          >\n            <Icon\n              type={IconTypes.SPINNER}\n              fillColor={IconColors.PRIMARY}\n              width=\"16px\"\n              height=\"16px\"\n            />\n          </Loader>\n        ) : (\n          <Icon\n            className=\"sendbird-message-status__icon\"\n            type={iconType[messageStatus] || IconTypes.ERROR}\n            fillColor={iconColor[messageStatus]}\n            width=\"16px\"\n            height=\"16px\"\n          />\n        )\n      )}\n      {isSentStatus(messageStatus) && (\n        <Label\n          className=\"sendbird-message-status__text\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {format(message?.createdAt, 'p', { locale: dateLocale })}\n        </Label>\n      )}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    createdAt: PropTypes.number,\n    sender: PropTypes.shape({\n      friendName: PropTypes.string,\n      nickname: PropTypes.string,\n      userId: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n    sendingStatus: PropTypes.string,\n  }),\n  channel: PropTypes.shape({\n    isGroupChannel: PropTypes.func,\n    isSuper: PropTypes.bool,\n    isBroadcast: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    getUnreadMemberCount: PropTypes.func,\n    getUndeliveredMemberCount: PropTypes.func,\n  }),\n};\n\nMessageStatus.defaultProps = {\n  className: '',\n  message: null,\n  channel: null,\n};\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { FileMessage, GroupChannel, OpenChannel, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport {\n  getClassName,\n  copyToClipboard,\n  isUserMessage,\n  isSentMessage,\n  isFailedMessage,\n  isPendingMessage,\n} from '../../utils/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  isByMe?: boolean;\n  disabled?: boolean;\n  replyType?: ReplyType;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemMenu({\n  className,\n  message,\n  channel,\n  isByMe = false,\n  disabled = false,\n  replyType,\n  showEdit,\n  showRemove,\n  resendMessage,\n  setQuoteMessage,\n  setSupposedHover,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemReply: boolean = replyType === 'QUOTE_REPLY' && !isFailedMessage(channel, message) && !isPendingMessage(channel, message);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(channel, message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(channel, message) && message?.isResendable?.() && isByMe);\n  const showMenuItemDelete: boolean = !isPendingMessage(channel, message) && isByMe;\n\n  if (!(showMenuItemCopy || showMenuItemReply || showMenuItemEdit || showMenuItemResend || showMenuItemDelete)) {\n    return null;\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-menu__trigger__icon\"\n              type={IconTypes.MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <MenuItems\n              className=\"sendbird-message-item-menu__list\"\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              openLeft={isByMe}\n            >\n              {showMenuItemCopy && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-copy\"\n                  onClick={() => {\n                    copyToClipboard((message as UserMessage)?.message);\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemReply && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-reply\"\n                  onClick={() => {\n                    setQuoteMessage(message);\n                    closeDropdown();\n                  }}\n                  disable={message?.parentMessageId > 0}\n                >\n                  {stringSet.MESSAGE_MENU__REPLY}\n                </MenuItem>\n              )}\n              {showMenuItemEdit && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-edit\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showEdit(true);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__EDIT}\n                </MenuItem>\n              )}\n              {showMenuItemResend && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-resend\"\n                  onClick={() => {\n                    if (!disabled) {\n                      resendMessage(message);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__RESEND}\n                </MenuItem>\n              )}\n              {showMenuItemDelete && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-delete\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showRemove(true);\n                      closeDropdown();\n                    }\n                  }}\n                  disable={message?.threadInfo?.replyCount > 0}\n                >\n                  {stringSet.MESSAGE_MENU__DELETE}\n                </MenuItem>\n              )}\n            </MenuItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React, { ReactElement, useRef } from 'react';\nimport { FileMessage, UserMessage, Emoji, Reaction, EmojiContainer, GroupChannel, OpenChannel } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport ReactionButton from '../ReactionButton';\nimport { getClassName, getEmojiListAll, isPendingMessage, isFailedMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  userId: string;\n  spaceFromTrigger?: Record<string, unknown>;\n  emojiContainer?: EmojiContainer;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemReactionMenu({\n  className,\n  message,\n  channel,\n  userId,\n  spaceFromTrigger = {},\n  emojiContainer,\n  toggleReaction,\n  setSupposedHover,\n}: Props): ReactElement {\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  if(isPendingMessage(channel, message) || isFailedMessage(channel, message)) {\n    return null;\n  }\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-reaction-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-reaction-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-reaction-menu__trigger__icon\"\n              type={IconTypes.EMOJI_MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <EmojiListItems\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              spaceFromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction) => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string) => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={() => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji.url}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style) => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-tooltip__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONCONTENT_1}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip-wrapper',\n      ].join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className=\"sendbird-tooltip-wrapper__children\"\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className=\"sendbird-tooltip-wrapper__hover-tooltip\"\n            style={{ bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)` }}\n          >\n            <div className=\"sendbird-tooltip-wrapper__hover-tooltip__inner\">\n              <div\n                className=\"sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container\"\n                style={{ left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)` }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const getClassNameTail = () => {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n    if (isAdd) {\n      return '--is-add';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-badge${getClassNameTail()}`,\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label\n          className={(children && count) && 'sendbird-reaction-badge__inner__count'}\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { Emoji, EmojiContainer, FileMessage, Reaction, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport ReactionBadge from '../ReactionBadge';\nimport ReactionButton from '../ReactionButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\n\nimport { getClassName, getEmojiListAll, getEmojiMapAll, getEmojiTooltipString, isReactedBy } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  message: UserMessage | FileMessage;\n  emojiContainer: EmojiContainer;\n  memberNicknamesMap: Map<string, string>;\n  spaceFromTrigger?: Record<string, unknown>;\n  isByMe?: boolean;\n  toggleReaction?: (message: UserMessage | FileMessage, key: string, byMe: boolean) => void;\n}\n\nexport default function EmojiReactions2({\n  className,\n  userId,\n  message,\n  emojiContainer,\n  memberNicknamesMap,\n  spaceFromTrigger = {},\n  isByMe = false,\n  toggleReaction,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const emojisMap = getEmojiMapAll(emojiContainer);\n  const addReactionRef = useRef(null);\n\n  return (\n    <div className={getClassName([\n      className, 'sendbird-emoji-reactions',\n      isByMe ? 'outgoing' : 'incoming',\n    ])}>\n      {(message?.reactions?.length > 0) && (\n        message.reactions.map((reaction: Reaction): ReactElement => {\n          const reactedByMe = isReactedBy(userId, reaction);\n          return (\n            <TooltipWrapper\n              className=\"sendbird-emoji-reactions__reaction-badge\"\n              key={reaction?.key}\n              hoverTooltip={(reaction?.userIds?.length > 0) && (\n                <Tooltip>\n                  {getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet)}\n                </Tooltip>\n              )}\n            >\n              <ReactionBadge\n                count={reaction.userIds.length}\n                selected={reactedByMe}\n                onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n              >\n                <ImageRenderer\n                  circle\n                  url={emojisMap.get(reaction?.key)?.url || ''}\n                  width=\"20px\"\n                  height=\"20px\"\n                  defaultComponent={(\n                    <Icon width=\"20px\" height=\"20px\" type={IconTypes.QUESTION} />\n                  )}\n                />\n              </ReactionBadge>\n            </TooltipWrapper>\n          );\n        })\n      )}\n      {(message?.reactions?.length < emojisMap.size) && (\n        <ContextMenu\n          menuTrigger={(toggleDropdown: () => void): ReactElement => (\n            <ReactionBadge\n              className=\"sendbird-emoji-reactions__add-reaction-badge\"\n              ref={addReactionRef}\n              isAdd\n              onClick={toggleDropdown}\n            >\n              <Icon\n                type={IconTypes.EMOJI_MORE}\n                fillColor={IconColors.ON_BACKGROUND_3}\n                width=\"20px\"\n                height=\"20px\"\n              />\n            </ReactionBadge>\n          )}\n          menuItems={(closeDropdown: () => void): ReactElement => (\n            <EmojiListItems\n              parentRef={addReactionRef}\n              parentContainRef={addReactionRef}\n              closeDropdown={closeDropdown}\n              spacefromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction): boolean => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string): boolean => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={(): void => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji?.url || ''}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style: Record<string, unknown>): ReactElement => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!(message.isAdminMessage || message.messageType) || !message.isAdminMessage() || message.messageType !== 'admin') {\n    return null;\n  }\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-admin-message',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-admin-message__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    messageType: PropTypes.string,\n    isAdminMessage: PropTypes.func,\n  }),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport {\n  getClassName,\n  isEditedMessage,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function TextMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Label\n      type={LabelTypography.BODY_1}\n      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n    >\n      <p className={getClassName([\n        className,\n        'sendbird-text-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}>\n        {message?.message}\n        {\n          isEditedMessage(message) && (\n            <Label\n              className=\"sendbird-text-message-item-body__message edited\"\n              type={LabelTypography.BODY_1}\n              color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n            >\n              {` ${stringSet.MESSAGE_EDITED} `}\n            </Label>\n          )\n        }\n      </p>\n    </Label>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport { getClassName, getUIKitFileType, truncateString } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function FileMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-file-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <div className=\"sendbird-file-message-item-body__file-icon\">\n        <Icon\n          className={'sendbird-file-message-item-body__file-icon__icon'}\n          type={{\n            IMAGE: IconTypes.PHOTO,\n            VIDEO: IconTypes.PLAY,\n            AUDIO: IconTypes.FILE_AUDIO,\n            GIF: IconTypes.GIF,\n            OTHERS: IconTypes.FILE_DOCUMENT,\n          }[getUIKitFileType(message?.type)]}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n      <TextButton\n        className=\"sendbird-file-message-item-body__file-name\"\n        onClick={() => { window.open(message?.url) }}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <Label\n          className=\"sendbird-file-message-item-body__file-name__text\"\n          type={LabelTypography.BODY_1}\n          color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n        >\n          {truncateString(message?.name || message?.url)}\n        </Label>\n      </TextButton>\n    </div>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { getClassName, isGifMessage, isVideoMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n  showFileViewer?: (bool: boolean) => void;\n}\n\nexport default function ThumbnailMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n  showFileViewer,\n}: Props): ReactElement {\n  const { thumbnails = [] } = message;\n  const thumbnailUrl: string = thumbnails.length > 0 ? thumbnails[0]?.url : '';\n  const [imageRendered, setImageRendered] = useState(false);\n\n  return (\n    <div\n      className={getClassName([\n        className,\n        'sendbird-thumbnail-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}\n      onClick={() => {\n        if(message?.sendingStatus === 'succeeded'){\n          showFileViewer(true);\n        }\n      }}\n    >\n      <ImageRenderer\n        className=\"sendbird-thumbnail-message-item-body__thumbnail\"\n        url={thumbnailUrl || message?.url}\n        alt={message?.type}\n        width=\"360px\"\n        height=\"270px\"\n        onLoad={() => { setImageRendered(true) }}\n        placeHolder={(style) => (\n          <div\n            className=\"sendbird-thumbnail-message-item-body__placeholder\"\n            style={style}\n          >\n            <div className=\"sendbird-thumbnail-message-item-body__placeholder__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO}\n                fillColor={IconColors.ON_BACKGROUND_2}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )}\n      />\n      {\n        (isVideoMessage(message) && !thumbnailUrl) && !imageRendered && (\n          <video className=\"sendbird-thumbnail-message-item-body__video\">\n            <source src={message?.url} type={message?.type} />\n          </video>\n        )\n      }\n      <div className=\"sendbird-thumbnail-message-item-body__image-cover\" />\n      {\n        (isVideoMessage(message) || isGifMessage(message)) && (\n          <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper\">\n            <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF}\n                fillColor={IconColors.GRAY}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport Icon, { IconTypes } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport {\n  getClassName,\n  isEditedMessage,\n  isUrl,\n} from '../../utils';\nimport uuidv4 from '../../utils/uuid';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function OGMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const openOGUrl = (): void => {\n    if (message?.ogMetaData?.url) window.open(message?.ogMetaData?.url);\n  };\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-og-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        key={uuidv4()}\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <p className=\"sendbird-og-message-item-body__text-bubble\">\n          {\n            message?.message.split(' ').map((word: string) => (\n              isUrl(word)\n                ? (\n                  <LinkLabel\n                    className=\"sendbird-og-message-item-body__text-bubble__message\"\n                    key={uuidv4()}\n                    src={word}\n                    type={LabelTypography.BODY_1}\n                    color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n                  >\n                    {word}\n                  </LinkLabel>\n                )\n                : (`${word} `)\n            ))\n          }\n          {\n            isEditedMessage(message) && (\n              <Label\n                className=\"sendbird-og-message-item-body__text-bubble__message\"\n                type={LabelTypography.BODY_1}\n                color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n              >\n                {` ${stringSet.MESSAGE_EDITED} `}\n              </Label>\n            )\n          }\n        </p>\n      </Label>\n      <div\n        className=\"sendbird-og-message-item-body__og-thumbnail\"\n        onClick={openOGUrl}\n      >\n        <ImageRenderer\n          className=\"sendbird-og-message-item-body__og-thumbnail__image\"\n          url={message?.ogMetaData?.defaultImage?.url || ''}\n          alt={message?.ogMetaData?.defaultImage?.alt}\n          // TODO: Change fixing width and height lengths\n          width=\"320px\"\n          height=\"180px\"\n          defaultComponent={(\n            <div className=\"sendbird-og-message-item-body__og-thumbnail__place-holder\">\n              <Icon\n                className=\"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\"\n                type={IconTypes.THUMBNAIL_NONE}\n                width=\"56px\"\n                height=\"56px\"\n              />\n            </div>\n          )}\n        />\n      </div>\n      <div\n        className=\"sendbird-og-message-item-body__description\"\n        onClick={openOGUrl}\n      >\n        {message?.ogMetaData?.title && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__title\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.title}\n          </Label>\n        )}\n        {message?.ogMetaData?.description && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__description\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.description}\n          </Label>\n        )}\n        {message?.ogMetaData?.url && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__url\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {message.ogMetaData.url}\n          </Label>\n        )}\n      </div>\n      <div className=\"sendbird-og-message-item-body__cover\" />\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { CoreMessageType, getClassName } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  isByMe?: boolean;\n  message: CoreMessageType;\n  mouseHover?: boolean;\n}\n\nexport default function UnknownMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-unknown-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        className=\"sendbird-unknown-message-item-body__header\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n      </Label>\n      <Label\n        className=\"sendbird-unknown-message-item-body__description\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n      </Label>\n    </div>\n  );\n}\n","import React, { ReactElement, useContext, useState } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ImageRenderer from '../ImageRenderer';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport {\n  getClassName,\n  getUIKitFileType,\n  getUIKitFileTypes,\n  isFileMessage,\n  isGif,\n  isSupportedFileView,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideo,\n  truncateString,\n} from '../../utils';\ninterface Props {\n  message?: UserMessage | FileMessage;\n  userId?: string;\n  isByMe?: boolean;\n  className?: string | Array<string>;\n  onClick?: () => void;\n}\n\nexport default function QuoteMessage({\n  message,\n  userId = '',\n  isByMe = false,\n  className,\n  onClick,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { parentMessage } = message;\n  const parentMessageSender = (parentMessage as UserMessage | FileMessage)?.sender;\n  const parentMessageSenderNickname = (userId === parentMessageSender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender?.nickname;\n  const parentMessageUrl = (parentMessage as FileMessage)?.url || '';\n  const parentMessageType = (parentMessage as FileMessage)?.type;\n  const currentMessageSenderNickname = (userId === message?.sender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : message?.sender?.nickname;\n\n  const [isThumbnailLoaded, setThumbnailLoaded] = useState(false);\n  const uikitFileTypes = getUIKitFileTypes();\n  const splitFileName = (parentMessage as FileMessage)?.name ? (parentMessage as FileMessage).name.split('/') : parentMessageUrl.split('/');\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming'])}\n      key={parentMessage?.messageId}\n      onClick={() => { if (onClick) onClick() }}\n    >\n      <div className=\"sendbird-quote-message__replied-to\">\n        <Icon\n          className=\"sendbird-quote-message__replied-to__icon\"\n          type={IconTypes.REPLY}\n          fillColor={IconColors.ON_BACKGROUND_3}\n          width=\"12px\"\n          height=\"12px\"\n        />\n        <Label\n          className=\"sendbird-quote-message__replied-to__text\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {`${currentMessageSenderNickname} ${stringSet.QUOTED_MESSAGE__REPLIED_TO} ${parentMessageSenderNickname}`}\n        </Label>\n      </div>\n      <div className=\"sendbird-quote-message__replied-message\">\n        {/* text message */}\n        {(isUserMessage(parentMessage as UserMessage) && (parentMessage as UserMessage)?.message?.length > 0) && (\n          <div className=\"sendbird-quote-message__replied-message__text-message\">\n            <Label\n              className=\"sendbird-quote-message__replied-message__text-message__word\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {(parentMessage as UserMessage)?.message}\n            </Label>\n          </div>\n        )}\n        {/* thumbnail message */}\n        {(isThumbnailMessage(parentMessage as FileMessage) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__thumbnail-message\">\n            <ImageRenderer\n              className=\"sendbird-quote-message__replied-message__thumbnail-message__image\"\n              url={parentMessageUrl}\n              alt={parentMessageType}\n              width=\"144px\"\n              height=\"108px\"\n              onLoad={() => setThumbnailLoaded(true)}\n              defaultComponent={(\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\">\n                    <Icon\n                      type={isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO}\n                      fillColor={IconColors.ON_BACKGROUND_2}\n                      width=\"22px\"\n                      height=\"22px\"\n                    />\n                  </div>\n                </div>\n              )}\n            />\n            {(isVideo(parentMessageType) && !((parentMessage as FileMessage)?.thumbnails?.length > 0)) && (\n              <>\n                <video className=\"sendbird-quote-message__replied-message__thumbnail-message__video\">\n                  <source src={parentMessageUrl} type={parentMessageType} />\n                </video>\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                    <Icon\n                      type={IconTypes.PLAY}\n                      fillColor={IconColors.GRAY}\n                      width=\"14px\"\n                      height=\"14px\"\n                    />\n                  </div>\n                </div>\n              </>\n            )}\n            {(isThumbnailLoaded && isGif(parentMessageType)) && (\n              <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                  <Icon\n                    type={IconTypes.GIF}\n                    fillColor={IconColors.GRAY}\n                    width=\"14px\"\n                    height=\"14px\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* file message */}\n        {(isFileMessage(parentMessage as FileMessage) && !isSupportedFileView((parentMessage as FileMessage).type) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__file-message\">\n            <Icon\n              className=\"sendbird-quote-message__replied-message__file-message__type-icon\"\n              type={{\n                [uikitFileTypes.IMAGE]: IconTypes.PHOTO,\n                [uikitFileTypes.VIDEO]: IconTypes.PLAY,\n                [uikitFileTypes.AUDIO]: IconTypes.FILE_AUDIO,\n                [uikitFileTypes.GIF]: IconTypes.GIF,\n                [uikitFileTypes.OTHERS]: IconTypes.FILE_DOCUMENT,\n              }[getUIKitFileType(parentMessageType)]}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"16px\"\n              height=\"16px\"\n            />\n            <Label\n              className=\"sendbird-quote-message__replied-message__file-message__file-name\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_3}\n            >\n              {truncateString(splitFileName[splitFileName.length - 1])}\n            </Label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport { GroupChannel, AdminMessage, UserMessage, FileMessage, EmojiContainer } from 'sendbird';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport UserProfile from '../UserProfile';\nimport MessageStatus from '../MessageStatus';\nimport MessageItemMenu from '../MessageItemMenu';\nimport MessageItemReactionMenu from '../MessageItemReactionMenu';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport EmojiReactions from '../EmojiReactions';\n\nimport ClientAdminMessage from '../AdminMessage';\nimport TextMessageItemBody from '../TextMessageItemBody';\nimport FileMessageItemBody from '../FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../ThumbnailMessageItemBody';\nimport OGMessageItemBody from '../OGMessageItemBody';\nimport UnknownMessageItemBody from '../UnknownMessageItemBody';\nimport QuoteMessage from '../QuoteMessage';\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  getSenderName,\n} from '../../utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index.js';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  channel: GroupChannel;\n  message: AdminMessage | UserMessage | FileMessage;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  useReaction?: boolean;\n  replyType?: ReplyType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n}\nexport default function MessageContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  useReaction = false,\n  replyType,\n  nicknamesMap,\n  emojiContainer,\n  scrollToMessage,\n  showEdit,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n  setQuoteMessage,\n}: Props): ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const { dateLocale } = useContext(LocalizationContext);\n  const avatarRef = useRef(null);\n  const [mouseHover, setMouseHover] = useState(false);\n  const [supposedHover, setSupposedHover] = useState(false);\n\n  const isByMe = (userId === (message as UserMessage | FileMessage)?.sender?.userId)\n    || ((message as UserMessage | FileMessage).sendingStatus === 'pending')\n    || ((message as UserMessage | FileMessage).sendingStatus === 'failed');\n  const isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  const chainTopClassName = chainTop ? 'chain-top' : '';\n  const useReactionClassName = useReaction ? 'use-reactions' : '';\n  const supposedHoverClassName = supposedHover ? 'supposed-hover' : '';\n  const useReplying = !!((replyType === 'QUOTE_REPLY') && message?.parentMessageId && message?.parentMessage);\n  const useReplyingClassName = useReplying ? 'use-quote' : '';\n  if (message?.isAdminMessage?.() || message?.messageType === 'admin') {\n    return (<ClientAdminMessage message={message} />);\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-content', isByMeClassName])}\n      onMouseOver={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n    >\n      {/* left */}\n      <div className={getClassName(['sendbird-message-content__left', useReactionClassName, isByMeClassName, useReplyingClassName])}>\n        {(!isByMe && !chainBottom) && (\n          /** user profile */\n          <ContextMenu\n            menuTrigger={(toggleDropdown: () => void): ReactElement => (\n              <Avatar\n                className=\"sendbird-message-content__left__avatar\"\n                src={message?.sender?.profileUrl || ''}\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={(): void => { if (!disableUserProfile) toggleDropdown() }}\n              />\n            )}\n            menuItems={(closeDropdown: () => void): ReactElement => (\n              <MenuItems\n                /**\n                * parentRef: For catching location(x, y) of MenuItems\n                * parentContainRef: For toggling more options(menus & reactions)\n                */\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: 0, paddingBottom: 0 }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown })\n                  : (<UserProfile user={message.sender} onSuccess={closeDropdown} />)\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {/* outgoing menu */}\n        {isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', useReactionClassName, supposedHoverClassName, isByMeClassName])}>\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {/* middle */}\n      <div className=\"sendbird-message-content__middle\">\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-message-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message)}\n          </Label>\n        )}\n        {/* quote message */}\n        {(useReplying) ? (\n          <div className={getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])}>\n            <QuoteMessage\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              onClick={() => {\n                if (message?.parentMessage?.createdAt && message?.parentMessageId) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        ) : null}\n        {/* container: message item body + emoji reactions */}\n        <div className={getClassName(['sendbird-message-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-message-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isOGMessage(message as UserMessage)) && (\n            <OGMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              showFileViewer={showFileViewer}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {/* reactions */}\n          {(useReaction && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-message-content-reactions',\n              (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage)) ? '' : 'primary',\n              mouseHover ? 'mouse-hover' : '',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message.createdAt, 'p', { locale: dateLocale })}\n            </Label>\n          )}\n        </div>\n      </div>\n      {/* right */}\n      <div className={getClassName(['sendbird-message-content__right', chainTopClassName, useReactionClassName, useReplyingClassName])}>\n        {/* incoming menu */}\n        {!isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])}>\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { ButtonTypes } from '../../../ui/Button';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n    message,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      type={ButtonTypes.DANGER}\n      disabled={message?.threadInfo?.replyCount > 0}\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    threadInfo: PropTypes.shape({\n      replyCount: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default RemoveMessage;\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useLayoutEffect,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport MessageContent from '../../../ui/MessageContent';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\nimport { getClassName } from '../../../utils';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeparator,\n  deleteMessage,\n  updateMessage,\n  scrollToMessage,\n  resendMessage,\n  useReaction,\n  replyType,\n  chainTop,\n  chainBottom,\n  membersMap,\n  emojiContainer,\n  animatedMessageId,\n  highLightedMessageId,\n  toggleReaction,\n  quoteMessage,\n  setQuoteMessage,\n  renderCustomMessage,\n  currentGroupChannel,\n  handleScroll,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [isHighlighted, setIsHighlighted] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  const { dateLocale } = useContext(LocalizationContext);\n  useLayoutEffect(() => {\n    handleScroll();\n  }, [showEdit, message?.reactions?.length]);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsAnimated(false);\n        setTimeout(() => {\n          setIsHighlighted(true);\n        }, 500);\n      }\n    } else {\n      setIsHighlighted(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  useLayoutEffect(() => {\n    if (animatedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsHighlighted(false);\n        setTimeout(() => {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [animatedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom);\n      // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender?.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={getClassName([\n          'sendbird-msg-hoc sendbird-msg--scroll-ref',\n          isAnimated ? 'sendbird-msg-hoc__animated' : '',\n          isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n        ])}\n      >\n        {/* date-separator */}\n        {\n          hasSeparator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={getClassName([\n        'sendbird-msg-hoc sendbird-msg--scroll-ref',\n        isAnimated ? 'sendbird-msg-hoc__animated' : '',\n        isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n      ])}\n      style={{ marginBottom: '2px' }}\n    >\n      {/* date-separator */}\n      {\n        hasSeparator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      <MessageContent\n        className=\"sendbird-message-hoc__message-content\"\n        userId={userId}\n        scrollToMessage={scrollToMessage}\n        channel={currentGroupChannel}\n        message={message}\n        disabled={disabled}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        useReaction={useReaction}\n        replyType={replyType}\n        nicknamesMap={membersMap}\n        emojiContainer={emojiContainer}\n        showEdit={setShowEdit}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n        quoteMessage={quoteMessage}\n        setQuoteMessage={setQuoteMessage}\n      />\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            message={message}\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n              if (message?.messageId === quoteMessage?.messageId) {\n                setQuoteMessage(null);\n              }\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n    parentMessageId: PropTypes.number,\n    reactions: PropTypes.arrayOf(PropTypes.number),\n  }),\n  animatedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(PropTypes.shape({\n      emojis: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        url: PropTypes.string,\n      })),\n    })),\n  }),\n  toggleReaction: PropTypes.func,\n  quoteMessage: PropTypes.shape({\n    messageId: PropTypes.string,\n  }),\n  setQuoteMessage: PropTypes.func.isRequired,\n  handleScroll: PropTypes.func.isRequired,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeparator: false,\n  disabled: false,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  toggleReaction: () => { },\n  scrollToMessage: () => { },\n  emojiContainer: {},\n  quoteMessage: null,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport { compareMessagesForGrouping } from '../utils';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nconst SCROLL_REF_CLASS_NAME = '.sendbird-msg--scroll-ref';\n\nexport default class ConversationScroll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleScroll = () => {\n    const { scrollRef } = this?.props;\n    const current = scrollRef?.current;\n    if (current) {\n      const bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n      const { scrollBottom = 0 } = this.state;\n      if (scrollBottom < bottom) {\n        current.scrollTop += bottom - scrollBottom;\n      }\n    }\n  }\n\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          // Set block to nearest to prevent unexpected scrolling from outer components\n          try {\n            first.scrollIntoView({ block: 'nearest' });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView({ block: 'nearest' });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n\n      // save the lastest scroll bottom value\n      if (scrollRef?.current) {\n        const current = scrollRef?.current;\n        this.setState((state) => ({\n          ...state,\n          scrollBottom: current.scrollHeight - current.scrollTop - current.offsetHeight,\n        }), () => { });\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      membersMap,\n      allMessages,\n      scrollToMessage,\n      useReaction,\n      replyType,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      animatedMessageId,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n      showScrollBot,\n      onClickScrollBot,\n      quoteMessage,\n      setQuoteMessage,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div className=\"sendbird-conversation__scroll-container\">\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div\n            className=\"sendbird-conversation__messages-padding\"\n            ref={scrollRef}\n            onScroll={this.onScroll}\n          >\n            {\n              allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeparator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            animatedMessageId,\n                            highLightedMessageId,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            onScrollToMessage: scrollToMessage,\n                            onReplyMessage: setQuoteMessage,\n                            emojiContainer,\n                            chainTop,\n                            chainBottom,\n                            hasSeparator,\n                            menuDisabled: disabled,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      animatedMessageId={animatedMessageId}\n                      highLightedMessageId={highLightedMessageId}\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      handleScroll={this.handleScroll}\n                      message={m}\n                      quoteMessage={quoteMessage}\n                      scrollToMessage={scrollToMessage}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      replyType={replyType}\n                      emojiAllMap={emojiAllMap}\n                      emojiContainer={emojiContainer}\n                      editDisabled={editDisabled}\n                      hasSeparator={hasSeparator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      setQuoteMessage={setQuoteMessage}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n        {\n          showScrollBot && (\n            <div\n              className=\"sendbird-conversation__scroll-bottom-button\"\n              onClick={onClickScrollBot}\n              onKeyDown={onClickScrollBot}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <Icon\n                width=\"24px\"\n                height=\"24px\"\n                type={IconTypes.CHEVRON_DOWN}\n                fillColor={IconColors.PRIMARY}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  animatedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.func,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  quoteMessage: PropTypes.shape({}),\n  setQuoteMessage: PropTypes.func.isRequired,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  replyType: 'NONE',\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: () => { },\n  scrollToMessage: () => { },\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n  quoteMessage: null,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator(props) {\n  const {\n    className,\n    channelUrl,\n    sb,\n    logger,\n  } = props;\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label\n      className={className}\n      type={LabelTypography.CAPTION_2}\n      color={LabelColors.ONBACKGROUND_2}\n    >\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\nTypingIndicator.defaultProps = {\n  className: '',\n};\n\nexport default TypingIndicator;\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { isAudioMessage, isFileMessage, isImageMessage, isThumbnailMessage } from '../../utils';\n\ninterface Props {\n  message: FileMessage;\n}\n\nconst componentClassname = 'sendbird-quote_message_input__avatar';\n\nexport default function QuoteMessageThumbnail({ message }: Props): ReactElement {\n  if (!isFileMessage(message)) {\n    return null;\n  }\n\n  const thumbnailUrl: string = (message.thumbnails && message.thumbnails.length > 0 && message.thumbnails[0].url)\n    || (isImageMessage(message) && message.url);\n  if (isThumbnailMessage(message) && thumbnailUrl) {\n    return (\n      <ImageRenderer\n        className={componentClassname}\n        url={thumbnailUrl}\n        alt={message.type}\n        width=\"44px\"\n        height=\"44px\"\n        fixedSize\n      />\n    );\n  } else if (isAudioMessage(message)) {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_AUDIO}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_DOCUMENT}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  }\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport {\n  CoreMessageType,\n  getClassName,\n  isFileMessage,\n  isGifMessage,\n  isImageMessage,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideoMessage,\n} from '../../utils';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport QuoteMessageThumbnail from './QuoteMessageThumbnail';\nimport './index.scss';\n\ninterface Props {\n  className?: string | Array<string>;\n  replyingMessage: CoreMessageType;\n  onClose?: (message: CoreMessageType) => void;\n}\n\nexport default function QuoteMessageInput({\n  className,\n  replyingMessage,\n  onClose,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const fileMessage = replyingMessage as FileMessage;\n  const sender = (replyingMessage as UserMessage | FileMessage)?.sender;\n\n  return (\n    <div className={getClassName(['sendbird-quote_message_input', className])}>\n      <QuoteMessageThumbnail message={fileMessage} />\n      <div\n        className=\"sendbird-quote_message_input__body\"\n        style={{\n          width: `calc(100% - ${fileMessage.isFileMessage() ? '164px' : '120px'})`,\n          left: fileMessage.isFileMessage() ? '92px' : '40px',\n        }}\n      >\n        <Label\n          className=\"sendbird-quote_message_input__body__sender-name\"\n          type={LabelTypography.CAPTION_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {`${stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO} ${(sender && sender.nickname) ? sender.nickname : stringSet.NO_NAME}`}\n        </Label>\n        <Label\n          className=\"sendbird-quote_message_input__body__message-content\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE}\n          {isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO}\n          {isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF}\n          {isUserMessage(replyingMessage as UserMessage) && (replyingMessage as UserMessage).message}\n          {(isFileMessage(fileMessage) && !isThumbnailMessage(fileMessage)) && fileMessage.name}\n        </Label>\n      </div>\n      <Icon\n        className=\"sendbird-quote_message_input__close-button\"\n        type={IconTypes.CLOSE}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"24px\"\n        height=\"24px\"\n        onClick={() => onClose(replyingMessage)}\n      />\n    </div>\n  );\n}\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird, { FileMessage, UserMessage } from 'sendbird';\n\nimport './message-input-wrapper.scss';\nimport { RenderGroupChannelMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport QuoteMessageInput from '../../../ui/QuoteMessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  quoteMessage?: UserMessage | FileMessage;\n  onSendMessage: (quoteMessage?: UserMessage | FileMessage) => void;\n  onFileUpload: (file: File, quoteMessage?: UserMessage | FileMessage) => void;\n  setQuoteMessage: (message: UserMessage | FileMessage) => void;\n  renderMessageInput: (renderProps: RenderGroupChannelMessageInputProps) => JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  isOnline,\n  initialized,\n  quoteMessage,\n  onSendMessage,\n  onFileUpload,\n  setQuoteMessage,\n  renderMessageInput,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled, quoteMessage });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <div className=\"sendbird-message-input-wrapper\">\n      {quoteMessage && (\n        <div className=\"sendbird-message-input-wrapper__quote-message-input\">\n          <QuoteMessageInput\n            replyingMessage={quoteMessage}\n            onClose={() => setQuoteMessage(null)}\n          />\n        </div>\n      )}\n      <MessageInput\n        className=\"sendbird-message-input-wrapper__message-input\"\n        channelUrl={channel?.url}\n        placeholder={\n          (quoteMessage && stringSet.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER)\n          || (utils.isDisabledBecauseFrozen(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n          || (utils.isDisabledBecauseMuted(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED)\n        }\n        ref={ref}\n        disabled={disabled}\n        onStartTyping={() => {\n          channel.startTyping();\n        }}\n        onSendMessage={() => {\n          onSendMessage(quoteMessage);\n          setQuoteMessage(null);\n        }}\n        onFileUpload={(file) => {\n          onFileUpload(file, quoteMessage);\n          setQuoteMessage(null);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-connection-status\">\n      <Label\n        type={LabelTypography.BODY_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.TRYING_TO_CONNECT}\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        width=\"14px\"\n        height=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nconst noop = () => { };\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isMuted,\n    theme,\n    showSearchIcon,\n    onSearchClick,\n    onActionClick,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__left__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        <Label\n          className=\"sendbird-chat-header__left__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle}\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          ((typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted))\n            && (\n              <Icon\n                className=\"sendbird-chat-header__right__mute\"\n                type={IconTypes.NOTIFICATIONS_OFF_FILLED}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            )\n        }\n        {\n          showSearchIcon && (\n            <IconButton\n              className=\"sendbird-chat-header__right__search\"\n              width=\"32px\"\n              height=\"32px\"\n              onClick={onSearchClick}\n            >\n              <Icon\n                type={IconTypes.SEARCH}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </IconButton>\n          )\n        }\n        <IconButton\n          className=\"sendbird-chat-header__right__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon\n            type={IconTypes.INFO}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  theme: PropTypes.string,\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  currentUser: {},\n  title: '',\n  subTitle: '',\n  isMuted: false,\n  theme: 'light',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  onActionClick: noop,\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\nimport useScrollToMessage from './hooks/useScrollToMessage';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    replyType,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  useEffect(() => {\n    if (renderCustomMessage) {\n      // eslint-disable-next-line no-console\n      console.info('The parameter type of renderCustomMessage will be changed to the object in the next minor update.');\n    }\n  }, []);\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [animatedMessageId, setAnimatedMessageId] = useState('');\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries.messageListParams;\n  const [quoteMessage, setQuoteMessage] = useState(null);\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n    // TODO: Make useReaction independent from appInfo.isUsingReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const showScrollBot = hasMoreToBottom;\n\n  // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  // Scrollup is default scroll for channel\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery, replyType,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  }, { logger });\n\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n    replyType,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  useEffect(() => {\n    setQuoteMessage(null);\n  }, [channelUrl]);\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n      setQuoteMessage,\n    },\n  );\n\n  // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n    replyType,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline, replyType }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  // callbacks for Message CURD actions\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  try {\n                    currentGroupChannel.markAsRead();\n                  } catch {\n                    //\n                  }\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\">\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            </div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              animatedMessageId={animatedMessageId}\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              replyType={replyType}\n              allMessages={allMessages}\n              scrollToMessage={scrollToMessage}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              quoteMessage={quoteMessage}\n              setQuoteMessage={setQuoteMessage}\n              showScrollBot={showScrollBot}\n              onClickScrollBot={() => {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              }}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          isOnline={isOnline}\n          initialized={initialized}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          quoteMessage={quoteMessage}\n          setQuoteMessage={setQuoteMessage}\n          renderMessageInput={renderMessageInput}\n        />\n        <div className=\"sendbird-conversation__footer__typing-indicator\">\n          <TypingIndicator className=\"sendbird-conversation__footer__typing-indicator__text\" channelUrl={channelUrl} sb={sdk} logger={logger} />\n          {\n            !isOnline && (\n              <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n            )\n          }\n        </div>\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  replyType: 'NONE',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"]},"metadata":{},"sourceType":"module"}